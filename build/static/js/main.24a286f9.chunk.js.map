{"version":3,"sources":["services/stateManager/index.js","services/stateManager/stateProvider.jsx","services/languageManager/index.js","services/languageManager/locale/en.js","services/languageManager/locale/fa.js","services/utility/index.js","Packages/Login/index.jsx","Packages/Signup/index.jsx","Packages/Home/components/SideBar/components/profileWidget/index.jsx","Packages/Home/components/SideBar/components/SideLinks/linkItem.jsx","Packages/Home/components/SideBar/components/SideLinks/index.jsx","Packages/Home/components/SideBar/index.jsx","Packages/Home/index.jsx","Packages/Categories/tree.jsx","Packages/Categories/modals/AddItemType/index.jsx","Packages/Categories/index.jsx","Packages/ContentType/list/index.jsx","components/CheckBox/index.jsx","components/Divider/index.js","Packages/ContentType/modals/AddNewField/index.jsx","Packages/ContentType/modals/AddNewItemType/index.jsx","Packages/ContentType/index.jsx","Packages/ManageUsers/index.jsx","Packages/Products/FilterBox/contentTypes/index.jsx","Packages/Products/FilterBox/categories/index.jsx","Packages/Products/index.jsx","Packages/Requests/index.jsx","Packages/Quotes/index.jsx","Packages/UpsertProduct/Categories/tree.jsx","Packages/UpsertProduct/Categories/index.jsx","Packages/UpsertProduct/Inputs/Boolean/index.jsx","Packages/UpsertProduct/Inputs/DateTime/index.jsx","Packages/UpsertProduct/Inputs/KeyValue/index.jsx","Packages/UpsertProduct/Inputs/Location/index.jsx","Packages/UpsertProduct/Inputs/Media/index.jsx","Packages/UpsertProduct/Inputs/Number/index.jsx","Packages/UpsertProduct/Inputs/RichText/index.jsx","Packages/UpsertProduct/Inputs/String/index.jsx","Packages/UpsertProduct/index.jsx","routes.js","App.js","serviceWorker.js","index.js"],"names":["StateContext","createContext","StateProvider","_ref","reducer","initialState","children","react_default","a","createElement","Provider","value","useReducer","useGlobalState","useContext","props","stateManager_StateProvider","projectInfo","name","contentTypes","id","title","en","fa","description","type","template","allowCustomFields","fields","isBase","isTranslate","isRequired","categories","contents","sys","issuer","fullName","image","issueDate","contentType","category","thumbnail","shortDesc","price","brand","state","action","Object","objectSpread","concat","toConsumableArray","updatedItems","map","item","Items","filter","systemDefaultLang","direction","languages","translate","LOGIN_TITLE","LOGIN_EMAIL_INPUT_TITLE","LOGIN_EMAIL_INPUT_PLACEHOLDER","LOGIN_EMAIL_INPUT_DESCRIPTION","LOGIN_PASSWORD_INPUT","LOGIN_PASSWORD_INPUT_PLACEHOLDER","LOGIN_PASSWORD_INPUT_DESCRIPTION","LOGIN_SUBMIT_BTN","LOGIN_SOCIAL_TEXT","LOGIN_SIGNUP_LINK_TITLE","LOGIN_SIGNUP_LINK","LOGIN_SOCIAL_BTN_GOOGLE","LOGIN_SOCIAL_BTN_GITHUB","SIGNUP_TITLE","SIGNUP_LOGIN_LINK_TITLE","SIGNUP_LOGIN_LINK","SIGNUP_CONFIRM_PASSWORD_INPUT","SIGNUP_CONFIRM_PASSWORD_INPUT_PLACEHOLDER","SIGNUP_CONFIRM_PASSWORD_INPUT_DESCRIPTION","BRAND_NAME","HOME_NAVS_TITLE","HOME_SIDE_NAV_MANAGET_USERS","HOME_SIDE_NAV_MANAGE_USERS_DESC","HOME_SIDE_NAV_CATEGRIES","HOME_SIDE_NAV_CATEGORIES_DEC","HOME_SIDE_NAV_CONTENT_TYPE","HOME_SIDE_NAV_CONTENT_TYPE_DEC","HOME_SIDE_NAV_PRODUCTS","HOME_SIDE_NAV_PRODUCTS_DESC","HOME_SIDE_NAV_REQUESTS","HOME_SIDE_NAV_REQUESTS_DESC","HOME_SIDE_NAV_QUOTES","HOME_SIDE_NAV_QUOTES_DESC","HOME_SIDEAR_ABOUT","HOME_SIDEBAR_BLOG","HOME_SIDEBAR_DOCUMENT","HOME_COPY_RIGHT","HOME_SIDEBAR_PROFILE_SETTINGS","HOME_SIDEBAR_PROFILE_LOGOUT","CATEGORIES_MODAL_HEADER_TITLE_NEW","CATEGORIES_MODAL_HEADER_TITLE_EDIT","CATEGORIES_NEW_CATEGORY_BTN","CATEGORIES_MODAL_NAME","CATEGORIES_MODAL_NAME_PLACEHOLDER","CATEGORIES_MODAL_NAME_DESCRIPTION","CATEGORIES_MODAL_DESCRIPTION","CATEGORIES_MODAL_DESCRIPTION_PLACEHOLDER","CATEGORIES_MODAL_FOOTER_UPSERT_BTN_NEW","CATEGORIES_MODAL_FOOTER_UPSERT_BTN_EDIT","CANCEL","CATEGROES_CONTENT_TYPES","CATEGORIES_ITEM_TYPES_HEADER_TITLE","CATEGORIES_ITEM_TYPES_HEADER_DESC","CATEGORY_ITEM_TYPE_MODAL_HEADER_TITLE","CONTENT_TYPE_MODAL_HEADER_TITLE_NEW","CONTENT_TYPE_MODAL_FOOTER_UPSERT_BTN_NEW","CONTENT_TYPE_MODAL_HEADER_TITLE_EDIT","CONTENT_TYPE_MODAL_FOOTER_UPSERT_BTN_EDIT","CONTENT_TYPE_MODEL_HEADER_TITLE","CONTENT_TYPE_MODEL_HEADER_DESC","CONTENT_TYPE_MODAL_NAME","CONTENT_TYPE_MODAL_NAME_PLACEHOLDER","CONTENT_TYPE_MODAL_NAME_DESCRIPTION","CONTENT_TYPE_MODAL_DESCRIPTION","CONTENT_TYPE_MODAL_DESCRIPTION_PLACEHOLDER","CONTENT_TYPE_NEW_ITEM_BTN","CONTENT_TYPE_ADD_FIELD_TITLE","CONTENT_TYPE_ADD_FIELD_MODAL_NAME","CONTENT_TYPE_ADD_FIELD_MODAL_NAME_PLACEHOLDER","CONTENT_TYPE_ADD_FIELD_MODAL_NAME_INFO","CONTENT_TYPE_ADD_FIELD_MODAL_TITLE","CONTENT_TYPE_ADD_FIELD_MODAL_TITLE_PLACEHOLDER","CONTENT_TYPE_ADD_FIELD_MODAL_TITLE_INFO","CONTENT_TYPE_ADD_FIELD_MODAL_DESCRIPTION","CONTENT_TYPE_ADD_FIELD_MODAL_DESCRIPTION_PLACEHOLDER","CONTENT_TYPE_ADD_FIELD_MODAL_DESCRIPTION_INFO","CONTENT_TYPE_ADD_FIELD_MODAL_CREATE_BTN","CONTENT_TYPE_ADD_FIELD_MODAL_CREATE_CONFIG_BTN","CONTENT_TYPE_ADD_FIELD_MODAL_CHNAGE_FIELD_BTN","CONTENT_TYPE_ADD_FIELD_CHOOSEN","FIELD_TYPE_RICH_TEXT","FIELD_TYPE_RICH_TEXT_INFO","FIELD_TYPE_TEXT","FIELD_TYPE_TEXT_INFO","FIELD_TYPE_NUMBER","FIELD_TYPE_NUMBER_INFO","FIELD_TYPE_DATE_TIME","FIELD_TYPE_DATE_TIME_INFO","FIELD_TYPE_LOCATION","FIELD_TYPE_LOCATION_INFO","FIELD_TYPE_MEDIA","FIELD_TYPE_MEDIA_INFO","FIELD_TYPE_KEY_VALUE","FIELD_TYPE_KEY_VALUE_INFO","FIELD_TYPE_BOOLEAN","FIELD_TYPE_BOOLEAN_INFO","FIELD_TYPE_OBJECT","FIELD_TYPE_OBJECT_INFO","FIELD_TYPE_REFERENCE","FIELD_TYPE_REFERENCE_INFO","ITEM_TYPES_FIELDS","ITEMS_CATEGORIES_CONTENT","CATEGROES_FIELDS","CATEGORIES_MODEL_HEADER_TITLE","CATEGORIES_MODEL_HEADER_DESC","CATEGORY_ADD_FIELD_TITLE","CATEGORY_ADD_FIELD_CHOOSEN","CATEGORIES_ADD_FIELD_MODAL_NAME","CATEGORIES_ADD_FIELD_MODAL_NAME_PLACEHOLDER","CATEGORIES_ADD_FIELD_MODAL_NAME_INFO","CATEGORIES_ADD_FIELD_MODAL_TITLE","CATEGORIES_ADD_FIELD_MODAL_TITLE_PLACEHOLDER","CATEGORIES_ADD_FIELD_MODAL_TITLE_INFO","CATEGORIES_ADD_FIELD_MODAL_DESCRIPTION","CATEGORIES_ADD_FIELD_MODAL_DESCRIPTION_PLACEHOLDER","CATEGORIES_ADD_FIELD_MODAL_DESCRIPTION_INFO","CATEGORIES_ADD_FIELD_MODAL_CREATE_BTN","CATEGORIES_ADD_FIELD_MODAL_CREATE_CONFIG_BTN","CATEGORIES_ADD_FIELD_MODAL_CHNAGE_FIELD_BTN","currentLanguage","allowEmptyValues","languageManager","key","undefined","setLanguage","langName","hasOwnProperty","keys","getCurrentLanguage","getCurrentLayout","setAppLanguages","enabledLanguages","getAllLanguages","isRTL","utility","applyeLangs","langs","data","memo","_len","arguments","length","Array","_key","className","aria-describedby","placeholder","onClick","history","replace","Link","to","ProfileWidget","_useState","useState","_useState2","slicedToArray","dropDownVisibility","toggleVisibility","Dropdown","isOpen","toggle","prevState","DropdownToggle","DropdownMenu","DropdownItem","LinkItem","link","icon","NavLink","path","activeClassName","desc","NavLinks","links","Fragment","linkItem","SideBar","_useGlobalState","_useGlobalState2","profileWidget","SideLinks","href","Home","components_SideBar","routes","Tree","selected","currentLang","event","target","getAttribute","_this","setState","defineProperty","mapper","nodes","parentId","lvl","node","index","ListGroupItem","style","zIndex","padding","background","paddingLeft","color","size","handleDeleteCategory","handleEditCategory","handleItemTypes","fontSize","itemTypes","handleNewCategory","fontWeight","Collapse","ListGroup","this","current_state","rightContent","Component","AddNewField","items","selectedCategory","d","slice","j","i","makeData","allData","_useState3","_useState4","toggleModal","closeModal","params","onCloseModal","useEffect","Modal","ModalHeader","ModalBody","for","onChange","e","checked","push","arr","handleChooseItem","useInput","defaultValue","input","setInput","Categories","_useGlobalState2$","dispatch","_props$component","component","pageTitle","pageDescription","newCategoryNameInput","useRef","upsertCategoryModal","setModal","_useState5","_useState6","upsertItemTypeModal","toggleUpsertItemTypeModal","_useInput","_useInput2","handleNameChanged","_useInput3","_useInput4","handleDesciptionChanged","_useState7","_useState8","setSelectedCategory","_useState9","_useState10","setItemTypes","_useState11","_useState12","updateMode","setUpdateMode","_useState13","_useState14","modalHeaderTitle","setModalHeader","_useState15","_useState16","modalUpsertBtn","setModalUpsertBtnText","_useState17","_useState18","toggleRightContent","_useState19","_useState20","isManageCategory","setManageCategory","initModalForm","prevModal","closeAddCategoryModal","updateNodeInList","list","newValue","removeCategoryItem","deleteNodeInList","splice","closeAddItemTypeModal","updateCategoryItemTypes","tree","setTimeout","current","focus","m","showItemTypes","itemType","handleRemoveItemType","Form","ref","required","FormGroup","Label","Input","ModalFooter","Button","newCategory","obj","Math","random","toString","upsertCategory","disabled","AddItemType","List","setSelected","listItem","backgroundColor","marginRight","handleDeleteType","handleEditType","handleShowFields","CheckBox","objectWithoutProperties","assign","nameInput","tab","changeTab","newFieldHeaderTitle","setAddFieldHeaderTitle","selectedField","setField","setName","setTitle","setDescription","translation","toggleTranslation","closeAddFieldModal","field","handleChooseField","components_CheckBox","onAddField","includes","templates","isList","UpsertTemplate","submitBtnText","selectedItemType","selectedTemplate","setTemplate","tmp","handleChooseTemplate","ItemTypes","upsertFieldModal","toggleUpsertFieldModal","toggleUpserItemTypeModal","setItemType","setFields","removeItemType","handleRemoveField","AddNewItemType","console","log","upsertItemType","modals_AddNewField","handleAddField","ManageUsers","ContentTypeFilter","filters","find","onContentTypeSelect","idState","setId","n_s","onCategorySelect","display","Products","baseFieldColumnsConfig","Header","width","headerStyle","Cell","accessor","src","alt","handleEditRow","original","tableData","setTableData","tableBox","listContent","leftContent","toggleLeftContent","searchText","setSearchText","setSelectedNode","setSelectedContentType","columns","dataFilters","setFilters","row","pathname","toLowerCase","doFiltersOnData","f","removeFilter","FilterBox_contentTypes","handleContentTypeSelect","FilterBox_categories","handleClickCategory","es","defaultPageSize","minRows","showPaginationTop","showPaginationBottom","border","overflow","height","Requests","Quotes","hasContentType","onRowSelect","Categories_tree","handleRowSelect","BooleanComponent","appearance","DateTimeInput","KeyValueInput","options","option","class","LocationInput","MediaInput","formData","images","setImages","init","imgs","url","img","onChangeValue","removeImage","URL","createObjectURL","files","NumberInput","RichTextInput","StringInput","handleOnChange","isValid","isMultiLine","UpsertProduct","selectedItem","match","toggleUpdateMode","toggleTab","categoryModal","toggleCategoryModal","setCategory","setContentType","setFormData","formValidation","setFormValidation","setNameToFormValidation","prevFormValidation","handleOnChangeValue","backToProducts","sort","b","upsertItem","closePage","c","getItemById","join","Inputs_String","Inputs_Number","DateTime","Location","Media","Inputs_Boolean","KeyValue","RichText","getFieldItem","UpsertProduct_Categories","Login","Signup","ContentType","App","stateProvider","BrowserRouter","Switch","Routes","route","Route","render","nestedRoutes","nestedRoute","exact","NestedComponent","p","Redirect","from","Boolean","window","location","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.24a286f9.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer } from \"react\";\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children}\r\n  </StateContext.Provider>\r\n);\r\n\r\nconst useGlobalState = () => useContext(StateContext);\r\nexport default useGlobalState;\r\n","import React from \"react\";\r\nimport { StateProvider } from \"./index\";\r\nconst Provider = props => {\r\n  const initialState = {\r\n    projectInfo: { name: \"REQTER\" },\r\n    contentTypes: [\r\n      {\r\n        id: \"1\",\r\n        name: \"generic\",\r\n        title: {\r\n          en: \"Generic Item\",\r\n          fa: \"آیتم عمومی\"\r\n        },\r\n        description: {\r\n          en: \"Lorem ipsum dolor sit amet, consectetur\",\r\n          fa: \"Lorem ipsum dolor sit amet, consectetur\"\r\n        },\r\n        type: \"contentType\",\r\n        template: \"generic\",\r\n        allowCustomFields: true,\r\n        fields: [\r\n          {\r\n            id: \"1\",\r\n            name: \"name\",\r\n            title: {\r\n              en: \"Name\",\r\n              fa: \"Name\"\r\n            },\r\n            description: {\r\n              fa: \"name of each product\",\r\n              en: \"name of each product\"\r\n            },\r\n            type: \"string\",\r\n            isBase: true,\r\n            isTranslate: true,\r\n            isRequired: true\r\n          },\r\n          {\r\n            id: \"2\",\r\n            name: \"shortDesc\",\r\n            title: {\r\n              fa: \"Short Description\",\r\n              en: \"Short Description\"\r\n            },\r\n            description: {\r\n              fa: \"\",\r\n              en: \"\"\r\n            },\r\n            type: \"string\",\r\n            isBase: true,\r\n            isTranslate: true\r\n          },\r\n          {\r\n            id: \"3\",\r\n            name: \"thumbnail\",\r\n            title: {\r\n              fa: \"Thumbnail\",\r\n              en: \"Thumbnail\"\r\n            },\r\n            description: {\r\n              fa: \"\",\r\n              en: \"\"\r\n            },\r\n            type: \"media\",\r\n            isBase: true,\r\n            isTranslate: true,\r\n            isRequired: true\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    categories: [\r\n      {\r\n        id: \"1\",\r\n        name: { fa: \"اخبار\", en: \"News\" },\r\n        description: {\r\n          fa: \"\",\r\n          en: \"\"\r\n        },\r\n        type: \"category\"\r\n      }\r\n    ],\r\n    contents: [\r\n      {\r\n        sys: {\r\n          id: \"1\",\r\n          issuer: {\r\n            id: \"1\",\r\n            fullName: \"Saeed Padyab\",\r\n            image: \"\"\r\n          },\r\n          issueDate: \"19/01/2019 20:18\"\r\n        },\r\n        contentType: {\r\n          id: \"1\",\r\n          name: \"fruits\",\r\n          title: {\r\n            en: \"Fruits\",\r\n            fa: \"میوه\"\r\n          }\r\n        },\r\n        category: {\r\n          id: \"1\",\r\n          name: {\r\n            en: \"Products\",\r\n            fa: \"محصولات\"\r\n          }\r\n        },\r\n        fields: {\r\n          thumbnail: {\r\n            en:\r\n              \"https://myresources1195.blob.core.windows.net/images/banana.jpg\",\r\n            fa:\r\n              \"https://myresources1195.blob.core.windows.net/images/banana.jpg\"\r\n          },\r\n          name: {\r\n            en: \"Banana\",\r\n            fa: \"موز ممتاز\"\r\n          },\r\n          shortDesc: {\r\n            en: \"Imported product from africa\",\r\n            fa: \"محصولات وارداتی از افریقا\"\r\n          },\r\n          price: \"2500\",\r\n          brand: {\r\n            en: \"Chicita\",\r\n            fa: \"چیکیتا\"\r\n          }\r\n        }\r\n      }\r\n    ]\r\n  };\r\n\r\n  const reducer = (state, action) => {\r\n    switch (action.type) {\r\n      case \"SET_CONTENT_TYPES\":\r\n        const s = {\r\n          ...state,\r\n          contentTypes: action.value\r\n        };\r\n        return s;\r\n      case \"SET_CATEGORIES\":\r\n        return {\r\n          ...state,\r\n          categories: action.value\r\n        };\r\n      case \"SET_CONTENTS\":\r\n        return {\r\n          ...state,\r\n          contents: action.value\r\n        };\r\n      case \"ADD_ITEM_TO_CONTENTS\":\r\n        return {\r\n          ...state,\r\n          contents: [...state.contents, action.value]\r\n        };\r\n      case \"UPDATE_ITEM\":\r\n        const updatedItems = state.contents.map(item => {\r\n          if (item.sys.id === action.value.sys.id) {\r\n            return { ...item, ...action.value };\r\n          }\r\n          return item;\r\n        });\r\n        return {\r\n          ...state,\r\n          contents: updatedItems\r\n        };\r\n      case \"DELETE_ITEM\":\r\n        const Items = state.contents.filter(\r\n          item => item.sys.id !== action.value.sys.id\r\n        );\r\n        return {\r\n          ...state,\r\n          contents: Items\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StateProvider initialState={initialState} reducer={reducer}>\r\n      {props.children}\r\n    </StateProvider>\r\n  );\r\n};\r\nexport default Provider;\r\n","import en from \"./locale/en\";\r\nimport fa from \"./locale/fa\";\r\nlet systemDefaultLang = {\r\n  title: \"فارسی\",\r\n  direction: \"rtl\",\r\n  name: \"fa\",\r\n  description: \"جمهوری اسلامی ایران\"\r\n};\r\n\r\nlet languages = {\r\n  fa: {\r\n    title: \"فارسی\",\r\n    direction: \"rtl\",\r\n    name: \"fa\",\r\n    description: \"جمهوری اسلامی ایران\"\r\n  },\r\n  en: {\r\n    title: \"English\",\r\n    name: \"en\",\r\n    direction: \"ltr\",\r\n    description: \"United Kingdom\"\r\n  }\r\n};\r\nlet translate = {\r\n  en,\r\n  fa\r\n};\r\n\r\n// let currentLanguage = {\r\n//   title: \"فارسی\",\r\n//   direction: \"rtl\",\r\n//   name: \"fa\",\r\n//   description: \"جمهوری اسلامی ایران\"\r\n// };\r\n\r\nlet currentLanguage = {\r\n  title: \"English\",\r\n  name: \"en\",\r\n  direction: \"ltr\",\r\n  description: \"United Kingdom\",\r\n  allowEmptyValues: false\r\n};\r\n\r\nconst languageManager = {\r\n  translate(key) {\r\n    if (translate !== undefined && translate[currentLanguage.name])\r\n      return translate[currentLanguage.name][key]\r\n        ? translate[currentLanguage.name][key]\r\n        : key;\r\n    else return key;\r\n  },\r\n  setLanguage(langName) {\r\n    if (langName !== undefined) {\r\n      if (!languages.hasOwnProperty(langName)) {\r\n        currentLanguage = languages[Object.keys(languages)[0]];\r\n      } else {\r\n        currentLanguage = languages[langName];\r\n      }\r\n      if (\r\n        !(currentLanguage && currentLanguage.name && currentLanguage.direction)\r\n      ) {\r\n        currentLanguage = systemDefaultLang;\r\n      }\r\n      //EventRegister.emit(\"onLanguageChanged\", currentLanguage);\r\n    }\r\n  },\r\n  getCurrentLanguage() {\r\n    return currentLanguage;\r\n  },\r\n  getCurrentLayout() {\r\n    return currentLanguage.direction;\r\n  },\r\n  setAppLanguages(enabledLanguages) {\r\n    if (enabledLanguages) {\r\n      languages = enabledLanguages;\r\n    }\r\n  },\r\n  getAllLanguages() {\r\n    return languages;\r\n  },\r\n  get isRTL() {\r\n    return currentLanguage.direction === \"rtl\" ? true : false;\r\n  }\r\n};\r\nexport default languageManager;\r\n","export default {\r\n  LOGIN_TITLE: \"SignIn Reqter\",\r\n  LOGIN_EMAIL_INPUT_TITLE: \"Email Address\",\r\n  LOGIN_EMAIL_INPUT_PLACEHOLDER: \"Enter email\",\r\n  LOGIN_EMAIL_INPUT_DESCRIPTION: \"you can also enter your username\",\r\n  LOGIN_PASSWORD_INPUT: \"Password\",\r\n  LOGIN_PASSWORD_INPUT_PLACEHOLDER: \"Enter pssword\",\r\n  LOGIN_PASSWORD_INPUT_DESCRIPTION: \"Password must be at least 6 character\",\r\n  LOGIN_SUBMIT_BTN: \"Submit\",\r\n  LOGIN_SOCIAL_TEXT: \"OR SIGNIN WITH\",\r\n  LOGIN_SIGNUP_LINK_TITLE: \"New to REQTER ?\",\r\n  LOGIN_SIGNUP_LINK: \"Create an accout\",\r\n  LOGIN_SOCIAL_BTN_GOOGLE: \"Google\",\r\n  LOGIN_SOCIAL_BTN_GITHUB: \"Github\",\r\n\r\n  // SIGNUP\r\n  SIGNUP_TITLE: \"Signup Reqter\",\r\n  SIGNUP_LOGIN_LINK_TITLE: \"Have an account?\",\r\n  SIGNUP_LOGIN_LINK: \"Login\",\r\n  SIGNUP_CONFIRM_PASSWORD_INPUT: \"Confirm Password\",\r\n  SIGNUP_CONFIRM_PASSWORD_INPUT_PLACEHOLDER: \"Confirm your password\",\r\n  SIGNUP_CONFIRM_PASSWORD_INPUT_DESCRIPTION:\r\n    \"Password must be at least 6 character\",\r\n  // home\r\n  BRAND_NAME: \"REQTER\",\r\n  HOME_NAVS_TITLE: \"Features\",\r\n  HOME_SIDE_NAV_MANAGET_USERS: \"Users\",\r\n  HOME_SIDE_NAV_MANAGE_USERS_DESC: \"Manage users of your apps\",\r\n  HOME_SIDE_NAV_CATEGRIES: \"Categories\",\r\n  HOME_SIDE_NAV_CATEGORIES_DEC: \"Define your business categories\",\r\n  HOME_SIDE_NAV_CONTENT_TYPE: \"Item Types\",\r\n  HOME_SIDE_NAV_CONTENT_TYPE_DEC: \"Manage your item types\",\r\n  HOME_SIDE_NAV_PRODUCTS: \"Items\",\r\n  HOME_SIDE_NAV_PRODUCTS_DESC: \"Define and manage your items\",\r\n  HOME_SIDE_NAV_REQUESTS: \"Requests\",\r\n  HOME_SIDE_NAV_REQUESTS_DESC: \"View and approve incoming requests\",\r\n  HOME_SIDE_NAV_QUOTES: \"Quotes\",\r\n  HOME_SIDE_NAV_QUOTES_DESC: \"View and approve offers from vendors\",\r\n  HOME_SIDEAR_ABOUT: \"About\",\r\n  HOME_SIDEBAR_BLOG: \"Blog\",\r\n  HOME_SIDEBAR_DOCUMENT: \"Document\",\r\n  HOME_COPY_RIGHT: \"@2019 Copyright\",\r\n  HOME_SIDEBAR_PROFILE_SETTINGS: \"Settings\",\r\n  HOME_SIDEBAR_PROFILE_LOGOUT: \"Logout\",\r\n  //category\r\n  CATEGORIES_MODAL_HEADER_TITLE_NEW: \"New Category\",\r\n  CATEGORIES_MODAL_HEADER_TITLE_EDIT: \"Edit Category\",\r\n  CATEGORIES_NEW_CATEGORY_BTN: \"New Category\",\r\n  CATEGORIES_MODAL_NAME: \"Name\",\r\n  CATEGORIES_MODAL_NAME_PLACEHOLDER: \"Enter name of your category\",\r\n  CATEGORIES_MODAL_NAME_DESCRIPTION: \"try to enter meaningfull name\",\r\n  CATEGORIES_MODAL_DESCRIPTION: \"Description\",\r\n  CATEGORIES_MODAL_DESCRIPTION_PLACEHOLDER: \"Enter a short description\",\r\n  CATEGORIES_MODAL_FOOTER_UPSERT_BTN_NEW: \"Create\",\r\n  CATEGORIES_MODAL_FOOTER_UPSERT_BTN_EDIT: \"Edit\",\r\n  CANCEL: \"Cancel\",\r\n  CATEGROES_CONTENT_TYPES: \"Item Types\",\r\n  CATEGORIES_ITEM_TYPES_HEADER_TITLE: \"Manage Item Types\",\r\n  CATEGORIES_ITEM_TYPES_HEADER_DESC: \"Lorem ipsum dolor sit amet, consectetur\",\r\n  CATEGORY_ITEM_TYPE_MODAL_HEADER_TITLE:\"Add item types to category\",\r\n\r\n  // CONTENT TYPE\r\n  CONTENT_TYPE_MODAL_HEADER_TITLE_NEW: \"Add New Item Type\",\r\n  CONTENT_TYPE_MODAL_FOOTER_UPSERT_BTN_NEW: \"Create\",\r\n  CONTENT_TYPE_MODAL_HEADER_TITLE_EDIT: \"Edit Item Type\",\r\n  CONTENT_TYPE_MODAL_FOOTER_UPSERT_BTN_EDIT: \"Edit\",\r\n  CONTENT_TYPE_MODEL_HEADER_TITLE: \"Manage Fields\",\r\n  CONTENT_TYPE_MODEL_HEADER_DESC: \"Lorem ipsum dolor sit amet, consectetur\",\r\n  CONTENT_TYPE_MODAL_NAME: \"Name\",\r\n  CONTENT_TYPE_MODAL_NAME_PLACEHOLDER: \"Enter name of your type\",\r\n  CONTENT_TYPE_MODAL_NAME_DESCRIPTION: \"try to enter meaningfull name\",\r\n  CONTENT_TYPE_MODAL_DESCRIPTION: \"Description\",\r\n  CONTENT_TYPE_MODAL_DESCRIPTION_PLACEHOLDER: \"Enter a short description\",\r\n  CONTENT_TYPE_NEW_ITEM_BTN: \"New Item Type\",\r\n  CONTENT_TYPE_ADD_FIELD_TITLE: \"Add New Field\",\r\n  CONTENT_TYPE_ADD_FIELD_MODAL_NAME: \"Name\",\r\n  CONTENT_TYPE_ADD_FIELD_MODAL_NAME_PLACEHOLDER: \"Enter name of your field\",\r\n  CONTENT_TYPE_ADD_FIELD_MODAL_NAME_INFO: \"name can not be included space\",\r\n  CONTENT_TYPE_ADD_FIELD_MODAL_TITLE: \"Title\",\r\n  CONTENT_TYPE_ADD_FIELD_MODAL_TITLE_PLACEHOLDER: \"Enter field title\",\r\n  CONTENT_TYPE_ADD_FIELD_MODAL_TITLE_INFO: \"Title will display all of places\",\r\n  CONTENT_TYPE_ADD_FIELD_MODAL_DESCRIPTION: \"Description\",\r\n  CONTENT_TYPE_ADD_FIELD_MODAL_DESCRIPTION_PLACEHOLDER:\r\n    \"Enter a short description\",\r\n  CONTENT_TYPE_ADD_FIELD_MODAL_DESCRIPTION_INFO: \"opetional\",\r\n  CONTENT_TYPE_ADD_FIELD_MODAL_CREATE_BTN: \"Create\",\r\n  CONTENT_TYPE_ADD_FIELD_MODAL_CREATE_CONFIG_BTN: \"Create and configure\",\r\n  CONTENT_TYPE_ADD_FIELD_MODAL_CHNAGE_FIELD_BTN: \"Change Field Type\",\r\n  CONTENT_TYPE_ADD_FIELD_CHOOSEN: \"New\",\r\n  FIELD_TYPE_RICH_TEXT: \"Rich Text\",\r\n  FIELD_TYPE_RICH_TEXT_INFO: \"Descriptive content ,for example blog post\",\r\n  FIELD_TYPE_TEXT: \"Text\",\r\n  FIELD_TYPE_TEXT_INFO: \"Titles, names, paragraphs, list of names\",\r\n  FIELD_TYPE_NUMBER: \"Number\",\r\n  FIELD_TYPE_NUMBER_INFO: \"ID, order number, rating, quantity\",\r\n  FIELD_TYPE_DATE_TIME: \"Date and time\",\r\n  FIELD_TYPE_DATE_TIME_INFO: \"Event date, opening hours\",\r\n  FIELD_TYPE_LOCATION: \"Location\",\r\n  FIELD_TYPE_LOCATION_INFO: \"Coordinates: latitude and longitude\",\r\n  FIELD_TYPE_MEDIA: \"Media\",\r\n  FIELD_TYPE_MEDIA_INFO: \"Images, videos, PDFs and other files\",\r\n  FIELD_TYPE_KEY_VALUE: \"Options\",\r\n  FIELD_TYPE_KEY_VALUE_INFO: \"For example, Brand of a car\",\r\n  FIELD_TYPE_BOOLEAN: \"Boolean\",\r\n  FIELD_TYPE_BOOLEAN_INFO: \"Yes or no, 1 or 0, true or false\",\r\n  FIELD_TYPE_OBJECT: \"Json Object\",\r\n  FIELD_TYPE_OBJECT_INFO: \"Data in JSON format\",\r\n  FIELD_TYPE_REFERENCE: \"Reference\",\r\n  FIELD_TYPE_REFERENCE_INFO:\r\n    \"For example, a blog post can reference its author(s)\",\r\n\r\n  // ITEM TYPES\r\n  ITEM_TYPES_FIELDS: \"Fields\",\r\n  // items\r\n  ITEMS_CATEGORIES_CONTENT: \"Content\"\r\n};\r\n","export default {\r\n  LOGIN_TITLE: \"ورود به ریکوئتر\",\r\n  LOGIN_EMAIL_INPUT_TITLE: \"ایمیل\",\r\n  LOGIN_EMAIL_INPUT_PLACEHOLDER: \"ایمیل خود را وارد کنید\",\r\n  LOGIN_EMAIL_INPUT_DESCRIPTION: \"با نام کاربری خود هم میتوانید وارد شوید\",\r\n  LOGIN_PASSWORD_INPUT: \"رمز عبور\",\r\n  LOGIN_PASSWORD_INPUT_PLACEHOLDER: \"رمز عبور خود را وارد کنید\",\r\n  LOGIN_PASSWORD_INPUT_DESCRIPTION: \"رمز عبور حداقل 6 کاراکتر میباشد\",\r\n  LOGIN_SUBMIT_BTN: \"ورود\",\r\n  LOGIN_SOCIAL_TEXT: \"ورود با حساب کاربری\",\r\n  LOGIN_SIGNUP_LINK_TITLE: \"حساب کاربری نداری؟\",\r\n  LOGIN_SIGNUP_LINK: \"وارد شو\",\r\n  LOGIN_SOCIAL_BTN_GOOGLE: \"گوگل\",\r\n  LOGIN_SOCIAL_BTN_GITHUB: \"گیت هاب\",\r\n  // SIGNUP\r\n  SIGNUP_TITLE: \"ثبت نام در ریکونتر\",\r\n  SIGNUP_LOGIN_LINK_TITLE: \"ثبت نام کرده اید ؟\",\r\n  SIGNUP_LOGIN_LINK: \"ورود\",\r\n  SIGNUP_CONFIRM_PASSWORD_INPUT: \"تایید رمز عبور\",\r\n  SIGNUP_CONFIRM_PASSWORD_INPUT_PLACEHOLDER: \"تایید رمز عبور\",\r\n  SIGNUP_CONFIRM_PASSWORD_INPUT_DESCRIPTION: \"رمز عبور حداقل 6 کاراکتر میباشد\",\r\n  // home\r\n  BRAND_NAME: \"REQTER\",\r\n  HOME_NAVS_TITLE: \"ابزارها و امکانات\",\r\n  HOME_SIDE_NAV_MANAGET_USERS: \"مدیریت کاربران\",\r\n  HOME_SIDE_NAV_MANAGE_USERS_DESC: \"کاربران اپلیکیشن های خود را مدیریت کنید\",\r\n  HOME_SIDE_NAV_CATEGRIES: \"دسته بندی ها\",\r\n  HOME_SIDE_NAV_CATEGORIES_DEC: \"دسته بندی های خود را مدیریت کنید\",\r\n  HOME_SIDE_NAV_CONTENT_TYPE: \"انواع آیتم ها\",\r\n  HOME_SIDE_NAV_CONTENT_TYPE_DEC: \"آیتم های خود را تعریف و مدیریت کنید\",\r\n  HOME_SIDE_NAV_PRODUCTS: \"آیتم ها\",\r\n  HOME_SIDE_NAV_PRODUCTS_DESC: \"آیتم های خود را مدیریت کنید\",\r\n  HOME_SIDE_NAV_REQUESTS: \"درخواست ها\",\r\n  HOME_SIDE_NAV_REQUESTS_DESC: \"مشاهده و مدیریت درخواست های رسیده\",\r\n  HOME_SIDE_NAV_QUOTES: \"پیشنهادات\",\r\n  HOME_SIDE_NAV_QUOTES_DESC: \"مشاهده و مدیریت پیشنهادات ارائه شده\",\r\n  HOME_SIDEAR_ABOUT: \"دربار ما\",\r\n  HOME_SIDEBAR_BLOG: \"رویدادها\",\r\n  HOME_SIDEBAR_DOCUMENT: \"مستندات\",\r\n  HOME_COPY_RIGHT: \"@2019 حق نمونه برداری\",\r\n  HOME_SIDEBAR_PROFILE_SETTINGS: \"تنظیمات\",\r\n  HOME_SIDEBAR_PROFILE_LOGOUT: \"خروج\",\r\n  //category\r\n  CATEGORIES_MODAL_HEADER_TITLE_NEW: \"دسته بندی جدید\",\r\n  CATEGORIES_MODAL_HEADER_TITLE_EDIT: \"ویرایش دسته بندی\",\r\n  CATEGORIES_NEW_CATEGORY_BTN: \"دسته بندی جدید\",\r\n  CATEGORIES_MODAL_NAME: \"نام\",\r\n  CATEGORIES_MODAL_NAME_PLACEHOLDER: \"نام دسته بندی خود را وارد کنید\",\r\n  CATEGORIES_MODAL_NAME_DESCRIPTION: \"نام با محتوا انتخاب کنید\",\r\n  CATEGORIES_MODAL_DESCRIPTION: \"توضیحات\",\r\n  CATEGORIES_MODAL_DESCRIPTION_PLACEHOLDER: \"توضیح کوتاه برای دسته بندی\",\r\n  CATEGORIES_MODAL_FOOTER_UPSERT_BTN_NEW: \"ایجاد\",\r\n  CATEGORIES_MODAL_FOOTER_UPSERT_BTN_EDIT: \"ویرایش\",\r\n  CANCEL: \"انصراف\",\r\n  CATEGROES_FIELDS:\"دیتا مدل\",\r\n\r\n  CATEGORIES_MODEL_HEADER_TITLE: \"مدیریت مدل\",\r\n  CATEGORIES_MODEL_HEADER_DESC: \"مدیریت مدل برای دیتا مدل\",\r\n  CATEGORY_ADD_FIELD_TITLE: \"ایجاد مدل جدید\",\r\n  CATEGORY_ADD_FIELD_CHOOSEN: \"ایجاد مدل\",\r\n  CATEGORIES_ADD_FIELD_MODAL_NAME: \"نام\",\r\n  CATEGORIES_ADD_FIELD_MODAL_NAME_PLACEHOLDER: \"نام مدل خود را وارد کنید\",\r\n  CATEGORIES_ADD_FIELD_MODAL_NAME_INFO: \"نام نمیتواند حاوی فاصله باشد\",\r\n  CATEGORIES_ADD_FIELD_MODAL_TITLE: \"عنوان\",\r\n  CATEGORIES_ADD_FIELD_MODAL_TITLE_PLACEHOLDER: \"عنوان مدل را وارد کنید\",\r\n  CATEGORIES_ADD_FIELD_MODAL_TITLE_INFO: \"عنوان را همه جا میبینید\",\r\n  CATEGORIES_ADD_FIELD_MODAL_DESCRIPTION: \"توضیحات\",\r\n  CATEGORIES_ADD_FIELD_MODAL_DESCRIPTION_PLACEHOLDER:\r\n    \"توضیح کوتاه\",\r\n  CATEGORIES_ADD_FIELD_MODAL_DESCRIPTION_INFO: \"اختیاری\",\r\n  CATEGORIES_ADD_FIELD_MODAL_CREATE_BTN: \"ایجاد\",\r\n  CATEGORIES_ADD_FIELD_MODAL_CREATE_CONFIG_BTN: \"ایجاد و تنظیمات\",\r\n  CATEGORIES_ADD_FIELD_MODAL_CHNAGE_FIELD_BTN: \"تغییر نوع مدل\",\r\n  FIELD_TYPE_TEXT: \"رشته\",\r\n  FIELD_TYPE_TEXT_INFO: \"عناوین ، نام ها، پاراگراف ها و لیستی از نام ها\",\r\n  FIELD_TYPE_NUMBER: \"عدد\",\r\n  FIELD_TYPE_NUMBER_INFO: \"شناسه ، شماره سفارش ، ارزیابی و تعداد\",\r\n  FIELD_TYPE_DATE_TIME: \"تاریخ و زمان\",\r\n  FIELD_TYPE_DATE_TIME_INFO: \"تاریخ یک رویداد\",\r\n  FIELD_TYPE_LOCATION: \"موقعیت\",\r\n  FIELD_TYPE_LOCATION_INFO: \"مکان روی نفشه\",\r\n  FIELD_TYPE_MEDIA: \"رسانه\",\r\n  FIELD_TYPE_MEDIA_INFO: \"عکس و ویدیو وفایل های مختلف\",\r\n  FIELD_TYPE_BOOLEAN: \"منطقی\",\r\n  FIELD_TYPE_BOOLEAN_INFO: \"بله و خیر ، صفر و یک\",\r\n  FIELD_TYPE_OBJECT: \"شی جی سون\",\r\n  FIELD_TYPE_OBJECT_INFO: \"داده با نمایش جی  سون\",\r\n  FIELD_TYPE_REFERENCE: \"اشاره گر\",\r\n  FIELD_TYPE_REFERENCE_INFO:\r\n    \"برای مثال، یک بلاگ پست میتواند به یک نویسنده وصل باشد\",\r\n  // items\r\n  ITEMS_CATEGORIES_CONTENT: \"محتوا\"\r\n};\r\n","import languageManager from \"./../languageManager\";\r\nexport default {\r\n  applyeLangs(value) {\r\n    const langs = languageManager.getAllLanguages();\r\n    const data = {};\r\n    for (const key in langs) {\r\n      data[key] = value;\r\n    }\r\n    return data;\r\n  }\r\n};\r\n","import React, { memo } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { languageManager } from \"./../../services\";\r\nimport \"./styles.scss\";\r\n\r\nconst Login = (...props) => {\r\n  // const [visibility, setVisibility] = useState(0);\r\n  // function signIn() {\r\n  //   setVisibility({ visibility: true });\r\n  // }\r\n  const login = () => {\r\n    props[0].history.replace(\"home\");\r\n  };\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"center\">\r\n        <div className=\"header\">\r\n          <span className=\"header-title\">\r\n            {languageManager.translate(\"LOGIN_TITLE\")}\r\n          </span>\r\n        </div>\r\n        <div className=\"body\">\r\n          <form>\r\n            <div className=\"form-group\">\r\n              <label>\r\n                {languageManager.translate(\"LOGIN_EMAIL_INPUT_TITLE\")}\r\n              </label>\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                id=\"exampleInputEmail1\"\r\n                aria-describedby=\"emailHelp\"\r\n                placeholder={languageManager.translate(\r\n                  \"LOGIN_EMAIL_INPUT_PLACEHOLDER\"\r\n                )}\r\n              />\r\n              <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                {languageManager.translate(\"LOGIN_EMAIL_INPUT_DESCRIPTION\")}\r\n              </small>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>{languageManager.translate(\"LOGIN_PASSWORD_INPUT\")}</label>\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                id=\"exampleInputPassword1\"\r\n                placeholder={languageManager.translate(\r\n                  \"LOGIN_PASSWORD_INPUT_PLACEHOLDER\"\r\n                )}\r\n              />\r\n              <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                {languageManager.translate(\"LOGIN_PASSWORD_INPUT_DESCRIPTION\")}\r\n              </small>\r\n            </div>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary btn-block btn-submit\"\r\n              onClick={() => login()}\r\n            >\r\n              {languageManager.translate(\"LOGIN_SUBMIT_BTN\")}\r\n            </button>\r\n          </form>\r\n          {/* <div className=\"divider\">\r\n            <Divider>{languageManager.translate(\"LOGIN_SOCIAL_TEXT\")}</Divider>\r\n          </div>\r\n          <div className=\"social\">\r\n            <button type=\"button\" className=\"btn btn-light\">\r\n              <i className=\"icon-google icon\" />\r\n              {languageManager.translate(\"LOGIN_SOCIAL_BTN_GOOGLE\")}\r\n            </button>\r\n            <button type=\"button\" className=\"btn btn-light\">\r\n              <i className=\"icon-github icon\" />\r\n              {languageManager.translate(\"LOGIN_SOCIAL_BTN_GITHUB\")}\r\n            </button>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"signUpBox\">\r\n        <span>\r\n          {languageManager.translate(\"LOGIN_SIGNUP_LINK_TITLE\")}&nbsp;\r\n        </span>\r\n        <Link to=\"/signup\">\r\n          {\" \"}\r\n          {languageManager.translate(\"LOGIN_SIGNUP_LINK\")}\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default memo(Login);\r\n","import React, { memo } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { languageManager } from \"./../../services\";\r\nimport \"./styles.scss\";\r\n\r\nconst Signup = (...props) => {\r\n  // const [visibility, setVisibility] = useState(0);\r\n  // function signIn() {\r\n  //   setVisibility({ visibility: true });\r\n  // }\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"center\">\r\n        <div className=\"header\">\r\n          <span className=\"header-title\">\r\n            {languageManager.translate(\"SIGNUP_TITLE\")}\r\n          </span>\r\n        </div>\r\n        <div className=\"body\">\r\n          <form>\r\n            <div className=\"form-group\">\r\n              <label>\r\n                {languageManager.translate(\"LOGIN_EMAIL_INPUT_TITLE\")}\r\n              </label>\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                id=\"exampleInputEmail1\"\r\n                aria-describedby=\"emailHelp\"\r\n                placeholder={languageManager.translate(\r\n                  \"LOGIN_EMAIL_INPUT_PLACEHOLDER\"\r\n                )}\r\n              />\r\n              <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                {languageManager.translate(\"LOGIN_EMAIL_INPUT_DESCRIPTION\")}\r\n              </small>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>\r\n                {languageManager.translate(\"LOGIN_PASSWORD_INPUT\")}\r\n              </label>\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                id=\"exampleInputPassword1\"\r\n                placeholder={languageManager.translate(\r\n                  \"LOGIN_PASSWORD_INPUT_PLACEHOLDER\"\r\n                )}\r\n              />\r\n              <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                {languageManager.translate(\"LOGIN_PASSWORD_INPUT_DESCRIPTION\")}\r\n              </small>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>\r\n                {languageManager.translate(\"SIGNUP_CONFIRM_PASSWORD_INPUT\")}\r\n              </label>\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                id=\"exampleInputPassword1\"\r\n                placeholder={languageManager.translate(\r\n                  \"SIGNUP_CONFIRM_PASSWORD_INPUT_PLACEHOLDER\"\r\n                )}\r\n              />\r\n              <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                {languageManager.translate(\"SIGNUP_CONFIRM_PASSWORD_INPUT_DESCRIPTION\")}\r\n              </small>\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary btn-block btn-submit\">\r\n              {languageManager.translate(\"LOGIN_SUBMIT_BTN\")}\r\n            </button>\r\n          </form>\r\n          {/*<div className=\"divider\">\r\n            <Divider>{languageManager.translate(\"LOGIN_SOCIAL_TEXT\")}</Divider>\r\n          </div>\r\n           <div className=\"social\">\r\n            <button type=\"button\" className=\"btn btn-light\">\r\n              <i className=\"icon-google icon\"></i>\r\n              {languageManager.translate(\"LOGIN_SOCIAL_BTN_GOOGLE\")}\r\n            </button>\r\n            <button type=\"button\" className=\"btn btn-light\">\r\n              <i className=\"icon-github icon\"></i>\r\n              {languageManager.translate(\"LOGIN_SOCIAL_BTN_GITHUB\")}\r\n            </button>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"signUpBox\">\r\n        <span>\r\n          {languageManager.translate(\"SIGNUP_LOGIN_LINK_TITLE\")}&nbsp;\r\n        </span>\r\n        <Link to=\"/login\"> {languageManager.translate(\"SIGNUP_LOGIN_LINK\")}</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default memo(Signup);\r\n","import React, { useState } from \"react\";\r\nimport \"./styles.scss\";\r\nimport {\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem\r\n} from \"reactstrap\";\r\nimport { languageManager } from \"../../../../../../services\";\r\nconst ProfileWidget = props => {\r\n  const [dropDownVisibility, toggleVisibility] = useState(false);\r\n  function toggle() {\r\n    toggleVisibility(prevState => !prevState);\r\n  }\r\n  return (\r\n    <div className=\"profile-widget\">\r\n      <div className=\"left\">\r\n        <i className=\"icon-user\" />\r\n      </div>\r\n      <div className=\"centerbox\">\r\n        <span className=\"title\">Saeed Padyab</span>\r\n        <span className=\"role\">payabsaeed@gmail.com</span>\r\n      </div>\r\n      <div className=\"right\">\r\n        <Dropdown isOpen={dropDownVisibility} toggle={toggle}>\r\n          <DropdownToggle className=\"btn btn-light btn-small\">\r\n            <i className=\"icon-more-h\" />\r\n          </DropdownToggle>\r\n          <DropdownMenu>\r\n            <DropdownItem>{languageManager.translate('HOME_SIDEBAR_PROFILE_SETTINGS')}</DropdownItem>\r\n            <DropdownItem>{languageManager.translate('HOME_SIDEBAR_PROFILE_LOGOUT')}</DropdownItem>\r\n          </DropdownMenu>\r\n        </Dropdown>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ProfileWidget;\r\n","import React from \"react\";\r\nimport { NavLink  } from \"react-router-dom\";\r\nconst LinkItem = ({ link }) => {\r\n  const icon = `linkIcon icon-${link.icon}`;\r\n  return (\r\n      <NavLink  to={link.path} className=\"linkItem\" activeClassName=\"linkItemSelected\">\r\n      <div className=\"navIcon\">\r\n        <i className={icon} />\r\n      </div>\r\n      <div className=\"linkBody\">\r\n        <span className=\"linkText\">{link.name}</span>\r\n        <span className=\"linkTextDesc\">{link.desc}</span>\r\n      </div>\r\n      </NavLink>\r\n  );\r\n};\r\n\r\nexport default LinkItem;\r\n","import React from \"react\";\r\nimport \"./styles.scss\";\r\nimport LinkItem from \"./linkItem\";\r\nimport { languageManager } from \"./../../../../../../services\";\r\nconst NavLinks = props => {\r\n  function translate(key) {\r\n    return languageManager.translate(key);\r\n  }\r\n  const links = [\r\n    {\r\n      name: translate(\"HOME_SIDE_NAV_CONTENT_TYPE\"),\r\n      icon: \"item-type\",\r\n      path: \"/home/contentType\",\r\n      desc: translate(\"HOME_SIDE_NAV_CONTENT_TYPE_DEC\")\r\n    },\r\n    {\r\n      name: translate(\"HOME_SIDE_NAV_CATEGRIES\"),\r\n      icon: \"category\",\r\n      path: \"/home/categories\",\r\n      desc: translate(\"HOME_SIDE_NAV_CATEGORIES_DEC\")\r\n    },\r\n    {\r\n      name: translate(\"HOME_SIDE_NAV_PRODUCTS\"),\r\n      icon: \"product\",\r\n      path: \"/home/products\",\r\n      desc: translate(\"HOME_SIDE_NAV_PRODUCTS_DESC\")\r\n    },\r\n\r\n    {\r\n      name: translate(\"HOME_SIDE_NAV_REQUESTS\"),\r\n      icon: \"request\",\r\n      path: \"/home/requests\",\r\n      desc: translate(\"HOME_SIDE_NAV_REQUESTS_DESC\")\r\n    },\r\n    {\r\n      name: translate(\"HOME_SIDE_NAV_QUOTES\"),\r\n      icon: \"quote\",\r\n      path: \"/home/quotes\",\r\n      desc: translate(\"HOME_SIDE_NAV_QUOTES_DESC\")\r\n    },\r\n    {\r\n      name: translate(\"HOME_SIDE_NAV_MANAGET_USERS\"),\r\n      icon: \"users\",\r\n      path: \"/home/manageUsers\",\r\n      desc: translate(\"HOME_SIDE_NAV_MANAGE_USERS_DESC\")\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <div className=\"sideLinksTitle\">\r\n        {languageManager.translate(\"HOME_NAVS_TITLE\")}\r\n      </div>\r\n      <div className=\"sideLinks\">\r\n        {links.map(link => (\r\n          <LinkItem link={link} key={link.path} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavLinks;\r\n","import React from \"react\";\r\nimport \"./styles.scss\";\r\nimport ProfileWidget from \"./components/profileWidget\";\r\nimport SideLinks from \"./components/SideLinks\";\r\nimport { languageManager, useGlobalState } from \"./../../../../services\";\r\nconst SideBar = props => {\r\n  const [{ projectInfo }, dispatch] = useGlobalState();\r\n  return (\r\n    <div className=\"sideBar\">\r\n      <div className=\"top\">\r\n        <i className=\"icon-logo icon\" />\r\n        <span className=\"title\">{projectInfo.name}</span>\r\n      </div>\r\n      <ProfileWidget />\r\n      <SideLinks links={props.links} />\r\n      <div className=\"sideBar-info\">\r\n        <div className=\"sideBar-info-left\">\r\n          <a href=\"#about\">{languageManager.translate(\"HOME_SIDEAR_ABOUT\")}</a>\r\n          <a href=\"#about\">{languageManager.translate(\"HOME_SIDEBAR_BLOG\")}</a>\r\n        </div>\r\n        <div className=\"sideBar-info-right\">\r\n          <a href=\"#about\">\r\n            {languageManager.translate(\"HOME_SIDEBAR_DOCUMENT\")}\r\n          </a>\r\n        </div>\r\n      </div>\r\n      {/* <span className=\"copyRight\">\r\n        {languageManager.translate(\"HOME_COPY_RIGHT\")}\r\n      </span> */}\r\n    </div>\r\n  );\r\n};\r\nexport default SideBar;\r\n","import React from \"react\";\r\nimport SideBar from \"./components/SideBar\";\r\nimport \"./styles.scss\";\r\n\r\nconst Home = props => {\r\n  return (\r\n    <div className=\"page-wrapper\">\r\n      <SideBar links={[]} />\r\n      <main className=\"main\">\r\n        {props.routes}\r\n        {/* {links.map(link => (\r\n          <Route\r\n            exact\r\n            key={link.path}\r\n            path={link.path}\r\n            render={props => {\r\n              const Component = link.component;\r\n              const p = { ...props, component: link };\r\n              return (\r\n                <StateProvider>\r\n                  <Component {...p} />\r\n                </StateProvider>\r\n              );\r\n            }}\r\n          />\r\n        ))} */}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport { ListGroup, ListGroupItem, Collapse } from \"reactstrap\";\r\nimport { languageManager } from \"../../services\";\r\n\r\nclass Tree extends Component {\r\n  state = {\r\n    selected: {},\r\n    currentLang: languageManager.getCurrentLanguage().name\r\n  };\r\n  static getDerivedStateFromProps(props, current_state) {\r\n    if (!props.rightContent) {\r\n      return {\r\n        selected: {}\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  toggle = event => {\r\n    const id = event.target.getAttribute(\"id\");\r\n    this.setState(state => ({ [id]: !state[id] }));\r\n  };\r\n  mapper = (nodes, parentId, lvl) => {\r\n    return nodes.map((node, index) => {\r\n      const id = `${node.id}-${parentId ? parentId : \"top\"}`.replace(\r\n        /[^a-zA-Z0-9-_]/g,\r\n        \"\"\r\n      );\r\n      return (\r\n        <>\r\n          <ListGroupItem\r\n            key={index}\r\n            style={{\r\n              zIndex: 0,\r\n              padding: 10,\r\n              background:\r\n                this.state.selected.id === node.id ? \"lightgray\" : \"white\"\r\n            }}\r\n            className={`treeItemParent ${\r\n              parentId ? `rounded-0 ${lvl ? \"border-bottom-0\" : \"\"}` : \"\"\r\n            }`}\r\n          >\r\n            {\r\n              <div\r\n                className=\"treeItem\"\r\n                style={{\r\n                  paddingLeft: `${15 * lvl}px`\r\n                }}\r\n              >\r\n                {node.children && node.children.length > 0 ? (\r\n                  <button\r\n                    className=\"btnCategoryCollapse btn btn-primary btn-sm\"\r\n                    id={id}\r\n                    color=\"primary\"\r\n                    onClick={this.toggle}\r\n                  >\r\n                    {this.state[id] ? (\r\n                      <i className=\"icon-caret-down\" onClick={this.toggle} />\r\n                    ) : (\r\n                      <i className=\"icon-caret-right\" onClick={this.toggle} />\r\n                    )}\r\n                  </button>\r\n                ) : (\r\n                  <button className=\"btnCategoryLeaf btn btn-primary btn-sm\">\r\n                    <i className=\"icon-circle-o\" />\r\n                  </button>\r\n                )}\r\n                <div className=\"treeItem-text\">\r\n                  <span className=\"treeItem-name\">\r\n                    {node.name[this.state.currentLang]}\r\n                  </span>\r\n                  <span className=\"treeItem-desc\">\r\n                    {node.description[this.state.currentLang] ||\r\n                      \"Lorem ipsum dolor sit amet, consectetur\"}\r\n                  </span>\r\n                </div>\r\n                {(node.children === undefined ||\r\n                  node.children.length === 0) && (\r\n                  <button\r\n                    className=\"btn btn-light treeItem-action hoverAction\"\r\n                    size=\"xs\"\r\n                    onClick={() => this.props.handleDeleteCategory(node)}\r\n                  >\r\n                    <i className=\"icon-bin\" />\r\n                  </button>\r\n                )}\r\n                <button\r\n                  className=\"btn btn-light treeItem-action hoverAction\"\r\n                  size=\"xs\"\r\n                  onClick={() => this.props.handleEditCategory(node)}\r\n                >\r\n                  <i className=\"icon-pencil\" />\r\n                </button>\r\n                {(node.children === undefined ||\r\n                  node.children.length === 0) && (\r\n                  <button\r\n                    className=\"btn btn-light treeItem-action\"\r\n                    size=\"xs\"\r\n                    onClick={() => {\r\n                      this.setState(state => ({ selected: node }));\r\n                      this.props.handleItemTypes(node);\r\n                    }}\r\n                  >\r\n                    <span style={{ fontSize: 12 }}>\r\n                      {languageManager.translate(\"CATEGROES_CONTENT_TYPES\")}\r\n                    </span>\r\n                  </button>\r\n                )}\r\n                {(node.itemTypes === undefined ||\r\n                  node.itemTypes.length === 0) && (\r\n                  <button\r\n                    className=\"btn btn-light treeItem-action\"\r\n                    size=\"xs\"\r\n                    onClick={() => this.props.handleNewCategory(node)}\r\n                  >\r\n                    <i className=\"icon-plus\" style={{ fontWeight: \"bold\" }} />\r\n                  </button>\r\n                )}\r\n              </div>\r\n            }\r\n          </ListGroupItem>\r\n          {node.children && (\r\n            <Collapse isOpen={this.state[id]}>\r\n              {this.mapper(node.children, id, (lvl || 0) + 1)}\r\n            </Collapse>\r\n          )}\r\n        </>\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return <ListGroup>{this.mapper(this.props.data)}</ListGroup>;\r\n  }\r\n}\r\n\r\nexport default Tree;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Modal, ModalBody, ModalHeader } from \"reactstrap\";\r\nimport { languageManager } from \"../../../../services\";\r\nimport \"./styles.scss\";\r\n\r\nconst AddNewField = props => {\r\n  const currentLang = languageManager.getCurrentLanguage().name;\r\n  const category = props.selectedCategory;\r\n  let items = props.itemTypes ? props.itemTypes : [];\r\n  let data = props.data;\r\n  const [allData, setData] = useState(makeData());\r\n  const [isOpen, toggleModal] = useState(true);\r\n  function makeData() {\r\n    let d = data.slice();\r\n    for (let j = 0; j < items.length; j++) {\r\n      for (let i = 0; i < d.length; i++) {\r\n        if (items[j].id === d[i].id) {\r\n          d[i].selected = true;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return d;\r\n  }\r\n  useEffect(() => {\r\n    return () => {\r\n      data.map(d => delete d.selected);\r\n      if (!props.isOpen) toggleModal(false);\r\n    };\r\n  });\r\n  function closeModal(params) {\r\n    props.onCloseModal(items);\r\n  }\r\n  function handleChooseItem(event, item) {\r\n    if (event.target.checked) {\r\n      items.push(item);\r\n    } else {\r\n      const arr = items.filter(i => i.id !== item.id);\r\n      items = arr;\r\n    }\r\n  }\r\n  return (\r\n    <Modal isOpen={isOpen} toggle={closeModal}>\r\n      <ModalHeader toggle={closeModal}>\r\n        {languageManager.translate(\"CATEGORY_ITEM_TYPE_MODAL_HEADER_TITLE\")}\r\n      </ModalHeader>\r\n      <ModalBody>\r\n        {allData.map(item => (\r\n          <label key={item.id} for={item.id} className=\"itemTypeModal\">\r\n            <div className=\"itemTypeModal-left\">\r\n              <div className=\"itemType-icon\">\r\n                <i className=\"icon-item-type\" />\r\n              </div>\r\n              <div className=\"itemType-center\">\r\n                <span className=\"itemType-title\">\r\n                  {item.title[currentLang]}\r\n                </span>\r\n                <span className=\"itemType-description\">\r\n                  {item.description[currentLang]}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"itemTypeModal-right\">\r\n              <label className=\"switch \">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"primary\"\r\n                  onChange={e => handleChooseItem(e, item)}\r\n                  checked={item.selected}\r\n                  id={item.id}\r\n                />\r\n                <span className=\"slider\" />\r\n              </label>\r\n              {/* <input\r\n                id={item.id}\r\n                type=\"checkbox\"\r\n                onChange={e => handleChooseItem(e, item)}\r\n                checked={item.selected}\r\n              /> */}\r\n            </div>\r\n          </label>\r\n        ))}\r\n      </ModalBody>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddNewField;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input\r\n} from \"reactstrap\";\r\nimport \"./styles.scss\";\r\nimport Tree from \"./tree\";\r\nimport AddNewItemType from \"./modals/AddItemType\";\r\nimport { languageManager, useGlobalState, utility } from \"../../services\";\r\n\r\nfunction useInput(defaultValue = \"\") {\r\n  const [input, setInput] = useState(defaultValue);\r\n  function onChange(value) {\r\n    setInput(value);\r\n  }\r\n  return [input, onChange];\r\n}\r\n\r\nconst Categories = props => {\r\n  const currentLang = languageManager.getCurrentLanguage().name;\r\n  const [{ categories, contentTypes }, dispatch] = useGlobalState();\r\n\r\n  const { name: pageTitle, desc: pageDescription } = props.component;\r\n\r\n  // variables and handlers\r\n  const newCategoryNameInput = useRef(null);\r\n  const [upsertCategoryModal, setModal] = useState(false);\r\n  const [upsertItemTypeModal, toggleUpsertItemTypeModal] = useState(false);\r\n\r\n  const [name, handleNameChanged] = useInput(\"\");\r\n  const [description, handleDesciptionChanged] = useInput(\"\");\r\n\r\n  const [selectedCategory, setSelectedCategory] = useState();\r\n  const [itemTypes, setItemTypes] = useState([]);\r\n  const [updateMode, setUpdateMode] = useState();\r\n  const [modalHeaderTitle, setModalHeader] = useState(\"\");\r\n  const [modalUpsertBtn, setModalUpsertBtnText] = useState(\"\");\r\n  const [rightContent, toggleRightContent] = useState(false);\r\n  const [isManageCategory, setManageCategory] = useState(false);\r\n\r\n  function initModalForm() {\r\n    handleNameChanged(\"\");\r\n    handleDesciptionChanged(\"\");\r\n  }\r\n  function toggleModal() {\r\n    setModalHeader(\r\n      languageManager.translate(\"CATEGORIES_MODAL_HEADER_TITLE_NEW\")\r\n    );\r\n    setModalUpsertBtnText(\r\n      languageManager.translate(\"CATEGORIES_MODAL_FOOTER_UPSERT_BTN_NEW\")\r\n    );\r\n    setModal(prevModal => !prevModal);\r\n    initModalForm();\r\n  }\r\n\r\n  function closeAddCategoryModal() {\r\n    toggleModal();\r\n    setManageCategory(false);\r\n  }\r\n  function closeRightContent() {\r\n    toggleRightContent(false);\r\n  }\r\n  function updateNodeInList(list, node, newValue) {\r\n    for (let i = 0; i < list.length; i++) {\r\n      if (list[i].id === node.id) {\r\n        list[i] = newValue;\r\n      }\r\n      if (list[i].children) updateNodeInList(list[i].children, node, newValue);\r\n    }\r\n  }\r\n  function deleteNodeInList(list, node) {\r\n    for (let i = 0; i < list.length; i++) {\r\n      if (list[i].id === node.id) {\r\n        list.splice(i, 1);\r\n        return;\r\n      }\r\n      if (list[i].children) deleteNodeInList(list[i].children, node);\r\n    }\r\n  }\r\n  function newChildCategory(item) {\r\n    setModal(prevModal => !prevModal);\r\n    setSelectedCategory(item);\r\n    setUpdateMode(false);\r\n    setModalHeader(\r\n      languageManager.translate(\"CATEGORIES_MODAL_HEADER_TITLE_NEW\")\r\n    );\r\n    setModalUpsertBtnText(\r\n      languageManager.translate(\"CATEGORIES_MODAL_FOOTER_UPSERT_BTN_NEW\")\r\n    );\r\n    setTimeout(() => {\r\n      newCategoryNameInput.current.focus();\r\n    }, 1);\r\n    setManageCategory(true);\r\n  }\r\n  function editCategory(item) {\r\n    setModal(prevModal => !prevModal);\r\n    setSelectedCategory(item);\r\n    setUpdateMode(true);\r\n\r\n    handleNameChanged(item.name[currentLang]);\r\n    handleDesciptionChanged(item.description[currentLang]);\r\n\r\n    setModalHeader(\r\n      languageManager.translate(\"CATEGORIES_MODAL_HEADER_TITLE_EDIT\")\r\n    );\r\n    setModalUpsertBtnText(\r\n      languageManager.translate(\"CATEGORIES_MODAL_FOOTER_UPSERT_BTN_EDIT\")\r\n    );\r\n    setManageCategory(true);\r\n  }\r\n  function upsertCategory() {\r\n    if (isManageCategory) {\r\n      if (!updateMode) {\r\n        const obj = {\r\n          parentId: selectedCategory.id,\r\n          id: Math.random().toString(),\r\n          name: utility.applyeLangs(name),\r\n          description: utility.applyeLangs(description),\r\n          type: \"category\"\r\n        };\r\n\r\n        if (!selectedCategory.children) selectedCategory.children = [];\r\n        selectedCategory.children.push(obj);\r\n        const d = [...categories];\r\n        dispatch({\r\n          type: \"SET_CATEGORIES\",\r\n          value: d\r\n        });\r\n\r\n        handleNameChanged(\"\");\r\n        handleDesciptionChanged(\"\");\r\n      } else {\r\n        let newCategory = {};\r\n        for (const key in selectedCategory) {\r\n          newCategory[key] = selectedCategory[key];\r\n        }\r\n        newCategory[\"name\"] = utility.applyeLangs(name);\r\n        newCategory[\"description\"] = utility.applyeLangs(description);\r\n        updateNodeInList(categories, selectedCategory, newCategory);\r\n        dispatch({\r\n          type: \"SET_CATEGORIES\",\r\n          value: categories\r\n        });\r\n        closeAddCategoryModal();\r\n      }\r\n    } else {\r\n      const obj = {\r\n        id: Math.random(),\r\n        name: utility.applyeLangs(name),\r\n        description: utility.applyeLangs(description),\r\n        type: \"category\"\r\n      };\r\n      let data = [...categories];\r\n      data.push(obj);\r\n      dispatch({\r\n        type: \"SET_CATEGORIES\",\r\n        value: data\r\n      });\r\n      initModalForm();\r\n    }\r\n  }\r\n\r\n  function removeCategoryItem(selected) {\r\n    deleteNodeInList(categories, selected);\r\n    const data = [...categories];\r\n    dispatch({\r\n      type: \"SET_CATEGORIES\",\r\n      value: data\r\n    });\r\n  }\r\n\r\n  // field\r\n  function showItemTypes(category) {\r\n    if (!rightContent) toggleRightContent(true);\r\n    setSelectedCategory(category);\r\n    let m = [];\r\n    if (category.itemTypes !== undefined) m = category.itemTypes;\r\n    setItemTypes(m);\r\n    setManageCategory(false);\r\n  }\r\n  function closeAddItemTypeModal(items) {\r\n    toggleUpsertItemTypeModal(false);\r\n    updateCategoryItemTypes(items);\r\n  }\r\n  function addNewItemType() {\r\n    toggleUpsertItemTypeModal(prevModal => !prevModal);\r\n  }\r\n  function updateCategoryItemTypes(items) {\r\n    setItemTypes(items);\r\n    if (selectedCategory.itemTypes === undefined)\r\n      selectedCategory.itemTypes = [];\r\n    selectedCategory.itemTypes = items;\r\n    updateNodeInList(categories, selectedCategory, selectedCategory); //\r\n    dispatch({\r\n      type: \"SET_CATEGORIES\",\r\n      value: categories\r\n    });\r\n  }\r\n  function handleRemoveItemType(itemType) {\r\n    const m = itemTypes.filter(item => item.id !== itemType.id);\r\n    setItemTypes(m);\r\n    selectedCategory.itemTypes = m;\r\n    updateNodeInList(categories, selectedCategory, selectedCategory); //\r\n    dispatch({\r\n      type: \"SET_CATEGORIES\",\r\n      value: categories\r\n    });\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"c-wrapper\">\r\n        <div className=\"c-header\">\r\n          <div className=\"c-header-left\">\r\n            <span className=\"c-header-title\">{pageTitle}</span>\r\n            <span className=\"c-header-description\">{pageDescription}</span>\r\n          </div>\r\n          <div className=\"c-header-right\">\r\n            <button className=\"btn btn-primary\" onClick={toggleModal}>\r\n              {languageManager.translate(\"CATEGORIES_NEW_CATEGORY_BTN\")}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"c-content\">\r\n          <div className=\"c-content-left\">\r\n            <Tree\r\n              rightContent={rightContent}\r\n              data={categories}\r\n              handleNewCategory={selected => newChildCategory(selected)}\r\n              handleEditCategory={selected => editCategory(selected)}\r\n              handleDeleteCategory={selected => removeCategoryItem(selected)}\r\n              handleItemTypes={selected => showItemTypes(selected)}\r\n            />\r\n          </div>\r\n          {rightContent && (\r\n            <div className=\"c-content-right animated slideInRight faster\">\r\n              <div className=\"c-content-right-header\">\r\n                <span className=\"c-right-header-title\">\r\n                  {languageManager.translate(\r\n                    \"CATEGORIES_ITEM_TYPES_HEADER_TITLE\"\r\n                  )}\r\n                </span>\r\n                <span className=\"c-right-header-description\">\r\n                  {languageManager.translate(\r\n                    \"CATEGORIES_ITEM_TYPES_HEADER_DESC\"\r\n                  )}\r\n                </span>\r\n                <span\r\n                  className=\"icon-cross closeIcon\"\r\n                  onClick={closeRightContent}\r\n                />\r\n              </div>\r\n              <div className=\"c-content-right-body\">\r\n                <div className=\"fieldsContent\">\r\n                  {itemTypes &&\r\n                    itemTypes.map(item => (\r\n                      <div className=\"fieldItem\" key={item.id}>\r\n                        <div className=\"fieldItem-icon\">\r\n                          <i className=\"icon-more-h\" />\r\n                        </div>\r\n                        <div className=\"fieldItem-type\">\r\n                          <i className=\"icon-item-type\" />\r\n                        </div>\r\n                        <div className=\"fieldItem-name\">\r\n                          {item.title[currentLang]}\r\n                        </div>\r\n                        <div className=\"fieldItem-title\">\r\n                          {item.description[currentLang]}\r\n                        </div>\r\n                        <div\r\n                          className=\"fieldItem-actions\"\r\n                          onClick={() => handleRemoveItemType(item)}\r\n                        >\r\n                          <button className=\"btn btn-link\" size=\"xs\">\r\n                            <i className=\"icon-bin\" />\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"btnNewFieldContent\">\r\n                  <button className=\"btn btn-primary\" onClick={addNewItemType}>\r\n                    <i className=\"icon-plus\" />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <Modal isOpen={upsertCategoryModal} toggle={closeAddCategoryModal}>\r\n        <ModalHeader toggle={closeAddCategoryModal}>\r\n          {modalHeaderTitle}\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <div className=\"c-category-modal-body\">\r\n            <Form>\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  {languageManager.translate(\"CATEGORIES_MODAL_NAME\")}\r\n                </label>\r\n                <input\r\n                  ref={newCategoryNameInput}\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder={languageManager.translate(\r\n                    \"CATEGORIES_MODAL_NAME_PLACEHOLDER\"\r\n                  )}\r\n                  value={name}\r\n                  required\r\n                  onChange={e => handleNameChanged(e.target.value)}\r\n                />\r\n                <small className=\"form-text text-muted\">\r\n                  {languageManager.translate(\r\n                    \"CATEGORIES_MODAL_NAME_DESCRIPTION\"\r\n                  )}\r\n                </small>\r\n              </div>\r\n              <FormGroup>\r\n                <Label for=\"exampleEmail\">\r\n                  {languageManager.translate(\"CATEGORIES_MODAL_DESCRIPTION\")}\r\n                </Label>\r\n                <Input\r\n                  type=\"string\"\r\n                  placeholder={languageManager.translate(\r\n                    \"CATEGORIES_MODAL_DESCRIPTION_PLACEHOLDER\"\r\n                  )}\r\n                  value={description}\r\n                  onChange={e => handleDesciptionChanged(e.target.value)}\r\n                />\r\n                {/* <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                  {languageManager.translate(\r\n                    \"CATEGORIES_MODAL_DESCRIPTION_DESC\"\r\n                  )}\r\n                </small> */}\r\n              </FormGroup>\r\n            </Form>\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            onClick={() => upsertCategory(selectedCategory)}\r\n            disabled={name.length > 0 ? false : true}\r\n          >\r\n            {modalUpsertBtn}\r\n          </Button>\r\n          <Button color=\"secondary\" onClick={closeAddCategoryModal}>\r\n            {languageManager.translate(\"CANCEL\")}\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n      {upsertItemTypeModal && (\r\n        <AddNewItemType\r\n          data={contentTypes}\r\n          itemTypes={itemTypes}\r\n          selectedCategory={selectedCategory}\r\n          isOpen={upsertItemTypeModal}\r\n          onCloseModal={items => closeAddItemTypeModal(items)}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { ListGroup, ListGroupItem } from \"reactstrap\";\r\nimport { languageManager } from \"../../../services\";\r\n\r\nconst List = props => {\r\n  const currentLang = languageManager.getCurrentLanguage().name;\r\n  const [selected, setSelected] = useState({});\r\n  useEffect(() => {\r\n    if (!props.rightContent) {\r\n      setSelected({});\r\n    }\r\n  }, [props.rightContent]);\r\n  return (\r\n    <ListGroup>\r\n      {props.data &&\r\n        props.data.map(listItem => (\r\n          <ListGroupItem\r\n            key={listItem.id}\r\n            className=\"listGroupItem\"\r\n            style={{\r\n              backgroundColor:\r\n                selected.id === listItem.id ? \"lightgray\" : \"white\"\r\n            }}\r\n          >\r\n            <div className=\"treeItem\">\r\n              <button\r\n                className=\"btn btn-primary btn-sm\"\r\n                color=\"primary\"\r\n                style={{ marginRight: 15 }}\r\n              >\r\n                <i className=\"icon-item-type\" />\r\n              </button>\r\n              <div className=\"treeItem-text\">\r\n                <span className=\"treeItem-name\">\r\n                  {listItem.title[currentLang]}\r\n                </span>\r\n                <span className=\"treeItem-desc\">\r\n                  {listItem.description[currentLang] ||\r\n                    \"Lorem ipsum dolor sit amet, consectetur\"}\r\n                </span>\r\n              </div>\r\n              {listItem.template !== \"generic\" && (\r\n                <>\r\n                  <button\r\n                    className=\"btn btn-light treeItem-action\"\r\n                    size=\"xs\"\r\n                    onClick={() => props.handleDeleteType(listItem)}\r\n                  >\r\n                    <i className=\"icon-bin\" />\r\n                  </button>\r\n                  <button\r\n                    className=\"btn btn-light treeItem-action\"\r\n                    size=\"xs\"\r\n                    onClick={() => props.handleEditType(listItem)}\r\n                  >\r\n                    <i className=\"icon-pencil\" />\r\n                  </button>\r\n                </>\r\n              )}\r\n              <button\r\n                className=\"btn btn-light treeItem-action\"\r\n                size=\"xs\"\r\n                onClick={() => {\r\n                  setSelected(listItem);\r\n                  props.handleShowFields(listItem);\r\n                }}\r\n              >\r\n                <span style={{ fontSize: 12 }}>\r\n                  {languageManager.translate(\"ITEM_TYPES_FIELDS\")}\r\n                </span>\r\n              </button>\r\n            </div>\r\n          </ListGroupItem>\r\n        ))}\r\n    </ListGroup>\r\n  );\r\n};\r\nexport default List;\r\n","import React from \"react\";\r\nimport \"./styles.scss\";\r\nconst CheckBox = props => {\r\n  return (\r\n    <label className=\"checkBox\">\r\n      {props.title}\r\n      <input type=\"checkbox\" {...props} />\r\n      <span className=\"checkmark\" />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default CheckBox;\r\n","import React, { memo } from \"react\";\r\nimport \"./styles.css\";\r\nconst Divider = ({ children, ...props }) => {\r\n  return <div className=\"hr-sect\">{children}</div>;\r\n};\r\n\r\nexport default memo(Divider);\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input\r\n} from \"reactstrap\";\r\nimport { languageManager, utility } from \"../../../../services\";\r\nimport { CheckBox } from \"./../../../../components\";\r\nimport \"./styles.scss\";\r\nconst fields = [\r\n  {\r\n    name: \"string\",\r\n    title: languageManager.translate(\"FIELD_TYPE_TEXT\"),\r\n    description: languageManager.translate(\"FIELD_TYPE_TEXT_INFO\"),\r\n    icon: \"icon-file-text\"\r\n  },\r\n  {\r\n    name: \"number\",\r\n    title: languageManager.translate(\"FIELD_TYPE_NUMBER\"),\r\n    description: languageManager.translate(\"FIELD_TYPE_NUMBER_INFO\"),\r\n    icon: \"icon-number\"\r\n  },\r\n  {\r\n    name: \"dateTime\",\r\n    title: languageManager.translate(\"FIELD_TYPE_DATE_TIME\"),\r\n    description: languageManager.translate(\"FIELD_TYPE_DATE_TIME_INFO\"),\r\n    icon: \"icon-calendar\"\r\n  },\r\n  {\r\n    name: \"location\",\r\n    title: languageManager.translate(\"FIELD_TYPE_LOCATION\"),\r\n    description: languageManager.translate(\"FIELD_TYPE_LOCATION_INFO\"),\r\n    icon: \"icon-location\"\r\n  },\r\n  {\r\n    name: \"media\",\r\n    title: languageManager.translate(\"FIELD_TYPE_MEDIA\"),\r\n    description: languageManager.translate(\"FIELD_TYPE_MEDIA_INFO\"),\r\n    icon: \"icon-images\"\r\n  },\r\n  {\r\n    name: \"boolean\",\r\n    title: languageManager.translate(\"FIELD_TYPE_BOOLEAN\"),\r\n    description: languageManager.translate(\"FIELD_TYPE_BOOLEAN_INFO\"),\r\n    icon: \"icon-boolean\"\r\n  },\r\n  {\r\n    name: \"keyValue\",\r\n    title: languageManager.translate(\"FIELD_TYPE_KEY_VALUE\"),\r\n    description: languageManager.translate(\"FIELD_TYPE_KEY_VALUE_INFO\"),\r\n    icon: \"icon-combo-box\"\r\n  },\r\n  {\r\n    name: \"richText\",\r\n    title: languageManager.translate(\"FIELD_TYPE_RICH_TEXT\"),\r\n    description: languageManager.translate(\"FIELD_TYPE_RICH_TEXT_INFO\"),\r\n    icon: \"icon-file-text\"\r\n  }\r\n  // {\r\n  //   name: \"jsonObject\",\r\n  //   title: languageManager.translate(\"FIELD_TYPE_OBJECT\"),\r\n  //   description: languageManager.translate(\"FIELD_TYPE_OBJECT_INFO\"),\r\n  //   icon: \"icon-json-file\"\r\n  // },\r\n  // {\r\n  //   name: \"reference\",\r\n  //   title: languageManager.translate(\"FIELD_TYPE_REFERENCE\"),\r\n  //   description: languageManager.translate(\"FIELD_TYPE_REFERENCE_INFO\"),\r\n  //   icon: \"icon-reference\"\r\n  // }\r\n];\r\n\r\nconst AddNewField = props => {\r\n  const category = props.selectedCategory;\r\n\r\n  const [isOpen, toggleModal] = useState(true);\r\n  const nameInput = useRef(null); //  ref is defined here\r\n  const [tab, changeTab] = useState(1);\r\n  const [newFieldHeaderTitle, setAddFieldHeaderTitle] = useState(\r\n    languageManager.translate(\"CONTENT_TYPE_ADD_FIELD_TITLE\")\r\n  );\r\n  const [selectedField, setField] = useState({});\r\n  const [name, setName] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [translation, toggleTranslation] = useState(false);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (!props.isOpen) toggleModal(false);\r\n    };\r\n  });\r\n  function closeAddFieldModal(params) {\r\n    props.onCloseModal();\r\n  }\r\n  function handleChooseField(field) {\r\n    changeTab(2);\r\n    setField(field);\r\n    const title =\r\n      languageManager.translate(\"CONTENT_TYPE_ADD_FIELD_CHOOSEN\") +\r\n      \" \" +\r\n      field.title;\r\n    setAddFieldHeaderTitle(title);\r\n    //nameInput.current.focus(); // focus after changing tab on first input\r\n  }\r\n  function backToFields(params) {\r\n    const title = languageManager.translate(\"CONTENT_TYPE_ADD_FIELD_CHOOSEN\");\r\n    setAddFieldHeaderTitle(title);\r\n    changeTab(1);\r\n  }\r\n  function handleNameChanged(e) {\r\n    setName(e.target.value);\r\n  }\r\n  function handleTitleChanged(e) {\r\n    setTitle(e.target.value);\r\n  }\r\n  function handleDescriptionChanged(e) {\r\n    setDescription(e.target.value);\r\n  }\r\n  function resetForm() {\r\n    setName(\"\");\r\n    setTitle(\"\");\r\n    setDescription(\"\");\r\n  }\r\n\r\n  function addField() {\r\n    const obj = {\r\n      id: Math.random().toString(),\r\n      name: name,\r\n      title: utility.applyeLangs(title),\r\n      description: utility.applyeLangs(description),\r\n      type: selectedField.name,\r\n      isTranslate: translation\r\n    };\r\n    props.onAddField(obj);\r\n    resetForm();\r\n  }\r\n  function addField_configure() {}\r\n  return (\r\n    <Modal isOpen={isOpen} toggle={closeAddFieldModal} size=\"lg\">\r\n      <ModalHeader toggle={closeAddFieldModal}>\r\n        {newFieldHeaderTitle}\r\n      </ModalHeader>\r\n      <ModalBody>\r\n        <div className=\"c-category-addField-body\">\r\n          {tab === 1 ? (\r\n            <div className=\"fieldsTab\">\r\n              {fields.map(field => (\r\n                <div\r\n                  key={field.icon}\r\n                  className=\"add-field-types\"\r\n                  onClick={() => handleChooseField(field)}\r\n                >\r\n                  <div className=\"add-field-icon\">\r\n                    <i className={field.icon} />\r\n                  </div>\r\n                  <span className=\"title\">{field.title}</span>\r\n                  <span className=\"description\">{field.description}</span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <Form className=\"formTab\">\r\n              <div className=\"row\">\r\n                <div className=\"form-group col\">\r\n                  <label>\r\n                    {languageManager.translate(\r\n                      \"CONTENT_TYPE_ADD_FIELD_MODAL_NAME\"\r\n                    )}\r\n                  </label>\r\n                  <input\r\n                    ref={nameInput} // using ref\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder={languageManager.translate(\r\n                      \"CONTENT_TYPE_ADD_FIELD_MODAL_NAME_PLACEHOLDER\"\r\n                    )}\r\n                    value={name}\r\n                    required\r\n                    onChange={handleNameChanged}\r\n                  />\r\n                  <small className=\"form-text text-muted\">\r\n                    {languageManager.translate(\r\n                      \"CONTENT_TYPE_ADD_FIELD_MODAL_NAME_INFO\"\r\n                    )}\r\n                  </small>\r\n                </div>\r\n\r\n                <FormGroup className=\"col\">\r\n                  <Label>\r\n                    {languageManager.translate(\r\n                      \"CONTENT_TYPE_ADD_FIELD_MODAL_TITLE\"\r\n                    )}\r\n                  </Label>\r\n                  <Input\r\n                    type=\"string\"\r\n                    value={title}\r\n                    placeholder={languageManager.translate(\r\n                      \"CONTENT_TYPE_ADD_FIELD_MODAL_TITLE_PLACEHOLDER\"\r\n                    )}\r\n                    onChange={handleTitleChanged}\r\n                  />\r\n                  <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                    {languageManager.translate(\r\n                      \"CONTENT_TYPE_ADD_FIELD_MODAL_TITLE_INFO\"\r\n                    )}\r\n                  </small>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"formTab-row\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    {languageManager.translate(\r\n                      \"CONTENT_TYPE_ADD_FIELD_MODAL_DESCRIPTION\"\r\n                    )}\r\n                  </Label>\r\n                  <Input\r\n                    type=\"string\"\r\n                    value={description}\r\n                    placeholder={languageManager.translate(\r\n                      \"CONTENT_TYPE_ADD_FIELD_MODAL_DESCRIPTION_PLACEHOLDER\"\r\n                    )}\r\n                    onChange={handleDescriptionChanged}\r\n                  />\r\n                  <small className=\"form-text text-muted\">\r\n                    {languageManager.translate(\r\n                      \"CONTENT_TYPE_ADD_FIELD_MODAL_DESCRIPTION_INFO\"\r\n                    )}\r\n                  </small>\r\n                </FormGroup>\r\n\r\n                <CheckBox\r\n                  title=\"Translatable\"\r\n                  onChange={e => toggleTranslation(e.target.checked)}\r\n                />\r\n              </div>\r\n            </Form>\r\n          )}\r\n        </div>\r\n      </ModalBody>\r\n      {tab !== 1 ? (\r\n        <ModalFooter>\r\n          <Button\r\n            color=\"primary\"\r\n            onClick={addField}\r\n            disabled={\r\n              name.length > 0 && title.length > 0 && !name.includes(\" \")\r\n                ? false\r\n                : true\r\n            }\r\n          >\r\n            {languageManager.translate(\r\n              \"CONTENT_TYPE_ADD_FIELD_MODAL_CREATE_BTN\"\r\n            )}\r\n          </Button>\r\n          {/* <Button\r\n            color=\"primary\"\r\n            onClick={addField_configure}\r\n            disabled={\r\n              name.length > 0 && title.length > 0 && !name.includes(\" \")\r\n                ? false\r\n                : true\r\n            }\r\n          >\r\n            {languageManager.translate(\r\n              \"CONTENT_TYPE_ADD_FIELD_MODAL_CREATE_CONFIG_BTN\"\r\n            )}\r\n          </Button> */}\r\n          <Button color=\"secondary\" onClick={backToFields}>\r\n            {languageManager.translate(\r\n              \"CONTENT_TYPE_ADD_FIELD_MODAL_CHNAGE_FIELD_BTN\"\r\n            )}\r\n          </Button>\r\n        </ModalFooter>\r\n      ) : (\r\n        undefined\r\n      )}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddNewField;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input\r\n} from \"reactstrap\";\r\nimport { languageManager, utility } from \"../../../../services\";\r\nimport \"./styles.scss\";\r\nconst templates = [\r\n  {\r\n    id: \"1\",\r\n    name: \"dataCollection\",\r\n    title: \"Data Collection\",\r\n    description: \"Create an item type with custom fields\",\r\n    icon: \"\",\r\n    fields: [\r\n      {\r\n        id: \"1\",\r\n        name: \"name\",\r\n        title: {\r\n          en: \"Name\",\r\n          fa: \"Name\"\r\n        },\r\n        description: {\r\n          fa: \"name of each product\",\r\n          en: \"name of each product\"\r\n        },\r\n        type: \"string\",\r\n        isBase: true,\r\n        isTranslate: true,\r\n        isRequired: true\r\n      },\r\n      {\r\n        id: \"2\",\r\n        name: \"shortDesc\",\r\n        title: {\r\n          fa: \"Short Description\",\r\n          en: \"Short Description\"\r\n        },\r\n        description: {\r\n          fa: \"\",\r\n          en: \"\"\r\n        },\r\n        type: \"string\",\r\n        isBase: true,\r\n        isTranslate: true\r\n      },\r\n      {\r\n        id: \"3\",\r\n        name: \"thumbnail\",\r\n        title: {\r\n          fa: \"Thumbnail\",\r\n          en: \"Thumbnail\"\r\n        },\r\n        description: {\r\n          fa: \"\",\r\n          en: \"\"\r\n        },\r\n        type: \"media\",\r\n        isBase: true,\r\n        isTranslate: true,\r\n        isRequired: true\r\n      }\r\n    ],\r\n    allowCustomFields: true\r\n  },\r\n  {\r\n    id: \"2\",\r\n    name: \"content\",\r\n    title: \"Content\",\r\n    description: \"it does not allow you to have custom fields\",\r\n    icon: \"\",\r\n    fields: [\r\n      {\r\n        id: \"1\",\r\n        name: \"name\",\r\n        title: {\r\n          en: \"Name\",\r\n          fa: \"Name\"\r\n        },\r\n        description: {\r\n          fa: \"name of each product\",\r\n          en: \"name of each product\"\r\n        },\r\n        type: \"string\",\r\n        isBase: true,\r\n        isTranslate: true,\r\n        isRequired: true\r\n      },\r\n      {\r\n        id: \"2\",\r\n        name: \"shortDesc\",\r\n        title: {\r\n          fa: \"Short Description\",\r\n          en: \"Short Description\"\r\n        },\r\n        description: {\r\n          fa: \"\",\r\n          en: \"\"\r\n        },\r\n        type: \"string\",\r\n        isBase: true,\r\n        isTranslate: true\r\n      },\r\n      {\r\n        id: \"3\",\r\n        name: \"thumbnail\",\r\n        title: {\r\n          fa: \"Thumbnail\",\r\n          en: \"Thumbnail\"\r\n        },\r\n        description: {\r\n          fa: \"\",\r\n          en: \"\"\r\n        },\r\n        type: \"media\",\r\n        isBase: true,\r\n        isTranslate: true,\r\n        isRequired: true\r\n      },\r\n      {\r\n        id: Math.random(),\r\n        name: \"body\",\r\n        title: \"Body\",\r\n        description: \"\",\r\n        type: \"richText\",\r\n        isBase: true\r\n      }\r\n    ],\r\n    allowCustomFields: true\r\n  },\r\n  {\r\n    id: \"3\",\r\n    name: \"gallery\",\r\n    title: \"Gallery\",\r\n    description: \"Making custom gallery data\",\r\n    icon: \"icon-images\",\r\n    fields: [\r\n      {\r\n        id: \"1\",\r\n        name: \"name\",\r\n        title: {\r\n          en: \"Name\",\r\n          fa: \"Name\"\r\n        },\r\n        description: {\r\n          fa: \"name of each product\",\r\n          en: \"name of each product\"\r\n        },\r\n        type: \"string\",\r\n        isBase: true,\r\n        isTranslate: true,\r\n        isRequired: true\r\n      },\r\n      {\r\n        id: \"2\",\r\n        name: \"shortDesc\",\r\n        title: {\r\n          fa: \"Short Description\",\r\n          en: \"Short Description\"\r\n        },\r\n        description: {\r\n          fa: \"\",\r\n          en: \"\"\r\n        },\r\n        type: \"string\",\r\n        isBase: true,\r\n        isTranslate: true\r\n      },\r\n      {\r\n        id: \"3\",\r\n        name: \"thumbnail\",\r\n        title: {\r\n          fa: \"Thumbnail\",\r\n          en: \"Thumbnail\"\r\n        },\r\n        description: {\r\n          fa: \"\",\r\n          en: \"\"\r\n        },\r\n        type: \"media\",\r\n        isBase: true,\r\n        isTranslate: true,\r\n        isRequired: true\r\n      },\r\n      {\r\n        id: Math.random(),\r\n        name: \"images\",\r\n        title: \"Images\",\r\n        description: \"\",\r\n        type: \"media\",\r\n        isList: true,\r\n        isBase: true\r\n      }\r\n    ],\r\n    allowCustomFields: true\r\n  }\r\n];\r\nconst UpsertTemplate = props => {\r\n  const currentLang = languageManager.getCurrentLanguage().name;\r\n\r\n  const { updateMode } = props;\r\n  const submitBtnText = !updateMode\r\n    ? languageManager.translate(\"CONTENT_TYPE_MODAL_FOOTER_UPSERT_BTN_NEW\")\r\n    : languageManager.translate(\"CONTENT_TYPE_MODAL_FOOTER_UPSERT_BTN_EDIT\");\r\n\r\n  const selectedItemType = updateMode ? props.selectedItemType : undefined;\r\n  const [isOpen, toggleModal] = useState(true);\r\n\r\n  const [modalHeaderTitle, setModalHeader] = useState(\r\n    !updateMode\r\n      ? languageManager.translate(\"CONTENT_TYPE_MODAL_HEADER_TITLE_NEW\")\r\n      : languageManager.translate(\"CONTENT_TYPE_MODAL_HEADER_TITLE_EDIT\")\r\n  );\r\n\r\n  const [tab, changeTab] = useState(updateMode ? 2 : 1);\r\n  const [newFieldHeaderTitle, setAddFieldHeaderTitle] = useState(\r\n    languageManager.translate(\"CONTENT_TYPE_ADD_FIELD_TITLE\")\r\n  );\r\n  const [selectedTemplate, setTemplate] = useState(\r\n    updateMode ? props.selectedTemplate : {}\r\n  );\r\n  const [name, setName] = useState(\r\n    selectedItemType ? selectedItemType.name : \"\"\r\n  );\r\n  const [title, setTitle] = useState(\r\n    selectedItemType ? selectedItemType.title[currentLang] : \"\"\r\n  );\r\n  const [description, setDescription] = useState(\r\n    selectedItemType ? selectedItemType.description[currentLang] : \"\"\r\n  );\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (!props.isOpen) toggleModal(false);\r\n    };\r\n  }, []);\r\n\r\n  function closeModal() {\r\n    props.onCloseModal();\r\n  }\r\n  function handleChooseTemplate(tmp) {\r\n    changeTab(2);\r\n    setTemplate(tmp);\r\n    const title =\r\n      languageManager.translate(\"CONTENT_TYPE_ADD_FIELD_CHOOSEN\") +\r\n      \" \" +\r\n      tmp.name;\r\n    setAddFieldHeaderTitle(title);\r\n  }\r\n  function backToTemplates() {\r\n    const title = languageManager.translate(\"CONTENT_TYPE_ADD_FIELD_CHOOSEN\");\r\n    setAddFieldHeaderTitle(title);\r\n    changeTab(1);\r\n  }\r\n  function handleNameChanged(e) {\r\n    setName(e.target.value);\r\n  }\r\n  function handleTitleChanged(e) {\r\n    setTitle(e.target.value);\r\n  }\r\n  function handleDescriptionChanged(e) {\r\n    setDescription(e.target.value);\r\n  }\r\n  function upsertItemType() {\r\n    const obj = {\r\n      selectedTemplate: selectedTemplate,\r\n      name: name,\r\n      title: utility.applyeLangs(title),\r\n      description: utility.applyeLangs(description)\r\n    };\r\n    props.onCloseModal(obj);\r\n  }\r\n  return (\r\n    <Modal isOpen={isOpen} toggle={closeModal} size=\"lg\">\r\n      <ModalHeader toggle={closeModal}>{modalHeaderTitle}</ModalHeader>\r\n      <ModalBody>\r\n        <div className=\"c-category-templates-body\">\r\n          {tab === 1 ? (\r\n            <div className=\"fieldsTab\">\r\n              {templates.map(tmp => (\r\n                <div\r\n                  key={tmp.id}\r\n                  className=\"add-field-types\"\r\n                  onClick={() => handleChooseTemplate(tmp)}\r\n                >\r\n                  <div\r\n                    className=\"add-field-icon\"\r\n                    style={{\r\n                      backgroundColor:\r\n                        selectedItemType &&\r\n                        selectedItemType.template === tmp.name\r\n                          ? \"lightgray\"\r\n                          : \"whitesmoke\"\r\n                    }}\r\n                  >\r\n                    <i className={tmp.icon || \"icon-item-type\"} />\r\n                  </div>\r\n                  <span className=\"title\">{tmp.title}</span>\r\n                  <span className=\"description\">{tmp.description}</span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <Form>\r\n              <div className=\"row\">\r\n                <div className=\"form-group col\">\r\n                  <label>\r\n                    {languageManager.translate(\"CONTENT_TYPE_MODAL_NAME\")}\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder={languageManager.translate(\r\n                      \"CONTENT_TYPE_MODAL_NAME_PLACEHOLDER\"\r\n                    )}\r\n                    value={name}\r\n                    required\r\n                    onChange={handleNameChanged}\r\n                  />\r\n                  <small className=\"form-text text-muted\">\r\n                    {languageManager.translate(\r\n                      \"CONTENT_TYPE_MODAL_NAME_DESCRIPTION\"\r\n                    )}\r\n                  </small>\r\n                </div>\r\n\r\n                <FormGroup className=\"col\">\r\n                  <Label>\r\n                    {languageManager.translate(\r\n                      \"CONTENT_TYPE_ADD_FIELD_MODAL_TITLE\"\r\n                    )}\r\n                  </Label>\r\n                  <Input\r\n                    type=\"string\"\r\n                    value={title}\r\n                    placeholder={languageManager.translate(\r\n                      \"CONTENT_TYPE_ADD_FIELD_MODAL_TITLE_PLACEHOLDER\"\r\n                    )}\r\n                    onChange={handleTitleChanged}\r\n                  />\r\n                  <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                    {languageManager.translate(\r\n                      \"CONTENT_TYPE_ADD_FIELD_MODAL_TITLE_INFO\"\r\n                    )}\r\n                  </small>\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <FormGroup>\r\n                <Label>\r\n                  {languageManager.translate(\"CONTENT_TYPE_MODAL_DESCRIPTION\")}\r\n                </Label>\r\n                <Input\r\n                  type=\"string\"\r\n                  placeholder={languageManager.translate(\r\n                    \"CONTENT_TYPE_MODAL_DESCRIPTION_PLACEHOLDER\"\r\n                  )}\r\n                  value={description}\r\n                  onChange={handleDescriptionChanged}\r\n                />\r\n              </FormGroup>\r\n            </Form>\r\n          )}\r\n        </div>\r\n      </ModalBody>\r\n      {tab !== 1 ? (\r\n        <ModalFooter>\r\n          <Button\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            onClick={upsertItemType}\r\n            disabled={\r\n              name.length > 0 && title.length > 0 && !name.includes(\" \")\r\n                ? false\r\n                : true\r\n            }\r\n          >\r\n            {submitBtnText}\r\n          </Button>\r\n          {!updateMode && (\r\n            <Button color=\"secondary\" onClick={backToTemplates}>\r\n              Templates\r\n            </Button>\r\n          )}\r\n        </ModalFooter>\r\n      ) : (\r\n        undefined\r\n      )}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default UpsertTemplate;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./styles.scss\";\r\nimport List from \"./list\";\r\nimport AddNewField from \"./modals/AddNewField\";\r\nimport AddNewItemType from \"./modals/AddNewItemType\";\r\nimport { languageManager, useGlobalState } from \"../../services\";\r\n\r\nconst ItemTypes = props => {\r\n  const currentLang = languageManager.getCurrentLanguage().name;\r\n\r\n  const [{ contentTypes }, dispatch] = useGlobalState();\r\n\r\n  const { name: pageTitle, desc: pageDescription } = props.component;\r\n  // variables and handlers\r\n  const [upsertFieldModal, toggleUpsertFieldModal] = useState(false);\r\n  const [upsertItemTypeModal, toggleUpserItemTypeModal] = useState(false);\r\n  const [selectedItemType, setItemType] = useState({});\r\n  const [fields, setFields] = useState([]);\r\n  const [updateMode, setUpdateMode] = useState();\r\n\r\n  const [rightContent, toggleRightContent] = useState(false);\r\n\r\n  function openAddItemTypeModal() {\r\n    setUpdateMode(false);\r\n    toggleUpserItemTypeModal(true);\r\n  }\r\n\r\n  function closeAddItemTypeModal(item) {\r\n    if (item === undefined) toggleUpserItemTypeModal(false);\r\n    else upsertItemType(item);\r\n  }\r\n\r\n  function updateNodeInList(list, node, newValue) {\r\n    for (let i = 0; i < list.length; i++) {\r\n      if (list[i].id === node.id) {\r\n        list[i] = newValue;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  function deleteNodeInList(list, node) {\r\n    for (let i = 0; i < list.length; i++) {\r\n      if (list[i].id === node.id) {\r\n        list.splice(i, 1);\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  function editItemType(item) {\r\n    setItemType(item);\r\n    setUpdateMode(true);\r\n    toggleUpserItemTypeModal(true);\r\n  }\r\n\r\n  function upsertItemType(item) {\r\n    if (updateMode) {\r\n      let obj = {};\r\n      for (const key in selectedItemType) {\r\n        obj[key] = selectedItemType[key];\r\n      }\r\n      obj[\"name\"] = item.name;\r\n      obj[\"title\"] = item.title;\r\n      obj[\"description\"] = item.description;\r\n      updateNodeInList(contentTypes, selectedItemType, obj);\r\n      dispatch({\r\n        type: \"SET_CONTENT_TYPES\",\r\n        value: contentTypes\r\n      });\r\n      toggleUpserItemTypeModal(false);\r\n    } else {\r\n      let obj = {\r\n        id: Math.random(),\r\n        name: item.name,\r\n        title: item.title,\r\n        description: item.description,\r\n        fields: item.selectedTemplate.fields,\r\n        type: \"contentType\",\r\n        template: item.selectedTemplate.name,\r\n        allowCustomFields: item.selectedTemplate.allowCustomFields\r\n      };\r\n      let data = [...contentTypes];\r\n      data.push(obj);\r\n      dispatch({\r\n        type: \"SET_CONTENT_TYPES\",\r\n        value: data\r\n      });\r\n      toggleUpserItemTypeModal(false);\r\n      console.log(contentTypes);\r\n    }\r\n  }\r\n  function removeItemType(selected) {\r\n    deleteNodeInList(contentTypes, selected);\r\n    const data = [...contentTypes];\r\n    dispatch({\r\n      type: \"SET_CONTENT_TYPES\",\r\n      value: data\r\n    });\r\n    toggleRightContent(false);\r\n  }\r\n  function closeRightContent() {\r\n    toggleRightContent();\r\n  }\r\n\r\n  // field\r\n  function showFields(item) {\r\n    if (!rightContent) toggleRightContent(true);\r\n    setItemType(item);\r\n    setFields(item.fields);\r\n  }\r\n  function closeAddFieldModal() {\r\n    toggleUpsertFieldModal(false);\r\n  }\r\n  function addNewField() {\r\n    toggleUpsertFieldModal(prevModal => !prevModal);\r\n  }\r\n  function handleAddField(field) {\r\n    if (selectedItemType.fields === undefined) selectedItemType.fields = [];\r\n    const m = [...fields];\r\n    m.push(field);\r\n    setFields(m);\r\n    selectedItemType.fields.push(field);\r\n    updateNodeInList(contentTypes, selectedItemType, selectedItemType); //\r\n    dispatch({\r\n      type: \"SET_CONTENT_TYPES\",\r\n      value: contentTypes\r\n    });\r\n  }\r\n  function handleRemoveField(field) {\r\n    const m = fields.filter(item => item.id !== field.id);\r\n    setFields(m);\r\n    selectedItemType.fields = m;\r\n    updateNodeInList(contentTypes, selectedItemType, selectedItemType); //\r\n    dispatch({\r\n      type: \"SET_CONTENT_TYPES\",\r\n      value: contentTypes\r\n    });\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"ct-wrapper\">\r\n        <div className=\"ct-header\">\r\n          <div className=\"ct-header-left\">\r\n            <span className=\"ct-header-title\">{pageTitle}</span>\r\n            <span className=\"ct-header-description\">{pageDescription}</span>\r\n          </div>\r\n          <div className=\"ct-header-right\">\r\n            <button className=\"btn btn-primary\" onClick={openAddItemTypeModal}>\r\n              {languageManager.translate(\"CONTENT_TYPE_NEW_ITEM_BTN\")}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"ct-content\">\r\n          <div className=\"ct-content-left\">\r\n            <List\r\n              rightContent={rightContent}\r\n              data={contentTypes}\r\n              handleEditType={selected => editItemType(selected)}\r\n              handleDeleteType={selected => removeItemType(selected)}\r\n              handleShowFields={selected => showFields(selected)}\r\n            />\r\n          </div>\r\n          {rightContent && (\r\n            <div className=\"ct-content-right animated slideInRight faster\">\r\n              <div className=\"ct-content-right-header\">\r\n                <span className=\"ct-right-header-title\">\r\n                  {languageManager.translate(\"CONTENT_TYPE_MODEL_HEADER_TITLE\")}\r\n                </span>\r\n                <span className=\"ct-right-header-description\">\r\n                  {languageManager.translate(\"CONTENT_TYPE_MODEL_HEADER_DESC\")}\r\n                </span>\r\n                <span\r\n                  className=\"icon-cross closeIcon\"\r\n                  onClick={closeRightContent}\r\n                />\r\n              </div>\r\n              <div className=\"ct-content-right-body\">\r\n                <div className=\"fieldsContent\">\r\n                  {/* <SortableContainer onSortEnd={onSortEnd}>\r\n                    {fields.map((value, index) => (\r\n                      <SortableItem\r\n                        key={`item-${index}`}\r\n                        index={index}\r\n                        field={value}\r\n                      />\r\n                    ))}\r\n                  </SortableContainer> */}\r\n                  {fields &&\r\n                    fields.map(field => (\r\n                      <div\r\n                        className=\"fieldItem\"\r\n                        key={field.id}\r\n                        // style={{\r\n                        //   display: !selectedItemType.allowCustomFields\r\n                        //     ? field.isBase\r\n                        //       ? \"none\"\r\n                        //       : \"flex\"\r\n                        //     : \"flex\"\r\n                        // }}\r\n                      >\r\n                        <div className=\"fieldItem-icon\">\r\n                          <i className=\"icon-more-h\" />\r\n                        </div>\r\n                        <div className=\"fieldItem-type\">\r\n                          <i\r\n                            className={\r\n                              field.type === \"string\"\r\n                                ? \"icon-file-text\"\r\n                                : field.type === \"number\"\r\n                                ? \"icon-number\"\r\n                                : field.type === \"dateTime\"\r\n                                ? \"icon-calendar\"\r\n                                : field.type === \"location\"\r\n                                ? \"icon-location\"\r\n                                : field.type === \"media\"\r\n                                ? \"icon-images\"\r\n                                : field.type === \"jsonObject\"\r\n                                ? \"icon-json-file\"\r\n                                : field.type === \"reference\"\r\n                                ? \"icon-reference\"\r\n                                : field.type === \"boolean\"\r\n                                ? \"icon-boolean\"\r\n                                : \"icon-file-text\"\r\n                            }\r\n                          />\r\n                        </div>\r\n                        <div className=\"fieldItem-name\">{field.name}</div>\r\n                        <div className=\"fieldItem-title\">\r\n                          {field.title[currentLang]}\r\n                        </div>\r\n\r\n                        <div className=\"fieldItem-actions\">\r\n                          {field.isBase === undefined || !field.isBase ? (\r\n                            <>\r\n                              <button\r\n                                className=\"btn btn-link\"\r\n                                size=\"xs\"\r\n                                onClick={() => handleRemoveField(field)}\r\n                              >\r\n                                <i className=\"icon-bin\" />\r\n                              </button>\r\n                              <button className=\"btn btn-link\" size=\"xs\">\r\n                                Settings\r\n                              </button>\r\n                            </>\r\n                          ) : (\r\n                            // <span className=\"badge badge-danger label-nonEditable\">\r\n                            //   Non-editable\r\n                            // </span>\r\n                            <div />\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"btnNewFieldContent\">\r\n                  {selectedItemType.allowCustomFields && (\r\n                    <button className=\"btn btn-primary\" onClick={addNewField}>\r\n                      <i className=\"icon-plus\" />\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {upsertItemTypeModal && (\r\n        <AddNewItemType\r\n          selectedItemType={selectedItemType}\r\n          updateMode={updateMode}\r\n          isOpen={upsertFieldModal}\r\n          onCloseModal={closeAddItemTypeModal}\r\n        />\r\n      )}\r\n      {upsertFieldModal && (\r\n        <AddNewField\r\n          selectedItemType={selectedItemType}\r\n          isOpen={upsertFieldModal}\r\n          onCloseModal={closeAddFieldModal}\r\n          onAddField={field => handleAddField(field)}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ItemTypes;\r\n","import React from \"react\";\r\nimport \"./styles.scss\";\r\nconst ManageUsers = props => {\r\n  const { name: pageTitle, desc: pageDescription } = props.component;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"c-wrapper\">\r\n        <div className=\"c-header\">\r\n          <div className=\"c-header-left\">\r\n            <span className=\"c-header-title\">{pageTitle}</span>\r\n            <span className=\"c-header-description\">{pageDescription}</span>\r\n          </div>\r\n          <div className=\"c-header-right\" />\r\n        </div>\r\n        <div className=\"c-content\">\r\n          <div className=\"c-content-left\">\r\n          </div>\r\n          <div className=\"c-content-right\" />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ManageUsers;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { languageManager } from \"../../../../services\";\r\n\r\nconst ContentTypeFilter = props => {\r\n  const currentLang = languageManager.getCurrentLanguage().name;\r\n  const [selected, setSelected] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(selected).length > 0) {\r\n      const c = props.filters.find(item => item.type === \"contentType\");\r\n      if (!c) {\r\n        setSelected({});\r\n      }\r\n    }\r\n  }, [props.filters]);\r\n\r\n  function handleClick(item) {\r\n    setSelected(item);\r\n    if (item.id !== selected.id) props.onContentTypeSelect(item);\r\n  }\r\n  return (\r\n    <div className=\"filterBox\">\r\n      <div className=\"filter-header\">Item Types</div>\r\n      <div className=\"filter-body\">\r\n        {props.data.map(listItem => (\r\n          <div\r\n            className=\"filter-list-item\"\r\n            key={listItem.id}\r\n            onClick={() => handleClick(listItem)}\r\n          >\r\n            <div className=\"item-checkbox\" />\r\n            <div\r\n              className=\"item-name\"\r\n              style={{\r\n                color: selected.id === listItem.id ? \"rgb(56,132,255)\" : \"gray\"\r\n              }}\r\n            >\r\n              {listItem.title[currentLang]}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContentTypeFilter;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { languageManager } from \"../../../../services\";\r\n\r\nconst Tree = props => {\r\n  const currentLang = languageManager.getCurrentLanguage().name;\r\n  const [selected, setSelected] = useState({});\r\n  const [idState, setId] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(selected).length > 0) {\r\n      const c = props.filters.find(item => item.type === \"category\");\r\n      if (!c) {\r\n        setSelected({});\r\n      }\r\n    }\r\n  }, [props.filters]);\r\n  function toggle(event, node) {\r\n    const id = event.target.getAttribute(\"id\");\r\n    let n_s = { ...idState };\r\n    n_s[id] = !idState[id];\r\n    setId(n_s);\r\n    if (node && node.id !== selected.id) {\r\n      setSelected(node);\r\n      props.onCategorySelect(node);\r\n    }\r\n  }\r\n  function mapper(nodes, parentId, lvl) {\r\n    return nodes.map((node, index) => {\r\n      if (node.type !== \"contentType\") {\r\n        const id = `${node.id}-${parentId ? parentId : \"top\"}`.replace(\r\n          /[^a-zA-Z0-9-_]/g,\r\n          \"\"\r\n        );\r\n        return (\r\n          <li\r\n            key={id}\r\n            className=\"animated fadeIn faster\"\r\n            style={{\r\n              color: selected.id === node.id ? \"rgb(56,132,255)\" : \"gray\"\r\n            }}\r\n          >\r\n            {node.children ? (\r\n              <>\r\n                {idState[id] ? (\r\n                  <i\r\n                    className=\"icon-down-chevron chevron\"\r\n                    onClick={toggle}\r\n                    id={id}\r\n                  />\r\n                ) : (\r\n                  <i\r\n                    className=\"icon-right-chevron chevron\"\r\n                    onClick={toggle}\r\n                    id={id}\r\n                  />\r\n                )}\r\n                {node.name[currentLang]}\r\n                <ul style={{ display: idState[id] ? \"block\" : \"none\" }}>\r\n                  {mapper(node.children, id, (lvl || 0) + 1)}\r\n                </ul>\r\n              </>\r\n            ) : (\r\n              <span onClick={e => toggle(e, node)} id={id}>\r\n                {node.name[currentLang]}\r\n              </span>\r\n            )}\r\n          </li>\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"filterBox\">\r\n      <div className=\"filter-header\">Categories</div>\r\n      <div className=\"filter-body\">\r\n        <ul>\r\n          <li className=\"root\">\r\n            <i className=\"icon-right-chevron chevron\" />\r\n            All Categories\r\n          </li>\r\n          {mapper(props.data)}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tree;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\nimport { useGlobalState, languageManager } from \"./../../services\";\r\nimport \"./styles.scss\";\r\n\r\nimport ContentTypes from \"./FilterBox/contentTypes\";\r\nimport Tree from \"./FilterBox/categories\";\r\n\r\nconst Products = props => {\r\n  let baseFieldColumnsConfig = [\r\n    {\r\n      Header: \"#\",\r\n      //show: false,\r\n      width: 70,\r\n      headerStyle: {\r\n        display: \"block\"\r\n      },\r\n      Cell: props => {\r\n        return (\r\n          <div className=\"p-number\">\r\n            <div className=\"p-number-value\">{props.index + 1}</div>\r\n          </div>\r\n        );\r\n      }\r\n    },\r\n    {\r\n      width: 100,\r\n      Header: () => <div className=\"p-header-td\">Image</div>,\r\n      //show: false,\r\n      headerStyle: {\r\n        display: \"block\"\r\n      },\r\n      accessor: \"fields.thumbnail\",\r\n      Cell: props => (\r\n        <div className=\"p-image\">\r\n          <img\r\n            className=\"p-image-value\"\r\n            src={\r\n              props.value\r\n                ? props.value[languageManager.getCurrentLanguage().name]\r\n                : \"https://upload.wikimedia.org/wikipedia/commons/thumb/6/6c/No_image_3x4.svg/1024px-No_image_3x4.svg.png\"\r\n            }\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      Header: () => <div className=\"p-header-td\">Name</div>,\r\n      //show: false,\r\n      headerStyle: {\r\n        display: \"block\"\r\n      },\r\n      accessor: \"fields.name\",\r\n      Cell: props => (\r\n        <div className=\"p-name\">\r\n          {props.value\r\n            ? props.value[languageManager.getCurrentLanguage().name]\r\n            : \"\"}\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      Header: () => <div className=\"p-header-td\">Description</div>,\r\n      //show: false,\r\n      headerStyle: {\r\n        display: \"block\"\r\n      },\r\n      accessor: \"fields.shortDesc\",\r\n      Cell: props => (\r\n        <div className=\"p-description\">\r\n          {props.value\r\n            ? props.value[languageManager.getCurrentLanguage().name]\r\n            : \"\"}\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      Header: () => <div className=\"p-header-td\">Issuer</div>,\r\n      //show: false,\r\n      headerStyle: {\r\n        display: \"block\"\r\n      },\r\n      accessor: \"sys.issuer.fullName\",\r\n      Cell: props => <div className=\"p-issuer\">{props.value}</div>\r\n    },\r\n    {\r\n      Header: () => <div className=\"p-header-td\">Issue Date</div>,\r\n      //show: false,\r\n      headerStyle: {\r\n        display: \"block\"\r\n      },\r\n      accessor: \"sys.issueDate\",\r\n      Cell: props => <div className=\"p-date\">{props.value}</div>\r\n    },\r\n    {\r\n      Header: \"Actions\",\r\n      //show: false,\r\n      headerStyle: {\r\n        display: \"block\"\r\n      },\r\n      Cell: props => (\r\n        <div className=\"p-actions\">\r\n          <button\r\n            className=\"btn btn-light\"\r\n            onClick={() => handleEditRow(props)}\r\n          >\r\n            Edit\r\n          </button>\r\n          <button\r\n            className=\"btn btn-light\"\r\n            onClick={() => handleDeleteRow(props)}\r\n          >\r\n            <i className=\"icon-bin\" />\r\n          </button>\r\n        </div>\r\n      )\r\n    }\r\n  ];\r\n  const currentLang = languageManager.getCurrentLanguage().name;\r\n\r\n  // variables\r\n  const [{ contents, categories, contentTypes }, dispatch] = useGlobalState();\r\n  const [tableData, setTableData] = useState([]);\r\n  const tableBox = useRef(null);\r\n  const { name: pageTitle, desc: pageDescription } = props.component;\r\n\r\n  const [listContent, toggleListContent] = useState(true);\r\n  const [leftContent, toggleLeftContent] = useState(false);\r\n\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [selectedNode, setSelectedNode] = useState();\r\n  const [selectedContentType, setSelectedContentType] = useState();\r\n  const [columnsVisibility, toggleColumns] = useState(false);\r\n\r\n  const [columns, setColumns] = useState(baseFieldColumnsConfig.slice());\r\n  const [dataFilters, setFilters] = useState([]);\r\n\r\n  useEffect(() => {\r\n    doFiltersOnData();\r\n  }, [dataFilters]);\r\n  // methods\r\n  function initColumns() {\r\n    if (columnsVisibility) {\r\n      const cols = baseFieldColumnsConfig.map(col => {\r\n        let item = col;\r\n        item.headerStyle.display = \"none\";\r\n        return item;\r\n      });\r\n      setColumns(cols);\r\n      toggleColumns(true);\r\n    }\r\n  }\r\n\r\n  function toggleFilterBox() {\r\n    toggleLeftContent(prevState => !prevState);\r\n  }\r\n  function openNewItemBox(contentType) {\r\n    props.history.push({\r\n      pathname: \"/addNew\"\r\n      // search: \"?sort=name\",\r\n      //hash: \"#the-hash\",\r\n      //params: { contentType, hasContentType }\r\n    });\r\n  }\r\n  function makeTableFieldView(type, props) {\r\n    switch (type) {\r\n      case \"string\":\r\n        return <div className=\"p-string\">{props.value}</div>;\r\n      default:\r\n        return <div className=\"p-string\">{props.value}</div>;\r\n    }\r\n  }\r\n\r\n  function doFiltersOnData() {\r\n    if (dataFilters.length > 0) {\r\n      const data = contents.filter(item => {\r\n        for (let i = 0; i < dataFilters.length; i++) {\r\n          const filter = dataFilters[i];\r\n          if (filter.type === \"text\") {\r\n            if (\r\n              item.fields.name[currentLang].toLowerCase().includes(filter.title)\r\n            ) {\r\n              return true;\r\n            }\r\n          }\r\n          if (filter.type === \"contentType\") {\r\n            if (item.contentType.id === filter.id) {\r\n              return true;\r\n            }\r\n          }\r\n          if (filter.type === \"category\") {\r\n            if (item.category.id === filter.id) {\r\n              return true;\r\n            }\r\n          }\r\n        }\r\n        return false;\r\n      });\r\n      setTableData(data);\r\n    }else{\r\n      setTableData([...contents])\r\n    }\r\n  }\r\n  function removeFilter(filter) {\r\n    let f = dataFilters.filter(item => item.type !== filter.type);\r\n    setFilters(f);\r\n    if (filter.type === \"text\") setSearchText(\"\");\r\n    // doFiltersOnData();\r\n  }\r\n  function handleSearchChanged() {\r\n\r\n    if (searchText.length === 0) {\r\n      let f = [...dataFilters].filter(item => item.type !== \"text\");\r\n      setFilters(f);\r\n    } else {\r\n      let f = [...dataFilters].filter(item => item.type !== \"text\");\r\n      f.push({ type: \"text\", title: searchText });\r\n      setFilters(f);\r\n    }\r\n    //  doFiltersOnData();\r\n  }\r\n  function handleContentTypeSelect(selected) {\r\n    setSelectedContentType(selected);\r\n    let f = [...dataFilters].filter(item => item.type !== \"contentType\");\r\n    f.push(selected);\r\n    setFilters(f);\r\n    //doFiltersOnData();\r\n  }\r\n  function handleClickCategory(selected) {\r\n    setSelectedNode(selected);\r\n    let f = [...dataFilters].filter(item => item.type !== \"category\");\r\n    f.push(selected);\r\n    setFilters(f);\r\n    //  doFiltersOnData();\r\n    // if (selected.type === \"category\") {\r\n    //   initColumns();\r\n    // } else {\r\n    //   if (selected.fields) {\r\n    //     toggleColumns(true); // columns are visible or not\r\n\r\n    //     const cols = columns.slice();\r\n    //     let c_arr = cols.map(col => {\r\n    //       let item = col;\r\n    //       item.headerStyle.display = \"flex\";\r\n    //       return item;\r\n    //     });\r\n    //     const fields = selected.fields;\r\n    //     for (let i = 0; i < fields.length; i++) {\r\n    //       const field = selected.fields[i];\r\n    //       const obj = {\r\n    //         Header: field.title,\r\n    //         //show: false,\r\n    //         headerStyle: {\r\n    //           display: \"block\"\r\n    //         },\r\n    //         accessor: field.name,\r\n    //         Cell: props => {\r\n    //           return makeTableFieldView(field.type, props);\r\n    //         }\r\n    //       };\r\n    //       c_arr.push(obj);\r\n    //     }\r\n    //     setColumns(c_arr);\r\n    //   } else {\r\n    //     initColumns();\r\n    //   }\r\n    // }\r\n  }\r\n  function handleDeleteRow(row) {\r\n    dispatch({\r\n      type: \"DELETE_ITEM\",\r\n      value: row.original\r\n    });\r\n  }\r\n  function handleEditRow(row) {\r\n    props.history.push({\r\n      pathname: `/editItem/${row.original.sys.id}`\r\n      // search: \"?sort=name\",\r\n      //hash: \"#the-hash\",\r\n      //  params: { selectedItem: row.original }\r\n    });\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"p-wrapper\">\r\n        <div className=\"p-header\">\r\n          <div className=\"p-header-left\">\r\n            <span className=\"p-header-title\">{pageTitle}</span>\r\n            <span className=\"p-header-description\">{pageDescription}</span>\r\n          </div>\r\n          <div className=\"p-header-right\">\r\n            <div className=\"input-group\">\r\n              <div\r\n                className=\"input-group-prepend\"\r\n                onClick={handleSearchChanged}\r\n              >\r\n                <span className=\"input-group-text searchBtn\">Search</span>\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Search in all data\"\r\n                value={searchText}\r\n                onChange={e => setSearchText(e.target.value)}\r\n              />\r\n            </div>\r\n            {/* <button className=\"btn btn-primary\">\r\n              <i className=\"icon-folder\" />\r\n            </button>\r\n            <button className=\"btn btn-primary\">\r\n              <i className=\"icon-list\" />\r\n            </button> */}\r\n            <button className=\"btn btn-primary\" onClick={toggleFilterBox}>\r\n              <i className=\"icon-filter\" />\r\n            </button>\r\n            <button className=\"btn btn-primary\" onClick={openNewItemBox}>\r\n              New Item\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"p-content\">\r\n          {listContent && (\r\n            <>\r\n              {leftContent && (\r\n                <>\r\n                  <div className=\"p-content-left animated fadeIn faster\">\r\n                    <div className=\"filterBox\">\r\n                      <div className=\"filter-header\">Selected Filters</div>\r\n                      <div className=\"filter-body\">\r\n                        <div className=\"selectedFilters\">\r\n                          {dataFilters.length === 0 && (\r\n                            <div className=\"empty-dataFilter\">\r\n                              There is no selected filter\r\n                            </div>\r\n                          )}\r\n                          {dataFilters.map(filter => (\r\n                            <div key={filter.id} className=\"filterItem\">\r\n                              <span className=\"filterText\">\r\n                                {filter.title !== undefined\r\n                                  ? filter.title.en !== undefined\r\n                                    ? filter.title[currentLang]\r\n                                    : filter.title\r\n                                  : filter.name[currentLang]}\r\n                              </span>\r\n                              <span\r\n                                className=\"icon-cross icon\"\r\n                                onClick={() => removeFilter(filter)}\r\n                              />\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <ContentTypes\r\n                      filters={dataFilters}\r\n                      leftContent={leftContent}\r\n                      data={contentTypes}\r\n                      onContentTypeSelect={selected =>\r\n                        handleContentTypeSelect(selected)\r\n                      }\r\n                    />\r\n                    <Tree\r\n                      filters={dataFilters}\r\n                      leftContent={leftContent}\r\n                      data={categories}\r\n                      onCategorySelect={selected =>\r\n                        handleClickCategory(selected)\r\n                      }\r\n                    />\r\n                  </div>\r\n                </>\r\n              )}\r\n              <div className=\"p-content-right\" ref={tableBox}>\r\n                <div className=\"p-content-right-header\">\r\n                  <div className=\"p-content-header-title\">All Data</div>\r\n                </div>\r\n                <div className=\"p-content-right-body\">\r\n                  <ReactTable\r\n                    data={tableData}\r\n                    defaultPageSize={10}\r\n                    minRows={0}\r\n                    columns={columns}\r\n                    showPaginationTop={false}\r\n                    showPaginationBottom={false}\r\n                    style={{\r\n                      border: \"none\",\r\n                      overflow: \"auto\",\r\n                      height: \"100%\" // This will force the table body to overflow and scroll, since there is not enough room\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n","import React from \"react\";\r\nimport \"./styles.scss\";\r\nconst Requests = props => {\r\n  const { name: pageTitle, desc: pageDescription } = props.component;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"c-wrapper\">\r\n        <div className=\"c-header\">\r\n          <div className=\"c-header-left\">\r\n            <span className=\"c-header-title\">{pageTitle}</span>\r\n            <span className=\"c-header-description\">{pageDescription}</span>\r\n          </div>\r\n          <div className=\"c-header-right\" />\r\n        </div>\r\n        <div className=\"c-content\">\r\n          <div className=\"c-content-left\" />\r\n          <div className=\"c-content-right\" />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Requests;\r\n","import React from \"react\";\r\nimport \"./styles.scss\";\r\nconst Quotes = props => {\r\n  const { name: pageTitle, desc: pageDescription } = props.component;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"c-wrapper\">\r\n        <div className=\"c-header\">\r\n          <div className=\"c-header-left\">\r\n            <span className=\"c-header-title\">{pageTitle}</span>\r\n            <span className=\"c-header-description\">{pageDescription}</span>\r\n          </div>\r\n          <div className=\"c-header-right\" />\r\n        </div>\r\n        <div className=\"c-content\">\r\n          <div className=\"c-content-left\">\r\n          </div>\r\n          <div className=\"c-content-right\" />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Quotes;\r\n","import React, { Component } from \"react\";\r\nimport { ListGroup, ListGroupItem, Collapse } from \"reactstrap\";\r\nimport { languageManager } from \"../../../services\";\r\n\r\nclass Tree extends Component {\r\n  state = {\r\n    selected: {},\r\n    hasContentType: false,\r\n    currentLang: languageManager.getCurrentLanguage().name\r\n  };\r\n  static getDerivedStateFromProps(props, current_state) {\r\n    if (!props.leftContent) {\r\n      return {\r\n        selected: {}\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n  toggle = event => {\r\n    const id = event.target.getAttribute(\"id\");\r\n    this.setState(state => ({ [id]: !state[id] }));\r\n  };\r\n  mapper = (nodes, parentId, lvl) => {\r\n    return nodes.map((node, index) => {\r\n      if (node.type === \"category\") {\r\n        const id = `${node.id}-${parentId ? parentId : \"top\"}`.replace(\r\n          /[^a-zA-Z0-9-_]/g,\r\n          \"\"\r\n        );\r\n        return (\r\n          <>\r\n            <ListGroupItem\r\n              key={index}\r\n              style={{\r\n                zIndex: 0,\r\n                padding: 10,\r\n                background:\r\n                  this.state.selected.id === node.id ? \"lightgray\" : \"white\"\r\n              }}\r\n              className={`treeItemParent ${\r\n                parentId ? `rounded-0 ${lvl ? \"border-bottom-0\" : \"\"}` : \"\"\r\n              }`}\r\n            >\r\n              {\r\n                <div\r\n                  className=\"treeItem\"\r\n                  style={{\r\n                    paddingLeft: `${15 * lvl}px`\r\n                  }}\r\n                >\r\n                  {node.children && node.children.length > 0 ? (\r\n                    <button\r\n                      className=\"btnCategoryCollapse btn btn-primary btn-sm\"\r\n                      id={id}\r\n                      color=\"primary\"\r\n                      onClick={this.toggle}\r\n                    >\r\n                      {this.state[id] ? (\r\n                        <i className=\"icon-caret-down\" onClick={this.toggle} />\r\n                      ) : (\r\n                        <i className=\"icon-caret-right\" onClick={this.toggle} />\r\n                      )}\r\n                    </button>\r\n                  ) : node.type === \"category\" ? (\r\n                    <button className=\"btnCategoryLeaf btn btn-primary btn-sm\">\r\n                      <i className=\"icon-circle-o\" />\r\n                    </button>\r\n                  ) : (\r\n                    <button className=\"btnCategoryLeaf btn btn-dark btn-sm\">\r\n                      <i className=\"icon-circle-o\" />\r\n                    </button>\r\n                  )}\r\n                  <div className=\"treeItem-text\">\r\n                    <span className=\"treeItem-name\">\r\n                      {node.name[this.state.currentLang]}\r\n                    </span>\r\n                    <span className=\"treeItem-desc\">\r\n                      {node.description[this.state.currentLang] ||\r\n                        \"Lorem ipsum dolor sit amet, consectetur\"}\r\n                    </span>\r\n                  </div>\r\n                  {(node.children === undefined ||\r\n                    node.children.length === 0) && (\r\n                    <button\r\n                      className=\"btn btn-light treeItem-action\"\r\n                      size=\"xs\"\r\n                      onClick={() => {\r\n                        this.setState(state => ({ selected: node }));\r\n                        this.props.onRowSelect(node);\r\n                      }}\r\n                    >\r\n                      <span style={{ fontSize: 12 }}>\r\n                        {languageManager.translate(\"Select\")}\r\n                      </span>\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              }\r\n            </ListGroupItem>\r\n            {node.children && (\r\n              <Collapse isOpen={this.state[id]}>\r\n                {this.mapper(node.children, id, (lvl || 0) + 1)}\r\n              </Collapse>\r\n            )}\r\n          </>\r\n        );\r\n      } else {\r\n        return <></>;\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return <ListGroup>{this.mapper(this.props.data)}</ListGroup>;\r\n  }\r\n}\r\n\r\nexport default Tree;\r\n","import React, { useState } from \"react\";\r\nimport \"./styles.scss\";\r\nimport { Modal, ModalHeader, ModalBody } from \"reactstrap\";\r\nimport Tree from \"./tree\";\r\n\r\nconst Categories = props => {\r\n  function handleRowSelect(selected) {\r\n    props.onCloseModal(selected);\r\n  }\r\n\r\n  function closeModal(params) {\r\n    props.onCloseModal(undefined);\r\n  }\r\n  return (\r\n    <Modal isOpen={true} toggle={closeModal}>\r\n      <ModalHeader toggle={closeModal}>Choose a category</ModalHeader>\r\n      <ModalBody className=\"up-categories\">\r\n        <Tree\r\n          data={props.categories}\r\n          onRowSelect={selected => handleRowSelect(selected)}\r\n        />\r\n      </ModalBody>\r\n    </Modal>\r\n  );\r\n};\r\nexport default Categories;\r\n","import React, { useState } from \"react\";\r\nimport \"./styles.scss\";\r\nimport { languageManager } from \"../../../../services\";\r\n\r\nconst BooleanComponent = props => {\r\n  const currentLang = languageManager.getCurrentLanguage().name;\r\n  const { field } = props;\r\n  if (field.appearance === \"checkbox\") {\r\n    return (\r\n      <div className=\"form-check\">\r\n        <input\r\n          className=\"form-check-input\"\r\n          type=\"checkbox\"\r\n          value=\"\"\r\n          id={\"chk\" + field.id}\r\n        />\r\n        <label className=\"form-check-label\" for={\"chk\" + field.id}>\r\n          {field.title[currentLang]}\r\n        </label>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"form-check\">\r\n        <input\r\n          className=\"form-check-input\"\r\n          type=\"checkbox\"\r\n          value=\"\"\r\n          id={\"chk\" + field.id}\r\n        />\r\n        <label className=\"form-check-label\" for={\"chk\" + field.id}>\r\n          {field.title[currentLang]}\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default BooleanComponent;\r\n","import React, { useState } from \"react\";\r\nimport \"./styles.scss\";\r\nimport { languageManager } from \"../../../../services\";\r\n\r\nconst DateTimeInput = props => {\r\n    const currentLang = languageManager.getCurrentLanguage().name;\r\n  const { field } = props;\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label>{field.title[currentLang]}</label>\r\n      <textarea\r\n        type=\"datetime\"\r\n        className=\"form-control up-form-stringInput-textArea\"\r\n        placeholder={field.title[currentLang]}\r\n\r\n      />\r\n      <small className=\"form-text text-muted\">{field.description[currentLang]}</small>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DateTimeInput;\r\n","import React, { useState } from \"react\";\r\nimport \"./styles.scss\";\r\nimport { languageManager } from \"../../../../services\";\r\n\r\nconst KeyValueInput = props => {\r\n    const currentLang = languageManager.getCurrentLanguage().name;\r\n  const { field } = props;\r\n  if (field.appearance === \"combo\") {\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label>{field.title[currentLang]}</label>\r\n        <select className=\"form-control\">\r\n          {field.options &&\r\n            field.options.map(option => (\r\n              <option value={option.key}>{option.value}</option>\r\n            ))}\r\n        </select>\r\n        <small className=\"form-text text-muted\">{field.description[currentLang]}</small>\r\n      </div>\r\n    );\r\n  } else if (field.appearance === \"radioGroup\") {\r\n    return (\r\n      <>\r\n        <label>{field.title[currentLang]}</label>\r\n        <div className=\"up-form-keyvalue-radio\">\r\n          {field.options.map(option => (\r\n            <div class=\"form-check\">\r\n              <input\r\n                class=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"exampleRadios\"\r\n                id={\"radio\" + option.key}\r\n                value={option.key}\r\n              />\r\n              <label class=\"form-check-label\" for={\"radio\" + option.key}>\r\n                {option.value}\r\n              </label>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label>{field.title[currentLang]}</label>\r\n        <select className=\"form-control\">\r\n          {field.options &&\r\n            field.options.map(option => (\r\n              <option value={option.key}>{option.value}</option>\r\n            ))}\r\n        </select>\r\n        <small className=\"form-text text-muted\">{field.description[currentLang]}</small>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default KeyValueInput;\r\n","import React, { useState } from \"react\";\r\nimport \"./styles.scss\";\r\n\r\nconst LocationInput = props => {\r\n    return <div />;\r\n}\r\n\r\nexport default LocationInput;","import React, { useState, useEffect } from \"react\";\r\nimport \"./styles.scss\";\r\nimport { languageManager, utility } from \"../../../../services\";\r\n\r\nconst MediaInput = props => {\r\n  const currentLang = languageManager.getCurrentLanguage().name;\r\n  const { field, formData } = props;\r\n  const [images, setImages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (props.init && field.isRequired !== undefined && field.isRequired) {\r\n      if (formData[field.name] === undefined) props.init(field.name);\r\n    }\r\n    if (formData[field.name]) {\r\n      if (field.isList) {\r\n        setImages(formData[field.name]);\r\n      } else {\r\n        if (field.isTranslate) {\r\n          let imgs = [];\r\n          imgs.push({ url: formData[field.name][currentLang] });\r\n          setImages(imgs);\r\n        } else {\r\n          let imgs = [];\r\n          imgs.push({ url: formData[field.name][currentLang] });\r\n          setImages(imgs);\r\n        }\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  function handleChange(event) {\r\n    const obj = {\r\n      id: Math.random(),\r\n      url: URL.createObjectURL(event.target.files[0])\r\n    };\r\n    if (field.isList !== undefined && field.isList) {\r\n      let imgs = [...images];\r\n      imgs.push(obj);\r\n      setImages(imgs);\r\n      props.onChangeValue(field.name, imgs, true);\r\n    } else {\r\n      let imgs = [...images];\r\n      imgs[0] = obj;\r\n      setImages(imgs);\r\n\r\n      let img;\r\n      if (field.isTranslate) {\r\n        img = utility.applyeLangs(imgs[0].url);\r\n      }\r\n      props.onChangeValue(field.name, img, true);\r\n    }\r\n  }\r\n\r\n  function removeImage(image) {\r\n    const imgs = images.filter(img => img.id !== image.id);\r\n    setImages(imgs);\r\n\r\n    if (field.isRequired) {\r\n      if (field.isList !== undefined && field.isList) {\r\n        if (imgs.length === 0) props.onChangeValue(field.name, imgs, false);\r\n        else props.onChangeValue(field.name, imgs, true);\r\n      } else {\r\n        if (imgs.length === 0) {\r\n          let img;\r\n          if (field.isTranslate) {\r\n            img = utility.applyeLangs(\"\");\r\n            props.onChangeValue(field.name, img, false);\r\n          } else props.onChangeValue(field.name, \"\", false);\r\n        }\r\n      }\r\n    } else {\r\n      props.onChangeValue(field.name, imgs, true);\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"up-uploader\">\r\n      <span className=\"title\">{field.title[currentLang]}</span>\r\n      <span className=\"description\">{field.description[currentLang]}</span>\r\n\r\n      <div className=\"files\">\r\n        {images.map(image => (\r\n          <div key={image.id} className=\"files-uploaded\">\r\n            <div\r\n              className=\"files-uploaded-icon\"\r\n              onClick={() => removeImage(image)}\r\n            >\r\n              <i className=\"icon-bin\" />\r\n            </div>\r\n            <img src={image.url} alt=\"\" />\r\n          </div>\r\n        ))}\r\n        <div className=\"files-input\">\r\n          <input type=\"file\" className=\"btn\" onChange={handleChange} />\r\n          <i className=\"icon-camera\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MediaInput;\r\n","import React, { useState } from \"react\";\r\nimport \"./styles.scss\";\r\nimport { languageManager } from \"../../../../services\";\r\n\r\nconst NumberInput = props => {\r\n  const currentLang = languageManager.getCurrentLanguage().name;\r\n\r\n  const { field } = props;\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label>{field.title[currentLang]}</label>\r\n      <input type=\"number\" className=\"form-control\" placeholder={field.title} />\r\n      <small className=\"form-text text-muted\">\r\n        {field.description[currentLang]}\r\n      </small>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NumberInput;\r\n","import React, { useState } from \"react\";\r\nimport \"./styles.scss\";\r\nimport { languageManager } from \"../../../../services\";\r\n\r\nconst RichTextInput = props => {\r\n  const currentLang = languageManager.getCurrentLanguage().name;\r\n  const { field } = props;\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label>{field.title[currentLang]}</label>\r\n      <textarea\r\n        type=\"text\"\r\n        className=\"form-control up-form-richtext-textArea\"\r\n        placeholder={field.title}\r\n      />\r\n      <small className=\"form-text text-muted\">\r\n        {field.description[currentLang]}\r\n      </small>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RichTextInput;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./styles.scss\";\r\nimport { languageManager, utility } from \"../../../../services\";\r\n\r\nconst StringInput = props => {\r\n  const currentLang = languageManager.getCurrentLanguage().name;\r\n\r\n  const { field, formData } = props;\r\n  // چک کن ببین فرم دیتا با این اسم فیلد مقدار داره یا نه . الان فقط رو یه اینپوت ست کردم باید رو تک تک اینپوت های زبان ها ست بشه\r\n  const [input, setInput] = useState(\r\n    props.formData[field.name]\r\n      ? field.isTranslate\r\n        ? props.formData[field.name][currentLang]\r\n        : props.formData[field.name]\r\n      : \"\"\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (props.init && field.isRequired !== undefined && field.isRequired) {\r\n      if (formData[field.name] === undefined) props.init(field.name);\r\n    }\r\n  }, []);\r\n  function handleOnChange(e) {\r\n    setInput(e.target.value);\r\n\r\n    let value;\r\n    if (field.isTranslate) value = utility.applyeLangs(e.target.value);\r\n    else value = e.target.value;\r\n\r\n    if (field.isRequired) {\r\n      let isValid = false;\r\n      if (e.target.value.length > 0) {\r\n        isValid = true;\r\n      }\r\n      props.onChangeValue(field.name, value, isValid);\r\n    } else props.onChangeValue(field.name, value, true);\r\n  }\r\n  if (field.isMultiLine !== undefined && field.isMultiLine) {\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label>{field.title[currentLang]}</label>\r\n        <textarea\r\n          type=\"text\"\r\n          className=\"form-control up-form-stringInput-textArea\"\r\n          placeholder={field.title[currentLang]}\r\n          value={input}\r\n          onChange={handleOnChange}\r\n        />\r\n        <small className=\"form-text text-muted\">\r\n          {field.description[currentLang]}\r\n        </small>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label>{field.title[currentLang]}</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder={field.title[currentLang]}\r\n          value={input}\r\n          onChange={handleOnChange}\r\n        />\r\n        <small className=\"form-text text-muted\">\r\n          {field.description[currentLang]}\r\n        </small>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default StringInput;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./styles.scss\";\r\nimport { useGlobalState, languageManager } from \"./../../services\";\r\nimport CategoriesModal from \"./Categories\";\r\nimport {\r\n  String,\r\n  Number,\r\n  DateTime,\r\n  Location,\r\n  Media,\r\n  Boolean,\r\n  KeyValue,\r\n  RichText\r\n} from \"./Inputs\";\r\n\r\nconst UpsertProduct = props => {\r\n  let selectedItem;\r\n  const currentLang = languageManager.getCurrentLanguage().name;\r\n  const [{ categories, contentTypes, contents }, dispatch] = useGlobalState();\r\n\r\n  // variables\r\n  const [updateMode, toggleUpdateMode] = useState(\r\n    props.match.params.id ? true : false\r\n  );\r\n  const [tab, toggleTab] = useState();\r\n  const [categoryModal, toggleCategoryModal] = useState(false);\r\n  const [category, setCategory] = useState();\r\n  const [contentType, setContentType] = useState();\r\n  const [fields, setFields] = useState();\r\n\r\n  const [formData, setFormData] = useState({});\r\n  const [formValidation, setFormValidation] = useState();\r\n\r\n  useEffect(() => {\r\n    if (updateMode) {\r\n      if (props.match.params.id !== undefined) {\r\n        if (props.match.params.id.length > 0) {\r\n          toggleUpdateMode(true);\r\n          getItemById(props.match.params.id);\r\n        } else {\r\n          toggleTab(3);\r\n        }\r\n      } else {\r\n        toggleTab(1);\r\n      }\r\n    } else toggleTab(1);\r\n  }, [props.match.params.id]);\r\n\r\n  // methods\r\n  function getItemById(id) {\r\n    selectedItem = contents.find(item => item.sys.id === id);\r\n    if (selectedItem) {\r\n      if (tab !== 2) toggleTab(2);\r\n      setFormData(selectedItem.fields);\r\n      setContentType(selectedItem.contentType);\r\n      const c = contentTypes.find(\r\n        item => item.id === selectedItem.contentType.id\r\n      );\r\n      setFields(c.fields.sort((a, b) => a.index - b.index));\r\n      setCategory(selectedItem.category);\r\n    } else {\r\n      toggleTab(3);\r\n    }\r\n  }\r\n  function setNameToFormValidation(name) {\r\n    setFormValidation(prevFormValidation => ({\r\n      [name]: null,\r\n      ...prevFormValidation\r\n    }));\r\n  }\r\n  function handleOnChangeValue(key, value, isValid) {\r\n    // add value to form\r\n    let f = { ...formData };\r\n    f[key] = value;\r\n    setFormData(f);\r\n    // check validation\r\n    let obj = { ...formValidation };\r\n    if (isValid && obj) {\r\n      delete obj[key];\r\n      if (Object.keys(obj).length === 0) {\r\n        setFormValidation(undefined);\r\n      } else {\r\n        setFormValidation(obj);\r\n      }\r\n    } else {\r\n      if (obj === undefined) {\r\n        obj = {};\r\n      }\r\n      obj[key] = null;\r\n      setFormValidation(obj);\r\n    }\r\n  }\r\n  function showCatgoryModal() {\r\n    toggleCategoryModal(true);\r\n  }\r\n  function onCloseModel(selected) {\r\n    if (selected !== undefined) {\r\n      setCategory(selected);\r\n    }\r\n    toggleCategoryModal(false);\r\n  }\r\n\r\n  function getFieldItem(field) {\r\n    switch (field.type.toLowerCase()) {\r\n      case \"string\":\r\n        return (\r\n          <String\r\n            field={field}\r\n            formData={formData}\r\n            init={setNameToFormValidation}\r\n            onChangeValue={handleOnChangeValue}\r\n          />\r\n        );\r\n      case \"number\":\r\n        return (\r\n          <Number\r\n            field={field}\r\n            formData={formData}\r\n            init={setNameToFormValidation}\r\n            onChangeValue={handleOnChangeValue}\r\n          />\r\n        );\r\n      case \"datetime\":\r\n        return (\r\n          <DateTime\r\n            field={field}\r\n            formData={formData}\r\n            init={setNameToFormValidation}\r\n            onChangeValue={handleOnChangeValue}\r\n          />\r\n        );\r\n      case \"location\":\r\n        return (\r\n          <Location\r\n            field={field}\r\n            formData={formData}\r\n            init={setNameToFormValidation}\r\n            onChangeValue={handleOnChangeValue}\r\n          />\r\n        );\r\n      case \"media\":\r\n        return (\r\n          <Media\r\n            formData={formData}\r\n            field={field}\r\n            init={setNameToFormValidation}\r\n            onChangeValue={handleOnChangeValue}\r\n          />\r\n        );\r\n      case \"boolean\":\r\n        return (\r\n          <Boolean\r\n            field={field}\r\n            formData={formData}\r\n            init={setNameToFormValidation}\r\n            onChangeValue={handleOnChangeValue}\r\n          />\r\n        );\r\n      case \"keyvalue\":\r\n        return (\r\n          <KeyValue\r\n            field={field}\r\n            formData={formData}\r\n            init={setNameToFormValidation}\r\n            onChangeValue={handleOnChangeValue}\r\n          />\r\n        );\r\n      case \"richtext\":\r\n        return (\r\n          <RichText\r\n            field={field}\r\n            formData={formData}\r\n            init={setNameToFormValidation}\r\n            onChangeValue={handleOnChangeValue}\r\n          />\r\n        );\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  function backToProducts() {\r\n    props.history.push(\"/home/products\");\r\n  }\r\n  function changeTab(tab) {\r\n    if (tab === 2) {\r\n      if (contentType !== undefined) {\r\n        toggleTab(2);\r\n        const f = contentType.fields;\r\n        setFields(f.sort((a, b) => a.index - b.index));\r\n      }\r\n    } else {\r\n      toggleTab(1);\r\n    }\r\n  }\r\n  function handleSelectContentType(contentType) {\r\n    setContentType(contentType);\r\n    changeTab(2);\r\n  }\r\n  function upsertItem(closePage) {\r\n    const obj = {\r\n      sys: {\r\n        id: updateMode ? props.match.params.id : Math.random().toString(),\r\n        issuer: {\r\n          id: \"1\",\r\n          fullName: \"Saeed Padyab\",\r\n          image: \"\"\r\n        },\r\n        issueDate: \"19/01/2019 20:18\"\r\n      },\r\n      //contentType: contentType.id,\r\n      contentType: {\r\n        id: contentType.id,\r\n        name: contentType.name,\r\n        title: contentType.title\r\n      },\r\n      //category:category.id,\r\n      category: {\r\n        id: category.id,\r\n        name: category.name\r\n      },\r\n      fields: formData\r\n    };\r\n\r\n    if (updateMode) {\r\n      dispatch({\r\n        type: \"UPDATE_ITEM\",\r\n        value: obj\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: \"ADD_ITEM_TO_CONTENTS\",\r\n        value: obj\r\n      });\r\n    }\r\n    if (closePage) {\r\n      backToProducts();\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"up-wrapper\">\r\n      <div className=\"up-header\">\r\n        <button className=\"btn btn-light\" onClick={backToProducts}>\r\n          <i className=\"icon-arrow-left2\" />\r\n          Back\r\n        </button>\r\n        <div className=\"tabItems\">\r\n          {updateMode ? (\r\n            <div className=\"item active\">Update Mode</div>\r\n          ) : (\r\n            <>\r\n              <div\r\n                className={[\"item\", tab === 1 ? \"active\" : \"\"].join(\" \")}\r\n                onClick={() => changeTab(1)}\r\n              >\r\n                1.Choosing Item Type\r\n              </div>\r\n              <div\r\n                className={[\"item\", tab === 2 ? \"active\" : \"\"].join(\" \")}\r\n                onClick={() => changeTab(2)}\r\n              >\r\n                2.Complete Form\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"up-content\">\r\n        <main>\r\n          {tab === 1 && (\r\n            <>\r\n              <div className=\"up-content-title\">Choose an item type</div>\r\n              <div className=\"up-content-itemTypes animated fadeIn \">\r\n                {contentTypes.map(c => (\r\n                  <div key={c.id} className=\"listGroupItem\">\r\n                    <div className=\"treeItem\">\r\n                      <button\r\n                        className=\"btn btn-primary btn-sm\"\r\n                        color=\"primary\"\r\n                        style={{ marginRight: 15 }}\r\n                      >\r\n                        <i className=\"icon-item-type\" />\r\n                      </button>\r\n                      <div className=\"treeItem-text\">\r\n                        <span className=\"treeItem-name\">\r\n                          {c.title[currentLang]}\r\n                        </span>\r\n                        <span className=\"treeItem-desc\">\r\n                          {c.description[currentLang] ||\r\n                            \"Lorem ipsum dolor sit amet, consectetur\"}\r\n                        </span>\r\n                      </div>\r\n                      <button\r\n                        className=\"btn btn-light treeItem-action\"\r\n                        size=\"xs\"\r\n                        onClick={() => handleSelectContentType(c)}\r\n                      >\r\n                        <span style={{ fontSize: 12 }}>\r\n                          {languageManager.translate(\"Choose\")}\r\n                        </span>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </>\r\n          )}\r\n          {tab === 2 && (\r\n            <>\r\n              <div className=\"up-content-title\">\r\n                {updateMode ? \"Edit \" : \"Add New \"}\r\n                {contentType && contentType.title[currentLang]}\r\n              </div>\r\n              <div className=\"up-categoryBox animated fadeIn\">\r\n                <span>\r\n                  {category ? category.name[currentLang] : \"Choose a category\"}\r\n                </span>\r\n                <button className=\"btn btn-link\" onClick={showCatgoryModal}>\r\n                  Change category\r\n                </button>\r\n              </div>\r\n              <div className=\"up-formInputs animated fadeIn\">\r\n                {fields &&\r\n                  fields.map(field => (\r\n                    <div key={field.id} className=\"rowItem\">\r\n                      {getFieldItem(field)}\r\n                    </div>\r\n                  ))}\r\n                <div className=\"actions\">\r\n                  {!updateMode && (\r\n                    <button\r\n                      className=\"btn btn-primary \"\r\n                      onClick={() => upsertItem(false)}\r\n                      disabled={\r\n                        Object.keys(formData).length > 0 &&\r\n                        formValidation === undefined &&\r\n                        category !== undefined\r\n                          ? false\r\n                          : true\r\n                      }\r\n                    >\r\n                      Save & New\r\n                    </button>\r\n                  )}\r\n                  <button\r\n                    className=\"btn btn-primary \"\r\n                    onClick={() => upsertItem(true)}\r\n                    disabled={\r\n                      Object.keys(formData).length > 0 &&\r\n                      formValidation === undefined &&\r\n                      category !== undefined\r\n                        ? false\r\n                        : true\r\n                    }\r\n                  >\r\n                    {updateMode ? \"Update & Close\" : \"Save & Close\"}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </>\r\n          )}\r\n          {tab === 3 && (\r\n            <>\r\n              <div className=\"up-content-title\">Error has occurred</div>\r\n              <div className=\"up-error-section\" />\r\n            </>\r\n          )}\r\n        </main>\r\n      </div>\r\n      {categoryModal && (\r\n        <CategoriesModal categories={categories} onCloseModal={onCloseModel} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpsertProduct;\r\n","import { languageManager } from \"./services\";\r\n\r\nimport Login from \"./Packages/Login\";\r\nimport Signup from \"./Packages/Signup\";\r\nimport Home from \"./Packages/Home\";\r\nimport Categories from \"./Packages/Categories\";\r\nimport ContentType from \"./Packages/ContentType\";\r\nimport ManageUsers from \"./Packages/ManageUsers\";\r\nimport Products from \"./Packages/Products\";\r\nimport Requests from \"./Packages/Requests\";\r\nimport Quotes from \"./Packages/Quotes\";\r\nimport UpsertProduct from \"./Packages/UpsertProduct\";\r\n\r\n\r\nfunction translate(key) {\r\n  return languageManager.translate(key);\r\n}\r\n\r\nconst routes = [\r\n  {\r\n    path: \"/login\",\r\n    component: Login\r\n  },\r\n  {\r\n    path: \"/signup\",\r\n    component: Signup\r\n  },\r\n  {\r\n    path: \"/home\",\r\n    component: Home,\r\n    routes:[\r\n      {\r\n        name: translate(\"HOME_SIDE_NAV_CONTENT_TYPE\"),\r\n        icon: \"item-type\",\r\n        path: \"/home/contentType\",\r\n        desc: translate(\"HOME_SIDE_NAV_CONTENT_TYPE_DEC\"),\r\n        component: ContentType\r\n      },\r\n      {\r\n        name: translate(\"HOME_SIDE_NAV_CATEGRIES\"),\r\n        icon: \"category\",\r\n        path: \"/home/categories\",\r\n        desc: translate(\"HOME_SIDE_NAV_CATEGORIES_DEC\"),\r\n        component: Categories\r\n      },\r\n      {\r\n        name: translate(\"HOME_SIDE_NAV_PRODUCTS\"),\r\n        icon: \"product\",\r\n        path: \"/home/products\",\r\n        desc: translate(\"HOME_SIDE_NAV_PRODUCTS_DESC\"),\r\n        component: Products\r\n      },\r\n\r\n      {\r\n        name: translate(\"HOME_SIDE_NAV_REQUESTS\"),\r\n        icon: \"request\",\r\n        path: \"/home/requests\",\r\n        desc: translate(\"HOME_SIDE_NAV_REQUESTS_DESC\"),\r\n        component: Requests\r\n      },\r\n      {\r\n        name: translate(\"HOME_SIDE_NAV_QUOTES\"),\r\n        icon: \"quote\",\r\n        path: \"/home/quotes\",\r\n        desc: translate(\"HOME_SIDE_NAV_QUOTES_DESC\"),\r\n        component: Quotes\r\n      },\r\n      {\r\n        name: translate(\"HOME_SIDE_NAV_MANAGET_USERS\"),\r\n        icon: \"users\",\r\n        path: \"/home/manageUsers\",\r\n        desc: translate(\"HOME_SIDE_NAV_MANAGE_USERS_DESC\"),\r\n        component: ManageUsers\r\n      }\r\n    ]\r\n \r\n  },\r\n  {\r\n    path: \"/addNew\",\r\n    component: UpsertProduct\r\n  },\r\n  {\r\n    path: \"/editItem/:id\",\r\n    component: UpsertProduct\r\n  }\r\n];\r\nexport default routes;\r\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport StateProvider from \"./services/stateManager/stateProvider\";\nimport \"./styles/app.scss\";\nimport \"animate.css\";\n\nimport Routes from \"./routes\";\n\nconst App = () => {\n  return (\n    <StateProvider>\n      <BrowserRouter>\n        <div>\n          <Switch>\n            {Routes.map(route => (\n              <Route\n                key={route.path}\n                path={route.path}\n                render={props => {\n                  const Component = route.component;\n                  let nestedRoutes;\n                  if (route.routes) {\n                    nestedRoutes = (\n                      <>\n                        {route.routes.map(nestedRoute => (\n                          <Route\n                            exact\n                            key={nestedRoute.path}\n                            path={nestedRoute.path}\n                            render={props => {\n                              const NestedComponent = nestedRoute.component;\n                              const p = {\n                                ...props,\n                                component: nestedRoute\n                              };\n                              return <NestedComponent {...p} />;\n                            }}\n                          />\n                        ))}\n                      </>\n                    );\n                  }\n                  return <Component {...props} routes={nestedRoutes} />;\n                }}\n              />\n            ))}\n            {/* <Route to=\"/not-found\" render={props=><NoutFound/>}/> */}\n            {/* اگه دقیقا / رو زد برو لاگین */}\n            <Redirect from=\"/\" to=\"/home\" exact />\n            {/* اگه هیچی نزد یا چرت و پرت زد برو اون روتی که نات فاند هست */}\n            {/* <Redirect to=\"/not-found\"/> */}\n          </Switch>\n        </div>\n      </BrowserRouter>\n    </StateProvider>\n  );\n};\n\nexport default App;\n\n// function makeData(len = 10) {\n//   return range(len).map(d => {\n//     return {\n//       ...newProduct(),\n//       children: range(10).map(newProduct)\n//     };\n//   });\n// }\n\n// function newProduct() {\n//   return {\n//     thumbnail:\n//       \"https://myresources1195.blob.core.windows.net/images/banana.jpg\",\n//     name: \"موز ممتاز\",\n//     description: \"محصولات وارداتی از افریقا\",\n//     price: \"2500 $\",\n//     brand: \"Banana\"\n//   };\n// }\n// function range(len) {\n//   const arr = [];\n//   for (let i = 0; i < len; i++) {\n//     arr.push(i);\n//   }\n//   return arr;\n// }\n//   function createTree(list) {\n//     var map = {},\n//       node,\n//       roots = [],\n//       i;\n//     for (i = 0; i < list.length; i += 1) {\n//       map[list[i].id] = i; // initialize the map\n//       list[i].children = []; // initis\n//     }\n//     for (i = 0; i < list.length; i += 1) {\n//       node = list[i];\n//       if (node.parentId) {\n//         // if you have dangling branches check that map[node.parentId] exists\n//         list[map[node.parentId]].children.push(node);\n//       } else {\n//         roots.push(node);\n//       }\n//     }\n//     return roots;\n//   }\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}