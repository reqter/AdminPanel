{"version":3,"sources":["services/stateManager/index.js","services/stateManager/stateProvider.jsx","services/languageManager/index.js","services/languageManager/locale/en.js","services/languageManager/locale/fa.js","services/utility/index.js","Packages/Login/index.jsx","Packages/Signup/index.jsx","Packages/Home/components/SideBar/components/profileWidget/index.jsx","Packages/Home/components/SideBar/components/SideLinks/linkItem.jsx","Packages/Home/components/SideBar/components/SideLinks/index.jsx","Packages/Home/components/SideBar/index.jsx","Packages/Home/index.jsx","Packages/Categories/tree.jsx","Api/contentType-api/index.js","Api/category-api/index.js","Packages/Categories/modals/AddItemType/index.jsx","Packages/Categories/index.jsx","Packages/ContentType/list/index.jsx","components/CheckBox/index.jsx","components/Divider/index.js","components/Boolean/index.jsx","components/DateTime/index.jsx","components/KeyValue/index.jsx","components/Location/index.jsx","components/Media/index.jsx","components/Number/index.jsx","components/RichText/index.jsx","components/String/index.jsx","components/FileUploader/index.jsx","Packages/ContentType/modals/AddNewField/index.jsx","Packages/ContentType/modals/AddNewItemType/index.jsx","Packages/ContentType/index.jsx","Packages/ManageUsers/index.jsx","Api/content-api/index.js","Packages/Products/FilterBox/contentTypes/index.jsx","Packages/Products/FilterBox/categories/index.jsx","Packages/Products/FilterBox/status/index.jsx","Packages/Products/index.jsx","Packages/UpsertProduct/Categories/tree.jsx","Packages/UpsertProduct/Categories/index.jsx","Packages/UpsertProduct/index.jsx","Api/asset-api/index.js","Packages/Assets/index.jsx","Packages/upsertFile/index.jsx","routes.js","App.js","serviceWorker.js","index.js"],"names":["StateContext","createContext","StateProvider","_ref","reducer","initialState","children","react_default","a","createElement","Provider","value","useReducer","useGlobalState","useContext","props","stateManager_StateProvider","projectInfo","name","contentTypes","categories","contents","assets","status","id","title","icon","state","action","type","Object","objectSpread","systemDefaultLang","direction","description","languages","fa","en","translate","LOGIN_TITLE","LOGIN_EMAIL_INPUT_TITLE","LOGIN_EMAIL_INPUT_PLACEHOLDER","LOGIN_EMAIL_INPUT_DESCRIPTION","LOGIN_PASSWORD_INPUT","LOGIN_PASSWORD_INPUT_PLACEHOLDER","LOGIN_PASSWORD_INPUT_DESCRIPTION","LOGIN_SUBMIT_BTN","LOGIN_SOCIAL_TEXT","LOGIN_SIGNUP_LINK_TITLE","LOGIN_SIGNUP_LINK","LOGIN_SOCIAL_BTN_GOOGLE","LOGIN_SOCIAL_BTN_GITHUB","SIGNUP_TITLE","SIGNUP_LOGIN_LINK_TITLE","SIGNUP_LOGIN_LINK","SIGNUP_CONFIRM_PASSWORD_INPUT","SIGNUP_CONFIRM_PASSWORD_INPUT_PLACEHOLDER","SIGNUP_CONFIRM_PASSWORD_INPUT_DESCRIPTION","BRAND_NAME","HOME_NAVS_TITLE","HOME_SIDE_NAV_MANAGET_USERS","HOME_SIDE_NAV_MANAGE_USERS_DESC","HOME_SIDE_NAV_CATEGRIES","HOME_SIDE_NAV_CATEGORIES_DEC","HOME_SIDE_NAV_CONTENT_TYPE","HOME_SIDE_NAV_CONTENT_TYPE_DEC","HOME_SIDE_NAV_PRODUCTS","HOME_SIDE_NAV_PRODUCTS_DESC","HOME_SIDE_NAV_REQUESTS","HOME_SIDE_NAV_REQUESTS_DESC","HOME_SIDE_NAV_QUOTES","HOME_SIDE_NAV_QUOTES_DESC","HOME_SIDE_NAV_ASSETS_MANAGER","HOME_SIDE_NAV_ASSETS_MANAGER_DESC","HOME_SIDE_NAV_ASSETS_MANAGER_UPLOAD","HOME_SIDE_NAV_ASSETS_MANAGER_DESC_UPLOAD","HOME_SIDEAR_ABOUT","HOME_SIDEBAR_BLOG","HOME_SIDEBAR_DOCUMENT","HOME_COPY_RIGHT","HOME_SIDEBAR_PROFILE_SETTINGS","HOME_SIDEBAR_PROFILE_LOGOUT","CATEGORIES_MODAL_HEADER_TITLE_NEW","CATEGORIES_MODAL_HEADER_TITLE_EDIT","CATEGORIES_NEW_CATEGORY_BTN","CATEGORIES_MODAL_NAME","CATEGORIES_MODAL_NAME_PLACEHOLDER","CATEGORIES_MODAL_NAME_DESCRIPTION","CATEGORIES_MODAL_DESCRIPTION","CATEGORIES_MODAL_DESCRIPTION_PLACEHOLDER","CATEGORIES_MODAL_FOOTER_UPSERT_BTN_NEW","CATEGORIES_MODAL_FOOTER_UPSERT_BTN_EDIT","CANCEL","CATEGROES_CONTENT_TYPES","CATEGORIES_ITEM_TYPES_HEADER_TITLE","CATEGORIES_ITEM_TYPES_HEADER_DESC","CATEGORY_ITEM_TYPE_MODAL_HEADER_TITLE","CONTENT_TYPE_MODAL_HEADER_TITLE_NEW","CONTENT_TYPE_MODAL_FOOTER_UPSERT_BTN_NEW","CONTENT_TYPE_MODAL_HEADER_TITLE_EDIT","CONTENT_TYPE_MODAL_FOOTER_UPSERT_BTN_EDIT","CONTENT_TYPE_MODEL_HEADER_TITLE","CONTENT_TYPE_MODEL_HEADER_DESC","CONTENT_TYPE_MODAL_NAME","CONTENT_TYPE_MODAL_NAME_PLACEHOLDER","CONTENT_TYPE_MODAL_NAME_DESCRIPTION","CONTENT_TYPE_MODAL_DESCRIPTION","CONTENT_TYPE_MODAL_DESCRIPTION_PLACEHOLDER","CONTENT_TYPE_NEW_ITEM_BTN","CONTENT_TYPE_ADD_FIELD_TITLE","CONTENT_TYPE_ADD_FIELD_MODAL_NAME","CONTENT_TYPE_ADD_FIELD_MODAL_NAME_PLACEHOLDER","CONTENT_TYPE_ADD_FIELD_MODAL_NAME_INFO","CONTENT_TYPE_ADD_FIELD_MODAL_TITLE","CONTENT_TYPE_ADD_FIELD_MODAL_TITLE_PLACEHOLDER","CONTENT_TYPE_ADD_FIELD_MODAL_TITLE_INFO","CONTENT_TYPE_ADD_FIELD_MODAL_DESCRIPTION","CONTENT_TYPE_ADD_FIELD_MODAL_DESCRIPTION_PLACEHOLDER","CONTENT_TYPE_ADD_FIELD_MODAL_DESCRIPTION_INFO","CONTENT_TYPE_ADD_FIELD_MODAL_CREATE_BTN","CONTENT_TYPE_ADD_FIELD_MODAL_CREATE_CONFIG_BTN","CONTENT_TYPE_ADD_FIELD_MODAL_CHNAGE_FIELD_BTN","CONTENT_TYPE_ADD_FIELD_CHOOSEN","FIELD_TYPE_RICH_TEXT","FIELD_TYPE_RICH_TEXT_INFO","FIELD_TYPE_TEXT","FIELD_TYPE_TEXT_INFO","FIELD_TYPE_NUMBER","FIELD_TYPE_NUMBER_INFO","FIELD_TYPE_DATE_TIME","FIELD_TYPE_DATE_TIME_INFO","FIELD_TYPE_LOCATION","FIELD_TYPE_LOCATION_INFO","FIELD_TYPE_MEDIA","FIELD_TYPE_MEDIA_INFO","FIELD_TYPE_KEY_VALUE","FIELD_TYPE_KEY_VALUE_INFO","FIELD_TYPE_BOOLEAN","FIELD_TYPE_BOOLEAN_INFO","FIELD_TYPE_OBJECT","FIELD_TYPE_OBJECT_INFO","FIELD_TYPE_REFERENCE","FIELD_TYPE_REFERENCE_INFO","ITEM_TYPES_FIELDS","ITEMS_CATEGORIES_CONTENT","CATEGROES_FIELDS","CATEGORIES_MODEL_HEADER_TITLE","CATEGORIES_MODEL_HEADER_DESC","CATEGORY_ADD_FIELD_TITLE","CATEGORY_ADD_FIELD_CHOOSEN","CATEGORIES_ADD_FIELD_MODAL_NAME","CATEGORIES_ADD_FIELD_MODAL_NAME_PLACEHOLDER","CATEGORIES_ADD_FIELD_MODAL_NAME_INFO","CATEGORIES_ADD_FIELD_MODAL_TITLE","CATEGORIES_ADD_FIELD_MODAL_TITLE_PLACEHOLDER","CATEGORIES_ADD_FIELD_MODAL_TITLE_INFO","CATEGORIES_ADD_FIELD_MODAL_DESCRIPTION","CATEGORIES_ADD_FIELD_MODAL_DESCRIPTION_PLACEHOLDER","CATEGORIES_ADD_FIELD_MODAL_DESCRIPTION_INFO","CATEGORIES_ADD_FIELD_MODAL_CREATE_BTN","CATEGORIES_ADD_FIELD_MODAL_CREATE_CONFIG_BTN","CATEGORIES_ADD_FIELD_MODAL_CHNAGE_FIELD_BTN","currentLanguage","allowEmptyValues","languageManager","key","undefined","setLanguage","langName","hasOwnProperty","keys","getCurrentLanguage","getCurrentLayout","setAppLanguages","enabledLanguages","getAllLanguages","isRTL","utility","applyeLangs","langs","data","memo","_len","arguments","length","Array","_key","className","aria-describedby","placeholder","onClick","history","replace","Link","to","ProfileWidget","_useState","useState","_useState2","slicedToArray","dropDownVisibility","toggleVisibility","Dropdown","isOpen","toggle","prevState","DropdownToggle","DropdownMenu","DropdownItem","LinkItem","link","concat","NavLink","path","activeClassName","desc","NavLinks","links","Fragment","map","linkItem","SideBar","_useGlobalState","_useGlobalState2","profileWidget","SideLinks","href","Home","components_SideBar","routes","Tree","selected","currentLang","event","target","getAttribute","_this","setState","defineProperty","mapper","nodes","parentId","lvl","node","index","sys","ListGroupItem","style","zIndex","padding","background","paddingLeft","color","size","handleDeleteCategory","handleEditCategory","handleItemTypes","fontSize","itemTypes","handleNewCategory","fontWeight","Collapse","ListGroup","this","current_state","rightContent","Component","require","getContentTypes","_onOkCallBack","call","contentType","category","result","_onOk","onOk","callback","onServerError","onBadRequest","notFound","unAuthorized","onConnectionError","addContentType","obj","push","updateContentType","item","deleteContentType","filter","addFieldToContentType","contentTypeId","field","newItem","fields","removeContentTypeField","fieldId","f_s","f","getCategories","addCategory","addNodeInList","list","i","updateCategory","updateNodeInList","deleteCategory","deleteNodeInList","splice","addContentTypeToCategory","categoryId","removeContentTypeFromCategory","AddNewField","selectedCategory","items","allData","setData","_useState3","_useState4","toggleModal","closeModal","params","onCloseModal","useEffect","d","slice","j","Modal","ModalHeader","ModalBody","for","onChange","e","checked","onAddContentType","onRemoveContentType","handleChooseItem","useInput","defaultValue","input","setInput","Categories","_props$component","component","pageTitle","pageDescription","dispatch","newCategoryNameInput","useRef","upsertCategoryModal","setModal","_useState5","_useState6","upsertItemTypeModal","toggleUpsertItemTypeModal","_useInput","_useInput2","handleNameChanged","_useInput3","_useInput4","handleDesciptionChanged","_useState7","_useState8","setSelectedCategory","_useState9","_useState10","setItemTypes","_useState11","_useState12","updateMode","setUpdateMode","_useState13","_useState14","modalHeaderTitle","setModalHeader","_useState15","_useState16","modalUpsertBtn","setModalUpsertBtnText","_useState17","_useState18","toggleRightContent","_useState19","_useState20","isManageCategory","setManageCategory","initModalForm","prevModal","closeAddCategoryModal","handleRemoveContenType","itemType","m","tree","setTimeout","current","focus","removeCategoryItem","showItemTypes","removeContentType","Form","ref","required","FormGroup","Label","Input","ModalFooter","Button","newCategory","Math","random","issuer","fullName","image","issueDate","upsertCategory","disabled","AddItemType","toConsumableArray","List","setSelected","listItem","backgroundColor","marginRight","template","handleDeleteType","handleEditType","handleShowFields","CheckBox","objectWithoutProperties","assign","BooleanComponent","appearance","DateTimeInput","KeyValueInput","options","option","class","LocationInput","MediaInput","formData","isList","isTranslate","fs","url","files","setFiles","init","isRequired","reset","file","img","onChangeValue","removeFile","mediaType","src","alt","URL","createObjectURL","fileType","l","NumberInput","RichTextInput","StringInput","handleOnChange","isValid","isMultiLine","FileUploaderInput","toLowerCase","includes","objectDestructuringEmpty","selectedContentType","nameInput","tab","changeTab","newFieldHeaderTitle","setAddFieldHeaderTitle","selectedField","setField","setName","setTitle","setDescription","translation","toggleTranslation","closeAddFieldModal","handleChooseField","components_CheckBox","toString","templates","isBase","allowCustomFields","UpsertTemplate","submitBtnText","selectedTemplate","setTemplate","tmp","handleChooseTemplate","ItemTypes","upsertFieldModal","toggleUpsertFieldModal","toggleUpserItemTypeModal","setItemType","setFields","removeItemType","handleRemoveField","AddNewItemType","modals_AddNewField","ManageUsers","filterContents","f_data","getContents","addContent","updateContent","deleteContent","getContentById","find","ContentTypeFilter","filters","onContentTypeSelect","idState","setId","n_s","onCategorySelect","display","StatusFilter","Products","baseFieldColumnsConfig","Header","width","headerStyle","Cell","accessor","handleEditRow","row","original","_useGlobalState2$","tableBox","leftContent","toggleLeftContent","searchText","setSearchText","selectedNode","setSelectedNode","setSelectedContentType","columns","dataFilters","setFilters","pathname","removeFilter","FilterBox_contentTypes","handleContentTypeSelect","FilterBox_categories","handleClickCategory","FilterBox_status","onStatusSelect","es","defaultPageSize","minRows","showPaginationTop","showPaginationBottom","border","overflow","height","hasContentType","onRowSelect","Categories_tree","handleRowSelect","UpsertProduct","match","toggleUpdateMode","toggleTab","categoryModal","toggleCategoryModal","setCategory","setContentType","setFormData","formValidation","setFormValidation","setNameToFormValidation","prevFormValidation","handleOnChangeValue","backToProducts","sort","b","upsertItem","closePage","c","join","components_String","components_Number","DateTime","Location","Media","components_Boolean","KeyValue","RichText","getFieldItem","UpsertProduct_Categories","filterAssets","getAssets","addAsset","updateAsset","deleteAsset","getAssetById","Assets","selectedFileType","setFileType","selectedStatus","setStatus","openUploaderForEdit","UpsertFile","resetForm","setResetForm","backToAssets","shorDesc","shortDesc","FileUploader","Login","Signup","ContentType","UploadFile","App","stateProvider","BrowserRouter","Switch","Routes","route","Route","render","nestedRoutes","nestedRoute","exact","NestedComponent","p","Redirect","from","Boolean","window","location","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7e734f09.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer } from \"react\";\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children}\r\n  </StateContext.Provider>\r\n);\r\n\r\nconst useGlobalState = () => useContext(StateContext);\r\nexport default useGlobalState;\r\n","import React from \"react\";\r\nimport { StateProvider } from \"./index\";\r\nconst Provider = props => {\r\n  const initialState = {\r\n    projectInfo: { name: \"REQTER\" },\r\n    contentTypes: [],\r\n    categories: [],\r\n    contents: [],\r\n    assets: [],\r\n    status: [\r\n      {\r\n        id: \"0\",\r\n        name: \"draft\",\r\n        title: \"Draft\",\r\n        icon: \"icon-draft\"\r\n      },\r\n      {\r\n        id: \"1\",\r\n        name: \"archvied\",\r\n        title: \"Archived\",\r\n        icon: \"icon-archive\"\r\n      },\r\n      {\r\n        id: \"2\",\r\n        name: \"changed\",\r\n        title: \"Changed\",\r\n        icon: \"icon-refresh\"\r\n      },\r\n      {\r\n        id: \"3\",\r\n        name: \"published\",\r\n        title: \"Published\",\r\n        icon: \"icon-publish\"\r\n      }\r\n    ]\r\n  };\r\n\r\n  const reducer = (state, action) => {\r\n    switch (action.type) {\r\n      case \"SET_CONTENT_TYPES\":\r\n        const s = {\r\n          ...state,\r\n          contentTypes: action.value\r\n        };\r\n        return s;\r\n      case \"SET_CATEGORIES\":\r\n        return {\r\n          ...state,\r\n          categories: action.value\r\n        };\r\n      case \"SET_CONTENTS\":\r\n        return {\r\n          ...state,\r\n          contents: action.value\r\n        };\r\n      case \"SET_ASSETS\":\r\n        return {\r\n          ...state,\r\n          assets: action.value\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  return (\r\n    <StateProvider initialState={initialState} reducer={reducer}>\r\n      {props.children}\r\n    </StateProvider>\r\n  );\r\n};\r\nexport default Provider;\r\n","import en from \"./locale/en\";\r\nimport fa from \"./locale/fa\";\r\nlet systemDefaultLang = {\r\n  title: \"فارسی\",\r\n  direction: \"rtl\",\r\n  name: \"fa\",\r\n  description: \"جمهوری اسلامی ایران\"\r\n};\r\n\r\nlet languages = {\r\n  fa: {\r\n    title: \"فارسی\",\r\n    direction: \"rtl\",\r\n    name: \"fa\",\r\n    description: \"جمهوری اسلامی ایران\"\r\n  },\r\n  en: {\r\n    title: \"English\",\r\n    name: \"en\",\r\n    direction: \"ltr\",\r\n    description: \"United Kingdom\"\r\n  }\r\n};\r\nlet translate = {\r\n  en,\r\n  fa\r\n};\r\n\r\n// let currentLanguage = {\r\n//   title: \"فارسی\",\r\n//   direction: \"rtl\",\r\n//   name: \"fa\",\r\n//   description: \"جمهوری اسلامی ایران\"\r\n// };\r\n\r\nlet currentLanguage = {\r\n  title: \"English\",\r\n  name: \"en\",\r\n  direction: \"ltr\",\r\n  description: \"United Kingdom\",\r\n  allowEmptyValues: false\r\n};\r\n\r\nconst languageManager = {\r\n  translate(key) {\r\n    if (translate !== undefined && translate[currentLanguage.name])\r\n      return translate[currentLanguage.name][key]\r\n        ? translate[currentLanguage.name][key]\r\n        : key;\r\n    else return key;\r\n  },\r\n  setLanguage(langName) {\r\n    if (langName !== undefined) {\r\n      if (!languages.hasOwnProperty(langName)) {\r\n        currentLanguage = languages[Object.keys(languages)[0]];\r\n      } else {\r\n        currentLanguage = languages[langName];\r\n      }\r\n      if (\r\n        !(currentLanguage && currentLanguage.name && currentLanguage.direction)\r\n      ) {\r\n        currentLanguage = systemDefaultLang;\r\n      }\r\n      //EventRegister.emit(\"onLanguageChanged\", currentLanguage);\r\n    }\r\n  },\r\n  getCurrentLanguage() {\r\n    return currentLanguage;\r\n  },\r\n  getCurrentLayout() {\r\n    return currentLanguage.direction;\r\n  },\r\n  setAppLanguages(enabledLanguages) {\r\n    if (enabledLanguages) {\r\n      languages = enabledLanguages;\r\n    }\r\n  },\r\n  getAllLanguages() {\r\n    return languages;\r\n  },\r\n  get isRTL() {\r\n    return currentLanguage.direction === \"rtl\" ? true : false;\r\n  }\r\n};\r\nexport default languageManager;\r\n","export default {\r\n  LOGIN_TITLE: \"SignIn Reqter\",\r\n  LOGIN_EMAIL_INPUT_TITLE: \"Email Address\",\r\n  LOGIN_EMAIL_INPUT_PLACEHOLDER: \"Enter email\",\r\n  LOGIN_EMAIL_INPUT_DESCRIPTION: \"you can also enter your username\",\r\n  LOGIN_PASSWORD_INPUT: \"Password\",\r\n  LOGIN_PASSWORD_INPUT_PLACEHOLDER: \"Enter pssword\",\r\n  LOGIN_PASSWORD_INPUT_DESCRIPTION: \"Password must be at least 6 character\",\r\n  LOGIN_SUBMIT_BTN: \"Submit\",\r\n  LOGIN_SOCIAL_TEXT: \"OR SIGNIN WITH\",\r\n  LOGIN_SIGNUP_LINK_TITLE: \"New to REQTER ?\",\r\n  LOGIN_SIGNUP_LINK: \"Create an accout\",\r\n  LOGIN_SOCIAL_BTN_GOOGLE: \"Google\",\r\n  LOGIN_SOCIAL_BTN_GITHUB: \"Github\",\r\n\r\n  // SIGNUP\r\n  SIGNUP_TITLE: \"Signup Reqter\",\r\n  SIGNUP_LOGIN_LINK_TITLE: \"Have an account?\",\r\n  SIGNUP_LOGIN_LINK: \"Login\",\r\n  SIGNUP_CONFIRM_PASSWORD_INPUT: \"Confirm Password\",\r\n  SIGNUP_CONFIRM_PASSWORD_INPUT_PLACEHOLDER: \"Confirm your password\",\r\n  SIGNUP_CONFIRM_PASSWORD_INPUT_DESCRIPTION:\r\n    \"Password must be at least 6 character\",\r\n  // home\r\n  BRAND_NAME: \"REQTER\",\r\n  HOME_NAVS_TITLE: \"Features\",\r\n  HOME_SIDE_NAV_MANAGET_USERS: \"Users\",\r\n  HOME_SIDE_NAV_MANAGE_USERS_DESC: \"Manage users of your apps\",\r\n  HOME_SIDE_NAV_CATEGRIES: \"Categories\",\r\n  HOME_SIDE_NAV_CATEGORIES_DEC: \"Define your business categories\",\r\n  HOME_SIDE_NAV_CONTENT_TYPE: \"Item Types\",\r\n  HOME_SIDE_NAV_CONTENT_TYPE_DEC: \"Manage your item types\",\r\n  HOME_SIDE_NAV_PRODUCTS: \"Items\",\r\n  HOME_SIDE_NAV_PRODUCTS_DESC: \"Define and manage your items\",\r\n  HOME_SIDE_NAV_REQUESTS: \"Requests\",\r\n  HOME_SIDE_NAV_REQUESTS_DESC: \"View and approve incoming requests\",\r\n  HOME_SIDE_NAV_QUOTES: \"Quotes\",\r\n  HOME_SIDE_NAV_QUOTES_DESC: \"View and approve offers from vendors\",\r\n  HOME_SIDE_NAV_ASSETS_MANAGER: \"Media\",\r\n  HOME_SIDE_NAV_ASSETS_MANAGER_DESC: \"Manage your files, images, videos etc\",\r\n  HOME_SIDE_NAV_ASSETS_MANAGER_UPLOAD: \"Upload file\",\r\n  HOME_SIDE_NAV_ASSETS_MANAGER_DESC_UPLOAD:\r\n    \"Upload file, for example image, video, pdf , etc\",\r\n  HOME_SIDEAR_ABOUT: \"About\",\r\n  HOME_SIDEBAR_BLOG: \"Blog\",\r\n  HOME_SIDEBAR_DOCUMENT: \"Document\",\r\n  HOME_COPY_RIGHT: \"@2019 Copyright\",\r\n  HOME_SIDEBAR_PROFILE_SETTINGS: \"Settings\",\r\n  HOME_SIDEBAR_PROFILE_LOGOUT: \"Logout\",\r\n  //category\r\n  CATEGORIES_MODAL_HEADER_TITLE_NEW: \"New Category\",\r\n  CATEGORIES_MODAL_HEADER_TITLE_EDIT: \"Edit Category\",\r\n  CATEGORIES_NEW_CATEGORY_BTN: \"New Category\",\r\n  CATEGORIES_MODAL_NAME: \"Name\",\r\n  CATEGORIES_MODAL_NAME_PLACEHOLDER: \"Enter name of your category\",\r\n  CATEGORIES_MODAL_NAME_DESCRIPTION: \"try to enter meaningfull name\",\r\n  CATEGORIES_MODAL_DESCRIPTION: \"Description\",\r\n  CATEGORIES_MODAL_DESCRIPTION_PLACEHOLDER: \"Enter a short description\",\r\n  CATEGORIES_MODAL_FOOTER_UPSERT_BTN_NEW: \"Create\",\r\n  CATEGORIES_MODAL_FOOTER_UPSERT_BTN_EDIT: \"Edit\",\r\n  CANCEL: \"Cancel\",\r\n  CATEGROES_CONTENT_TYPES: \"Item Types\",\r\n  CATEGORIES_ITEM_TYPES_HEADER_TITLE: \"Manage Item Types\",\r\n  CATEGORIES_ITEM_TYPES_HEADER_DESC: \"Lorem ipsum dolor sit amet, consectetur\",\r\n  CATEGORY_ITEM_TYPE_MODAL_HEADER_TITLE: \"Add item types to category\",\r\n\r\n  // CONTENT TYPE\r\n  CONTENT_TYPE_MODAL_HEADER_TITLE_NEW: \"Add New Item Type\",\r\n  CONTENT_TYPE_MODAL_FOOTER_UPSERT_BTN_NEW: \"Create\",\r\n  CONTENT_TYPE_MODAL_HEADER_TITLE_EDIT: \"Edit Item Type\",\r\n  CONTENT_TYPE_MODAL_FOOTER_UPSERT_BTN_EDIT: \"Edit\",\r\n  CONTENT_TYPE_MODEL_HEADER_TITLE: \"Manage Fields\",\r\n  CONTENT_TYPE_MODEL_HEADER_DESC: \"Lorem ipsum dolor sit amet, consectetur\",\r\n  CONTENT_TYPE_MODAL_NAME: \"Name\",\r\n  CONTENT_TYPE_MODAL_NAME_PLACEHOLDER: \"Enter name of your type\",\r\n  CONTENT_TYPE_MODAL_NAME_DESCRIPTION: \"try to enter meaningfull name\",\r\n  CONTENT_TYPE_MODAL_DESCRIPTION: \"Description\",\r\n  CONTENT_TYPE_MODAL_DESCRIPTION_PLACEHOLDER: \"Enter a short description\",\r\n  CONTENT_TYPE_NEW_ITEM_BTN: \"New Item Type\",\r\n  CONTENT_TYPE_ADD_FIELD_TITLE: \"Add New Field\",\r\n  CONTENT_TYPE_ADD_FIELD_MODAL_NAME: \"Name\",\r\n  CONTENT_TYPE_ADD_FIELD_MODAL_NAME_PLACEHOLDER: \"Enter name of your field\",\r\n  CONTENT_TYPE_ADD_FIELD_MODAL_NAME_INFO: \"name can not be included space\",\r\n  CONTENT_TYPE_ADD_FIELD_MODAL_TITLE: \"Title\",\r\n  CONTENT_TYPE_ADD_FIELD_MODAL_TITLE_PLACEHOLDER: \"Enter field title\",\r\n  CONTENT_TYPE_ADD_FIELD_MODAL_TITLE_INFO: \"Title will display all of places\",\r\n  CONTENT_TYPE_ADD_FIELD_MODAL_DESCRIPTION: \"Description\",\r\n  CONTENT_TYPE_ADD_FIELD_MODAL_DESCRIPTION_PLACEHOLDER:\r\n    \"Enter a short description\",\r\n  CONTENT_TYPE_ADD_FIELD_MODAL_DESCRIPTION_INFO: \"opetional\",\r\n  CONTENT_TYPE_ADD_FIELD_MODAL_CREATE_BTN: \"Create\",\r\n  CONTENT_TYPE_ADD_FIELD_MODAL_CREATE_CONFIG_BTN: \"Create and configure\",\r\n  CONTENT_TYPE_ADD_FIELD_MODAL_CHNAGE_FIELD_BTN: \"Change Field Type\",\r\n  CONTENT_TYPE_ADD_FIELD_CHOOSEN: \"New\",\r\n  FIELD_TYPE_RICH_TEXT: \"Rich Text\",\r\n  FIELD_TYPE_RICH_TEXT_INFO: \"Descriptive content ,for example blog post\",\r\n  FIELD_TYPE_TEXT: \"Text\",\r\n  FIELD_TYPE_TEXT_INFO: \"Titles, names, paragraphs, list of names\",\r\n  FIELD_TYPE_NUMBER: \"Number\",\r\n  FIELD_TYPE_NUMBER_INFO: \"ID, order number, rating, quantity\",\r\n  FIELD_TYPE_DATE_TIME: \"Date and time\",\r\n  FIELD_TYPE_DATE_TIME_INFO: \"Event date, opening hours\",\r\n  FIELD_TYPE_LOCATION: \"Location\",\r\n  FIELD_TYPE_LOCATION_INFO: \"Coordinates: latitude and longitude\",\r\n  FIELD_TYPE_MEDIA: \"Media\",\r\n  FIELD_TYPE_MEDIA_INFO: \"Images, videos, PDFs and other files\",\r\n  FIELD_TYPE_KEY_VALUE: \"Options\",\r\n  FIELD_TYPE_KEY_VALUE_INFO: \"For example, Brand of a car\",\r\n  FIELD_TYPE_BOOLEAN: \"Boolean\",\r\n  FIELD_TYPE_BOOLEAN_INFO: \"Yes or no, 1 or 0, true or false\",\r\n  FIELD_TYPE_OBJECT: \"Json Object\",\r\n  FIELD_TYPE_OBJECT_INFO: \"Data in JSON format\",\r\n  FIELD_TYPE_REFERENCE: \"Reference\",\r\n  FIELD_TYPE_REFERENCE_INFO:\r\n    \"For example, a blog post can reference its author(s)\",\r\n\r\n  // ITEM TYPES\r\n  ITEM_TYPES_FIELDS: \"Fields\",\r\n  // items\r\n  ITEMS_CATEGORIES_CONTENT: \"Content\"\r\n};\r\n","export default {\r\n  LOGIN_TITLE: \"ورود به ریکوئتر\",\r\n  LOGIN_EMAIL_INPUT_TITLE: \"ایمیل\",\r\n  LOGIN_EMAIL_INPUT_PLACEHOLDER: \"ایمیل خود را وارد کنید\",\r\n  LOGIN_EMAIL_INPUT_DESCRIPTION: \"با نام کاربری خود هم میتوانید وارد شوید\",\r\n  LOGIN_PASSWORD_INPUT: \"رمز عبور\",\r\n  LOGIN_PASSWORD_INPUT_PLACEHOLDER: \"رمز عبور خود را وارد کنید\",\r\n  LOGIN_PASSWORD_INPUT_DESCRIPTION: \"رمز عبور حداقل 6 کاراکتر میباشد\",\r\n  LOGIN_SUBMIT_BTN: \"ورود\",\r\n  LOGIN_SOCIAL_TEXT: \"ورود با حساب کاربری\",\r\n  LOGIN_SIGNUP_LINK_TITLE: \"حساب کاربری نداری؟\",\r\n  LOGIN_SIGNUP_LINK: \"وارد شو\",\r\n  LOGIN_SOCIAL_BTN_GOOGLE: \"گوگل\",\r\n  LOGIN_SOCIAL_BTN_GITHUB: \"گیت هاب\",\r\n  // SIGNUP\r\n  SIGNUP_TITLE: \"ثبت نام در ریکونتر\",\r\n  SIGNUP_LOGIN_LINK_TITLE: \"ثبت نام کرده اید ؟\",\r\n  SIGNUP_LOGIN_LINK: \"ورود\",\r\n  SIGNUP_CONFIRM_PASSWORD_INPUT: \"تایید رمز عبور\",\r\n  SIGNUP_CONFIRM_PASSWORD_INPUT_PLACEHOLDER: \"تایید رمز عبور\",\r\n  SIGNUP_CONFIRM_PASSWORD_INPUT_DESCRIPTION: \"رمز عبور حداقل 6 کاراکتر میباشد\",\r\n  // home\r\n  BRAND_NAME: \"REQTER\",\r\n  HOME_NAVS_TITLE: \"ابزارها و امکانات\",\r\n  HOME_SIDE_NAV_MANAGET_USERS: \"مدیریت کاربران\",\r\n  HOME_SIDE_NAV_MANAGE_USERS_DESC: \"کاربران اپلیکیشن های خود را مدیریت کنید\",\r\n  HOME_SIDE_NAV_CATEGRIES: \"دسته بندی ها\",\r\n  HOME_SIDE_NAV_CATEGORIES_DEC: \"دسته بندی های خود را مدیریت کنید\",\r\n  HOME_SIDE_NAV_CONTENT_TYPE: \"انواع آیتم ها\",\r\n  HOME_SIDE_NAV_CONTENT_TYPE_DEC: \"آیتم های خود را تعریف و مدیریت کنید\",\r\n  HOME_SIDE_NAV_PRODUCTS: \"آیتم ها\",\r\n  HOME_SIDE_NAV_PRODUCTS_DESC: \"آیتم های خود را مدیریت کنید\",\r\n  HOME_SIDE_NAV_REQUESTS: \"درخواست ها\",\r\n  HOME_SIDE_NAV_REQUESTS_DESC: \"مشاهده و مدیریت درخواست های رسیده\",\r\n  HOME_SIDE_NAV_QUOTES: \"پیشنهادات\",\r\n  HOME_SIDE_NAV_QUOTES_DESC: \"مشاهده و مدیریت پیشنهادات ارائه شده\",\r\n  HOME_SIDEAR_ABOUT: \"دربار ما\",\r\n  HOME_SIDEBAR_BLOG: \"رویدادها\",\r\n  HOME_SIDEBAR_DOCUMENT: \"مستندات\",\r\n  HOME_COPY_RIGHT: \"@2019 حق نمونه برداری\",\r\n  HOME_SIDEBAR_PROFILE_SETTINGS: \"تنظیمات\",\r\n  HOME_SIDEBAR_PROFILE_LOGOUT: \"خروج\",\r\n  //category\r\n  CATEGORIES_MODAL_HEADER_TITLE_NEW: \"دسته بندی جدید\",\r\n  CATEGORIES_MODAL_HEADER_TITLE_EDIT: \"ویرایش دسته بندی\",\r\n  CATEGORIES_NEW_CATEGORY_BTN: \"دسته بندی جدید\",\r\n  CATEGORIES_MODAL_NAME: \"نام\",\r\n  CATEGORIES_MODAL_NAME_PLACEHOLDER: \"نام دسته بندی خود را وارد کنید\",\r\n  CATEGORIES_MODAL_NAME_DESCRIPTION: \"نام با محتوا انتخاب کنید\",\r\n  CATEGORIES_MODAL_DESCRIPTION: \"توضیحات\",\r\n  CATEGORIES_MODAL_DESCRIPTION_PLACEHOLDER: \"توضیح کوتاه برای دسته بندی\",\r\n  CATEGORIES_MODAL_FOOTER_UPSERT_BTN_NEW: \"ایجاد\",\r\n  CATEGORIES_MODAL_FOOTER_UPSERT_BTN_EDIT: \"ویرایش\",\r\n  CANCEL: \"انصراف\",\r\n  CATEGROES_FIELDS:\"دیتا مدل\",\r\n\r\n  CATEGORIES_MODEL_HEADER_TITLE: \"مدیریت مدل\",\r\n  CATEGORIES_MODEL_HEADER_DESC: \"مدیریت مدل برای دیتا مدل\",\r\n  CATEGORY_ADD_FIELD_TITLE: \"ایجاد مدل جدید\",\r\n  CATEGORY_ADD_FIELD_CHOOSEN: \"ایجاد مدل\",\r\n  CATEGORIES_ADD_FIELD_MODAL_NAME: \"نام\",\r\n  CATEGORIES_ADD_FIELD_MODAL_NAME_PLACEHOLDER: \"نام مدل خود را وارد کنید\",\r\n  CATEGORIES_ADD_FIELD_MODAL_NAME_INFO: \"نام نمیتواند حاوی فاصله باشد\",\r\n  CATEGORIES_ADD_FIELD_MODAL_TITLE: \"عنوان\",\r\n  CATEGORIES_ADD_FIELD_MODAL_TITLE_PLACEHOLDER: \"عنوان مدل را وارد کنید\",\r\n  CATEGORIES_ADD_FIELD_MODAL_TITLE_INFO: \"عنوان را همه جا میبینید\",\r\n  CATEGORIES_ADD_FIELD_MODAL_DESCRIPTION: \"توضیحات\",\r\n  CATEGORIES_ADD_FIELD_MODAL_DESCRIPTION_PLACEHOLDER:\r\n    \"توضیح کوتاه\",\r\n  CATEGORIES_ADD_FIELD_MODAL_DESCRIPTION_INFO: \"اختیاری\",\r\n  CATEGORIES_ADD_FIELD_MODAL_CREATE_BTN: \"ایجاد\",\r\n  CATEGORIES_ADD_FIELD_MODAL_CREATE_CONFIG_BTN: \"ایجاد و تنظیمات\",\r\n  CATEGORIES_ADD_FIELD_MODAL_CHNAGE_FIELD_BTN: \"تغییر نوع مدل\",\r\n  FIELD_TYPE_TEXT: \"رشته\",\r\n  FIELD_TYPE_TEXT_INFO: \"عناوین ، نام ها، پاراگراف ها و لیستی از نام ها\",\r\n  FIELD_TYPE_NUMBER: \"عدد\",\r\n  FIELD_TYPE_NUMBER_INFO: \"شناسه ، شماره سفارش ، ارزیابی و تعداد\",\r\n  FIELD_TYPE_DATE_TIME: \"تاریخ و زمان\",\r\n  FIELD_TYPE_DATE_TIME_INFO: \"تاریخ یک رویداد\",\r\n  FIELD_TYPE_LOCATION: \"موقعیت\",\r\n  FIELD_TYPE_LOCATION_INFO: \"مکان روی نفشه\",\r\n  FIELD_TYPE_MEDIA: \"رسانه\",\r\n  FIELD_TYPE_MEDIA_INFO: \"عکس و ویدیو وفایل های مختلف\",\r\n  FIELD_TYPE_BOOLEAN: \"منطقی\",\r\n  FIELD_TYPE_BOOLEAN_INFO: \"بله و خیر ، صفر و یک\",\r\n  FIELD_TYPE_OBJECT: \"شی جی سون\",\r\n  FIELD_TYPE_OBJECT_INFO: \"داده با نمایش جی  سون\",\r\n  FIELD_TYPE_REFERENCE: \"اشاره گر\",\r\n  FIELD_TYPE_REFERENCE_INFO:\r\n    \"برای مثال، یک بلاگ پست میتواند به یک نویسنده وصل باشد\",\r\n  // items\r\n  ITEMS_CATEGORIES_CONTENT: \"محتوا\"\r\n};\r\n","import languageManager from \"./../languageManager\";\r\nexport default {\r\n  applyeLangs(value) {\r\n    const langs = languageManager.getAllLanguages();\r\n    const data = {};\r\n    for (const key in langs) {\r\n      data[key] = value;\r\n    }\r\n    return data;\r\n  }\r\n};\r\n","import React, { memo } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { languageManager } from \"./../../services\";\r\nimport \"./styles.scss\";\r\n\r\nconst Login = (...props) => {\r\n  // const [visibility, setVisibility] = useState(0);\r\n  // function signIn() {\r\n  //   setVisibility({ visibility: true });\r\n  // }\r\n  const login = () => {\r\n    props[0].history.replace(\"home\");\r\n  };\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"center\">\r\n        <div className=\"header\">\r\n          <span className=\"header-title\">\r\n            {languageManager.translate(\"LOGIN_TITLE\")}\r\n          </span>\r\n        </div>\r\n        <div className=\"body\">\r\n          <form>\r\n            <div className=\"form-group\">\r\n              <label>\r\n                {languageManager.translate(\"LOGIN_EMAIL_INPUT_TITLE\")}\r\n              </label>\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                id=\"exampleInputEmail1\"\r\n                aria-describedby=\"emailHelp\"\r\n                placeholder={languageManager.translate(\r\n                  \"LOGIN_EMAIL_INPUT_PLACEHOLDER\"\r\n                )}\r\n              />\r\n              <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                {languageManager.translate(\"LOGIN_EMAIL_INPUT_DESCRIPTION\")}\r\n              </small>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>{languageManager.translate(\"LOGIN_PASSWORD_INPUT\")}</label>\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                id=\"exampleInputPassword1\"\r\n                placeholder={languageManager.translate(\r\n                  \"LOGIN_PASSWORD_INPUT_PLACEHOLDER\"\r\n                )}\r\n              />\r\n              <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                {languageManager.translate(\"LOGIN_PASSWORD_INPUT_DESCRIPTION\")}\r\n              </small>\r\n            </div>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary btn-block btn-submit\"\r\n              onClick={() => login()}\r\n            >\r\n              {languageManager.translate(\"LOGIN_SUBMIT_BTN\")}\r\n            </button>\r\n          </form>\r\n          {/* <div className=\"divider\">\r\n            <Divider>{languageManager.translate(\"LOGIN_SOCIAL_TEXT\")}</Divider>\r\n          </div>\r\n          <div className=\"social\">\r\n            <button type=\"button\" className=\"btn btn-light\">\r\n              <i className=\"icon-google icon\" />\r\n              {languageManager.translate(\"LOGIN_SOCIAL_BTN_GOOGLE\")}\r\n            </button>\r\n            <button type=\"button\" className=\"btn btn-light\">\r\n              <i className=\"icon-github icon\" />\r\n              {languageManager.translate(\"LOGIN_SOCIAL_BTN_GITHUB\")}\r\n            </button>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"signUpBox\">\r\n        <span>\r\n          {languageManager.translate(\"LOGIN_SIGNUP_LINK_TITLE\")}&nbsp;\r\n        </span>\r\n        <Link to=\"/signup\">\r\n          {\" \"}\r\n          {languageManager.translate(\"LOGIN_SIGNUP_LINK\")}\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default memo(Login);\r\n","import React, { memo } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { languageManager } from \"./../../services\";\r\nimport \"./styles.scss\";\r\n\r\nconst Signup = (...props) => {\r\n  // const [visibility, setVisibility] = useState(0);\r\n  // function signIn() {\r\n  //   setVisibility({ visibility: true });\r\n  // }\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"center\">\r\n        <div className=\"header\">\r\n          <span className=\"header-title\">\r\n            {languageManager.translate(\"SIGNUP_TITLE\")}\r\n          </span>\r\n        </div>\r\n        <div className=\"body\">\r\n          <form>\r\n            <div className=\"form-group\">\r\n              <label>\r\n                {languageManager.translate(\"LOGIN_EMAIL_INPUT_TITLE\")}\r\n              </label>\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                id=\"exampleInputEmail1\"\r\n                aria-describedby=\"emailHelp\"\r\n                placeholder={languageManager.translate(\r\n                  \"LOGIN_EMAIL_INPUT_PLACEHOLDER\"\r\n                )}\r\n              />\r\n              <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                {languageManager.translate(\"LOGIN_EMAIL_INPUT_DESCRIPTION\")}\r\n              </small>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>\r\n                {languageManager.translate(\"LOGIN_PASSWORD_INPUT\")}\r\n              </label>\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                id=\"exampleInputPassword1\"\r\n                placeholder={languageManager.translate(\r\n                  \"LOGIN_PASSWORD_INPUT_PLACEHOLDER\"\r\n                )}\r\n              />\r\n              <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                {languageManager.translate(\"LOGIN_PASSWORD_INPUT_DESCRIPTION\")}\r\n              </small>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>\r\n                {languageManager.translate(\"SIGNUP_CONFIRM_PASSWORD_INPUT\")}\r\n              </label>\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                id=\"exampleInputPassword1\"\r\n                placeholder={languageManager.translate(\r\n                  \"SIGNUP_CONFIRM_PASSWORD_INPUT_PLACEHOLDER\"\r\n                )}\r\n              />\r\n              <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                {languageManager.translate(\"SIGNUP_CONFIRM_PASSWORD_INPUT_DESCRIPTION\")}\r\n              </small>\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary btn-block btn-submit\">\r\n              {languageManager.translate(\"LOGIN_SUBMIT_BTN\")}\r\n            </button>\r\n          </form>\r\n          {/*<div className=\"divider\">\r\n            <Divider>{languageManager.translate(\"LOGIN_SOCIAL_TEXT\")}</Divider>\r\n          </div>\r\n           <div className=\"social\">\r\n            <button type=\"button\" className=\"btn btn-light\">\r\n              <i className=\"icon-google icon\"></i>\r\n              {languageManager.translate(\"LOGIN_SOCIAL_BTN_GOOGLE\")}\r\n            </button>\r\n            <button type=\"button\" className=\"btn btn-light\">\r\n              <i className=\"icon-github icon\"></i>\r\n              {languageManager.translate(\"LOGIN_SOCIAL_BTN_GITHUB\")}\r\n            </button>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"signUpBox\">\r\n        <span>\r\n          {languageManager.translate(\"SIGNUP_LOGIN_LINK_TITLE\")}&nbsp;\r\n        </span>\r\n        <Link to=\"/login\"> {languageManager.translate(\"SIGNUP_LOGIN_LINK\")}</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default memo(Signup);\r\n","import React, { useState } from \"react\";\r\nimport \"./styles.scss\";\r\nimport {\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem\r\n} from \"reactstrap\";\r\nimport { languageManager } from \"../../../../../../services\";\r\nconst ProfileWidget = props => {\r\n  const [dropDownVisibility, toggleVisibility] = useState(false);\r\n  function toggle() {\r\n    toggleVisibility(prevState => !prevState);\r\n  }\r\n  return (\r\n    <div className=\"profile-widget\">\r\n      <div className=\"left\">\r\n        <i className=\"icon-user\" />\r\n      </div>\r\n      <div className=\"centerbox\">\r\n        <span className=\"title\">Saeed Padyab</span>\r\n        <span className=\"role\">payabsaeed@gmail.com</span>\r\n      </div>\r\n      <div className=\"right\">\r\n        <Dropdown isOpen={dropDownVisibility} toggle={toggle}>\r\n          <DropdownToggle className=\"btn btn-light btn-small\">\r\n            <i className=\"icon-more-h\" />\r\n          </DropdownToggle>\r\n          <DropdownMenu>\r\n            <DropdownItem>{languageManager.translate('HOME_SIDEBAR_PROFILE_SETTINGS')}</DropdownItem>\r\n            <DropdownItem>{languageManager.translate('HOME_SIDEBAR_PROFILE_LOGOUT')}</DropdownItem>\r\n          </DropdownMenu>\r\n        </Dropdown>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ProfileWidget;\r\n","import React from \"react\";\r\nimport { NavLink  } from \"react-router-dom\";\r\nconst LinkItem = ({ link }) => {\r\n  const icon = `linkIcon icon-${link.icon}`;\r\n  return (\r\n      <NavLink  to={link.path} className=\"linkItem\" activeClassName=\"linkItemSelected\">\r\n      <div className=\"navIcon\">\r\n        <i className={icon} />\r\n      </div>\r\n      <div className=\"linkBody\">\r\n        <span className=\"linkText\">{link.name}</span>\r\n        <span className=\"linkTextDesc\">{link.desc}</span>\r\n      </div>\r\n      </NavLink>\r\n  );\r\n};\r\n\r\nexport default LinkItem;\r\n","import React from \"react\";\r\nimport \"./styles.scss\";\r\nimport LinkItem from \"./linkItem\";\r\nimport { languageManager } from \"./../../../../../../services\";\r\nconst NavLinks = props => {\r\n  function translate(key) {\r\n    return languageManager.translate(key);\r\n  }\r\n  const links = [\r\n    {\r\n      name: translate(\"HOME_SIDE_NAV_CONTENT_TYPE\"),\r\n      icon: \"item-type\",\r\n      path: \"/home/contentType\",\r\n      desc: translate(\"HOME_SIDE_NAV_CONTENT_TYPE_DEC\")\r\n    },\r\n    {\r\n      name: translate(\"HOME_SIDE_NAV_CATEGRIES\"),\r\n      icon: \"category\",\r\n      path: \"/home/categories\",\r\n      desc: translate(\"HOME_SIDE_NAV_CATEGORIES_DEC\")\r\n    },\r\n    {\r\n      name: translate(\"HOME_SIDE_NAV_PRODUCTS\"),\r\n      icon: \"product\",\r\n      path: \"/home/products\",\r\n      desc: translate(\"HOME_SIDE_NAV_PRODUCTS_DESC\")\r\n    },\r\n\r\n    // {\r\n    //   name: translate(\"HOME_SIDE_NAV_REQUESTS\"),\r\n    //   icon: \"request\",\r\n    //   path: \"/home/requests\",\r\n    //   desc: translate(\"HOME_SIDE_NAV_REQUESTS_DESC\")\r\n    // },\r\n    // {\r\n    //   name: translate(\"HOME_SIDE_NAV_QUOTES\"),\r\n    //   icon: \"quote\",\r\n    //   path: \"/home/quotes\",\r\n    //   desc: translate(\"HOME_SIDE_NAV_QUOTES_DESC\")\r\n    // },\r\n    {\r\n      name: translate(\"HOME_SIDE_NAV_MANAGET_USERS\"),\r\n      icon: \"users\",\r\n      path: \"/home/manageUsers\",\r\n      desc: translate(\"HOME_SIDE_NAV_MANAGE_USERS_DESC\")\r\n    },\r\n    {\r\n      name: translate(\"HOME_SIDE_NAV_ASSETS_MANAGER\"),\r\n      icon: \"images\",\r\n      path: \"/home/assets\",\r\n      desc: translate(\"HOME_SIDE_NAV_ASSETS_MANAGER_DESC\"),\r\n    } \r\n\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <div className=\"sideLinksTitle\">\r\n        {languageManager.translate(\"HOME_NAVS_TITLE\")}\r\n      </div>\r\n      <div className=\"sideLinks\">\r\n        {links.map(link => (\r\n          <LinkItem link={link} key={link.path} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavLinks;\r\n","import React from \"react\";\r\nimport \"./styles.scss\";\r\nimport ProfileWidget from \"./components/profileWidget\";\r\nimport SideLinks from \"./components/SideLinks\";\r\nimport { languageManager, useGlobalState } from \"./../../../../services\";\r\nconst SideBar = props => {\r\n  const [{ projectInfo }, dispatch] = useGlobalState();\r\n  return (\r\n    <div className=\"sideBar\">\r\n      <div className=\"top\">\r\n        <i className=\"icon-logo icon\" />\r\n        <span className=\"title\">{projectInfo.name}</span>\r\n      </div>\r\n      <ProfileWidget />\r\n      <SideLinks links={props.links} />\r\n      <div className=\"sideBar-info\">\r\n        <div className=\"sideBar-info-left\">\r\n          <a href=\"#about\">{languageManager.translate(\"HOME_SIDEAR_ABOUT\")}</a>\r\n          <a href=\"#about\">{languageManager.translate(\"HOME_SIDEBAR_BLOG\")}</a>\r\n        </div>\r\n        <div className=\"sideBar-info-right\">\r\n          <a href=\"#about\">\r\n            {languageManager.translate(\"HOME_SIDEBAR_DOCUMENT\")}\r\n          </a>\r\n        </div>\r\n      </div>\r\n      {/* <span className=\"copyRight\">\r\n        {languageManager.translate(\"HOME_COPY_RIGHT\")}\r\n      </span> */}\r\n    </div>\r\n  );\r\n};\r\nexport default SideBar;\r\n","import React from \"react\";\r\nimport SideBar from \"./components/SideBar\";\r\nimport \"./styles.scss\";\r\n\r\nconst Home = props => {\r\n  return (\r\n    <div className=\"page-wrapper\">\r\n      <SideBar links={[]} />\r\n      <main className=\"main\">\r\n        {props.routes}\r\n        {/* {links.map(link => (\r\n          <Route\r\n            exact\r\n            key={link.path}\r\n            path={link.path}\r\n            render={props => {\r\n              const Component = link.component;\r\n              const p = { ...props, component: link };\r\n              return (\r\n                <StateProvider>\r\n                  <Component {...p} />\r\n                </StateProvider>\r\n              );\r\n            }}\r\n          />\r\n        ))} */}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport { ListGroup, ListGroupItem, Collapse } from \"reactstrap\";\r\nimport { languageManager } from \"../../services\";\r\n\r\nclass Tree extends Component {\r\n  state = {\r\n    selected: {},\r\n    currentLang: languageManager.getCurrentLanguage().name\r\n  };\r\n  static getDerivedStateFromProps(props, current_state) {\r\n    if (!props.rightContent) {\r\n      return {\r\n        selected: {}\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  toggle = event => {\r\n    const id = event.target.getAttribute(\"id\");\r\n    this.setState(state => ({ [id]: !state[id] }));\r\n  };\r\n  mapper = (nodes, parentId, lvl) => {\r\n    return nodes.map((node, index) => {\r\n      const id = `${node.sys.id}-${parentId ? parentId : \"top\"}`.replace(\r\n        /[^a-zA-Z0-9-_]/g,\r\n        \"\"\r\n      );\r\n      return (\r\n        <>\r\n          <ListGroupItem\r\n            style={{\r\n              zIndex: 0,\r\n              padding: 10,\r\n              background: this.state.selected.sys\r\n                ? this.state.selected.sys.id === node.sys.id\r\n                  ? \"lightgray\"\r\n                  : \"white\"\r\n                : \"white\"\r\n            }}\r\n            className={`treeItemParent ${\r\n              parentId ? `rounded-0 ${lvl ? \"border-bottom-0\" : \"\"}` : \"\"\r\n            }`}\r\n          >\r\n            {\r\n              <div\r\n                className=\"treeItem\"\r\n                style={{\r\n                  paddingLeft: `${15 * lvl}px`\r\n                }}\r\n              >\r\n                {node.children && node.children.length > 0 ? (\r\n                  <button\r\n                    className=\"btnCategoryCollapse btn btn-primary btn-sm\"\r\n                    id={id}\r\n                    color=\"primary\"\r\n                    onClick={this.toggle}\r\n                  >\r\n                    {this.state[id] ? (\r\n                      <i className=\"icon-caret-down\" onClick={this.toggle} />\r\n                    ) : (\r\n                      <i className=\"icon-caret-right\" onClick={this.toggle} />\r\n                    )}\r\n                  </button>\r\n                ) : (\r\n                  <button className=\"btnCategoryLeaf btn btn-primary btn-sm\">\r\n                    <i className=\"icon-circle-o\" />\r\n                  </button>\r\n                )}\r\n                <div className=\"treeItem-text\">\r\n                  <span className=\"treeItem-name\">\r\n                    {node.name[this.state.currentLang]}\r\n                  </span>\r\n                  <span className=\"treeItem-desc\">\r\n                    {node.description[this.state.currentLang] ||\r\n                      \"Lorem ipsum dolor sit amet, consectetur\"}\r\n                  </span>\r\n                </div>\r\n                {(node.children === undefined ||\r\n                  node.children.length === 0) && (\r\n                  <button\r\n                    className=\"btn btn-light treeItem-action hoverAction\"\r\n                    size=\"xs\"\r\n                    onClick={() => this.props.handleDeleteCategory(node)}\r\n                  >\r\n                    <i className=\"icon-bin\" />\r\n                  </button>\r\n                )}\r\n                <button\r\n                  className=\"btn btn-light treeItem-action hoverAction\"\r\n                  size=\"xs\"\r\n                  onClick={() => this.props.handleEditCategory(node)}\r\n                >\r\n                  <i className=\"icon-pencil\" />\r\n                </button>\r\n                {(node.children === undefined ||\r\n                  node.children.length === 0) && (\r\n                  <button\r\n                    className=\"btn btn-light treeItem-action\"\r\n                    size=\"xs\"\r\n                    onClick={() => {\r\n                      this.setState(state => ({ selected: node }));\r\n                      this.props.handleItemTypes(node);\r\n                    }}\r\n                  >\r\n                    <span style={{ fontSize: 12 }}>\r\n                      {languageManager.translate(\"CATEGROES_CONTENT_TYPES\")}\r\n                    </span>\r\n                  </button>\r\n                )}\r\n                {(node.itemTypes === undefined ||\r\n                  node.itemTypes.length === 0) && (\r\n                  <button\r\n                    className=\"btn btn-light treeItem-action\"\r\n                    size=\"xs\"\r\n                    onClick={() => this.props.handleNewCategory(node)}\r\n                  >\r\n                    <i className=\"icon-plus\" style={{ fontWeight: \"bold\" }} />\r\n                  </button>\r\n                )}\r\n              </div>\r\n            }\r\n          </ListGroupItem>\r\n          {node.children && (\r\n            <Collapse isOpen={this.state[id]}>\r\n              {this.mapper(node.children, id, (lvl || 0) + 1)}\r\n            </Collapse>\r\n          )}\r\n        </>\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return <ListGroup>{this.mapper(this.props.data)}</ListGroup>;\r\n  }\r\n}\r\n\r\nexport default Tree;\r\n","const data = require(\"./../data.json\");\r\n\r\nexport function getContentTypes() {\r\n  let _onOkCallBack;\r\n  function _onOk(result) {\r\n    if (_onOkCallBack) {\r\n      _onOkCallBack(result);\r\n    }\r\n  }\r\n  let _onServerErrorCallBack;\r\n  function _onServerError(result) {\r\n    if (_onServerErrorCallBack) {\r\n      _onServerErrorCallBack(result);\r\n    }\r\n  }\r\n  let _onBadRequestCallBack;\r\n  function _onBadRequest(result) {\r\n    if (_onBadRequestCallBack) {\r\n      _onBadRequestCallBack(result);\r\n    }\r\n  }\r\n  let _unAuthorizedCallBack;\r\n  function _unAuthorized(result) {\r\n    if (_unAuthorizedCallBack) {\r\n      _unAuthorizedCallBack(result);\r\n    }\r\n  }\r\n  let _notFoundCallBack;\r\n  function _notFound(result) {\r\n    if (_notFoundCallBack) {\r\n      _notFoundCallBack(result);\r\n    }\r\n  }\r\n  let _onConnectionErrorCallBack;\r\n  function _onConnectionError(result) {\r\n    if (_onConnectionErrorCallBack) {\r\n      _onConnectionErrorCallBack(result);\r\n    }\r\n  }\r\n  function _call(name, contentType, category) {\r\n    //const status = rawResponse.status;\r\n    //const result = await rawResponse.json();\r\n    const result = data.contentTypes;\r\n    const status = 200;\r\n    switch (status) {\r\n      case 200:\r\n        _onOk(result);\r\n        break;\r\n      case 400:\r\n        _onBadRequest(result);\r\n        break;\r\n      case 401:\r\n        _unAuthorized(result);\r\n        break;\r\n      case 404:\r\n        _notFound(result);\r\n        break;\r\n      case 500:\r\n        _onServerError(result);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  return {\r\n    call: _call,\r\n    onOk: function(callback) {\r\n      _onOkCallBack = callback;\r\n      return this;\r\n    },\r\n    onServerError: function(callback) {\r\n      _onServerErrorCallBack = callback;\r\n      return this;\r\n    },\r\n    onBadRequest: function(callback) {\r\n      _onBadRequestCallBack = callback;\r\n      return this;\r\n    },\r\n    notFound: function(callback) {\r\n      _notFoundCallBack = callback;\r\n      return this;\r\n    },\r\n    unAuthorized: function(callback) {\r\n      _unAuthorizedCallBack = callback;\r\n      return this;\r\n    },\r\n    onConnectionError: function(callback) {\r\n      _onConnectionErrorCallBack = callback;\r\n      return this;\r\n    }\r\n  };\r\n}\r\nexport function addContentType() {\r\n  let _onOkCallBack;\r\n  function _onOk(result) {\r\n    if (_onOkCallBack) {\r\n      _onOkCallBack(result);\r\n    }\r\n  }\r\n  let _onServerErrorCallBack;\r\n  function _onServerError(result) {\r\n    if (_onServerErrorCallBack) {\r\n      _onServerErrorCallBack(result);\r\n    }\r\n  }\r\n  let _onBadRequestCallBack;\r\n  function _onBadRequest(result) {\r\n    if (_onBadRequestCallBack) {\r\n      _onBadRequestCallBack(result);\r\n    }\r\n  }\r\n  let _unAuthorizedCallBack;\r\n  function _unAuthorized(result) {\r\n    if (_unAuthorizedCallBack) {\r\n      _unAuthorizedCallBack(result);\r\n    }\r\n  }\r\n  let _notFoundCallBack;\r\n  function _notFound(result) {\r\n    if (_notFoundCallBack) {\r\n      _notFoundCallBack(result);\r\n    }\r\n  }\r\n  let _onConnectionErrorCallBack;\r\n  function _onConnectionError(result) {\r\n    if (_onConnectionErrorCallBack) {\r\n      _onConnectionErrorCallBack(result);\r\n    }\r\n  }\r\n  function _call(obj) {\r\n    //const status = rawResponse.status;\r\n    //const result = await rawResponse.json();\r\n\r\n    //\r\n\r\n    data.contentTypes.push(obj);\r\n\r\n    const status = 200;\r\n    switch (status) {\r\n      case 200:\r\n        _onOk(data.contentTypes);\r\n        break;\r\n      case 400:\r\n        _onBadRequest();\r\n        break;\r\n      case 401:\r\n        _unAuthorized();\r\n        break;\r\n      case 404:\r\n        _notFound();\r\n        break;\r\n      case 500:\r\n        _onServerError();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  return {\r\n    call: _call,\r\n    onOk: function(callback) {\r\n      _onOkCallBack = callback;\r\n      return this;\r\n    },\r\n    onServerError: function(callback) {\r\n      _onServerErrorCallBack = callback;\r\n      return this;\r\n    },\r\n    onBadRequest: function(callback) {\r\n      _onBadRequestCallBack = callback;\r\n      return this;\r\n    },\r\n    notFound: function(callback) {\r\n      _notFoundCallBack = callback;\r\n      return this;\r\n    },\r\n    unAuthorized: function(callback) {\r\n      _unAuthorizedCallBack = callback;\r\n      return this;\r\n    },\r\n    onConnectionError: function(callback) {\r\n      _onConnectionErrorCallBack = callback;\r\n      return this;\r\n    }\r\n  };\r\n}\r\nexport function updateContentType() {\r\n  let _onOkCallBack;\r\n  function _onOk(result) {\r\n    if (_onOkCallBack) {\r\n      _onOkCallBack(result);\r\n    }\r\n  }\r\n  let _onServerErrorCallBack;\r\n  function _onServerError(result) {\r\n    if (_onServerErrorCallBack) {\r\n      _onServerErrorCallBack(result);\r\n    }\r\n  }\r\n  let _onBadRequestCallBack;\r\n  function _onBadRequest(result) {\r\n    if (_onBadRequestCallBack) {\r\n      _onBadRequestCallBack(result);\r\n    }\r\n  }\r\n  let _unAuthorizedCallBack;\r\n  function _unAuthorized(result) {\r\n    if (_unAuthorizedCallBack) {\r\n      _unAuthorizedCallBack(result);\r\n    }\r\n  }\r\n  let _notFoundCallBack;\r\n  function _notFound(result) {\r\n    if (_notFoundCallBack) {\r\n      _notFoundCallBack(result);\r\n    }\r\n  }\r\n  let _onConnectionErrorCallBack;\r\n  function _onConnectionError(result) {\r\n    if (_onConnectionErrorCallBack) {\r\n      _onConnectionErrorCallBack(result);\r\n    }\r\n  }\r\n  function _call(obj) {\r\n    //const status = rawResponse.status;\r\n    //const result = await rawResponse.json();\r\n\r\n    //\r\n\r\n    const result = data.contentTypes.map(item => {\r\n      if (item.sys.id === obj.sys.id) {\r\n        return { ...item, ...obj };\r\n      }\r\n      return item;\r\n    });\r\n    data.contentTypes = result;\r\n\r\n    const status = 200;\r\n    switch (status) {\r\n      case 200:\r\n        _onOk(result);\r\n        break;\r\n      case 400:\r\n        _onBadRequest();\r\n        break;\r\n      case 401:\r\n        _unAuthorized();\r\n        break;\r\n      case 404:\r\n        _notFound();\r\n        break;\r\n      case 500:\r\n        _onServerError();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  return {\r\n    call: _call,\r\n    onOk: function(callback) {\r\n      _onOkCallBack = callback;\r\n      return this;\r\n    },\r\n    onServerError: function(callback) {\r\n      _onServerErrorCallBack = callback;\r\n      return this;\r\n    },\r\n    onBadRequest: function(callback) {\r\n      _onBadRequestCallBack = callback;\r\n      return this;\r\n    },\r\n    notFound: function(callback) {\r\n      _notFoundCallBack = callback;\r\n      return this;\r\n    },\r\n    unAuthorized: function(callback) {\r\n      _unAuthorizedCallBack = callback;\r\n      return this;\r\n    },\r\n    onConnectionError: function(callback) {\r\n      _onConnectionErrorCallBack = callback;\r\n      return this;\r\n    }\r\n  };\r\n}\r\nexport function deleteContentType() {\r\n  let _onOkCallBack;\r\n  function _onOk(result) {\r\n    if (_onOkCallBack) {\r\n      _onOkCallBack(result);\r\n    }\r\n  }\r\n  let _onServerErrorCallBack;\r\n  function _onServerError(result) {\r\n    if (_onServerErrorCallBack) {\r\n      _onServerErrorCallBack(result);\r\n    }\r\n  }\r\n  let _onBadRequestCallBack;\r\n  function _onBadRequest(result) {\r\n    if (_onBadRequestCallBack) {\r\n      _onBadRequestCallBack(result);\r\n    }\r\n  }\r\n  let _unAuthorizedCallBack;\r\n  function _unAuthorized(result) {\r\n    if (_unAuthorizedCallBack) {\r\n      _unAuthorizedCallBack(result);\r\n    }\r\n  }\r\n  let _notFoundCallBack;\r\n  function _notFound(result) {\r\n    if (_notFoundCallBack) {\r\n      _notFoundCallBack(result);\r\n    }\r\n  }\r\n  let _onConnectionErrorCallBack;\r\n  function _onConnectionError(result) {\r\n    if (_onConnectionErrorCallBack) {\r\n      _onConnectionErrorCallBack(result);\r\n    }\r\n  }\r\n  function _call(obj) {\r\n    //const status = rawResponse.status;\r\n    //const result = await rawResponse.json();\r\n\r\n    //\r\n\r\n    const result = data.contentTypes.filter(item => item.sys.id !== obj.sys.id);\r\n    data.contentTypes = result;\r\n\r\n    const status = 200;\r\n    switch (status) {\r\n      case 200:\r\n        _onOk(result);\r\n        break;\r\n      case 400:\r\n        _onBadRequest();\r\n        break;\r\n      case 401:\r\n        _unAuthorized();\r\n        break;\r\n      case 404:\r\n        _notFound();\r\n        break;\r\n      case 500:\r\n        _onServerError();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  return {\r\n    call: _call,\r\n    onOk: function(callback) {\r\n      _onOkCallBack = callback;\r\n      return this;\r\n    },\r\n    onServerError: function(callback) {\r\n      _onServerErrorCallBack = callback;\r\n      return this;\r\n    },\r\n    onBadRequest: function(callback) {\r\n      _onBadRequestCallBack = callback;\r\n      return this;\r\n    },\r\n    notFound: function(callback) {\r\n      _notFoundCallBack = callback;\r\n      return this;\r\n    },\r\n    unAuthorized: function(callback) {\r\n      _unAuthorizedCallBack = callback;\r\n      return this;\r\n    },\r\n    onConnectionError: function(callback) {\r\n      _onConnectionErrorCallBack = callback;\r\n      return this;\r\n    }\r\n  };\r\n}\r\nexport function addFieldToContentType() {\r\n  let _onOkCallBack;\r\n  function _onOk(result) {\r\n    if (_onOkCallBack) {\r\n      _onOkCallBack(result);\r\n    }\r\n  }\r\n  let _onServerErrorCallBack;\r\n  function _onServerError(result) {\r\n    if (_onServerErrorCallBack) {\r\n      _onServerErrorCallBack(result);\r\n    }\r\n  }\r\n  let _onBadRequestCallBack;\r\n  function _onBadRequest(result) {\r\n    if (_onBadRequestCallBack) {\r\n      _onBadRequestCallBack(result);\r\n    }\r\n  }\r\n  let _unAuthorizedCallBack;\r\n  function _unAuthorized(result) {\r\n    if (_unAuthorizedCallBack) {\r\n      _unAuthorizedCallBack(result);\r\n    }\r\n  }\r\n  let _notFoundCallBack;\r\n  function _notFound(result) {\r\n    if (_notFoundCallBack) {\r\n      _notFoundCallBack(result);\r\n    }\r\n  }\r\n  let _onConnectionErrorCallBack;\r\n  function _onConnectionError(result) {\r\n    if (_onConnectionErrorCallBack) {\r\n      _onConnectionErrorCallBack(result);\r\n    }\r\n  }\r\n  function _call(contentTypeId, field) {\r\n    //const status = rawResponse.status;\r\n    //const result = await rawResponse.json();\r\n\r\n    //\r\n    const result = data.contentTypes.map(item => {\r\n      if (item.sys.id === contentTypeId) {\r\n        let newItem = item;\r\n        if (newItem.fields === undefined) {\r\n          newItem.fields = [];\r\n        }\r\n        newItem.fields.push(field);\r\n        return newItem;\r\n      }\r\n      return item;\r\n    });\r\n    data.contentTypes = result;\r\n\r\n    const status = 200;\r\n    switch (status) {\r\n      case 200:\r\n        _onOk(result);\r\n        break;\r\n      case 400:\r\n        _onBadRequest();\r\n        break;\r\n      case 401:\r\n        _unAuthorized();\r\n        break;\r\n      case 404:\r\n        _notFound();\r\n        break;\r\n      case 500:\r\n        _onServerError();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  return {\r\n    call: _call,\r\n    onOk: function(callback) {\r\n      _onOkCallBack = callback;\r\n      return this;\r\n    },\r\n    onServerError: function(callback) {\r\n      _onServerErrorCallBack = callback;\r\n      return this;\r\n    },\r\n    onBadRequest: function(callback) {\r\n      _onBadRequestCallBack = callback;\r\n      return this;\r\n    },\r\n    notFound: function(callback) {\r\n      _notFoundCallBack = callback;\r\n      return this;\r\n    },\r\n    unAuthorized: function(callback) {\r\n      _unAuthorizedCallBack = callback;\r\n      return this;\r\n    },\r\n    onConnectionError: function(callback) {\r\n      _onConnectionErrorCallBack = callback;\r\n      return this;\r\n    }\r\n  };\r\n}\r\nexport function removeContentTypeField() {\r\n  let _onOkCallBack;\r\n  function _onOk(result) {\r\n    if (_onOkCallBack) {\r\n      _onOkCallBack(result);\r\n    }\r\n  }\r\n  let _onServerErrorCallBack;\r\n  function _onServerError(result) {\r\n    if (_onServerErrorCallBack) {\r\n      _onServerErrorCallBack(result);\r\n    }\r\n  }\r\n  let _onBadRequestCallBack;\r\n  function _onBadRequest(result) {\r\n    if (_onBadRequestCallBack) {\r\n      _onBadRequestCallBack(result);\r\n    }\r\n  }\r\n  let _unAuthorizedCallBack;\r\n  function _unAuthorized(result) {\r\n    if (_unAuthorizedCallBack) {\r\n      _unAuthorizedCallBack(result);\r\n    }\r\n  }\r\n  let _notFoundCallBack;\r\n  function _notFound(result) {\r\n    if (_notFoundCallBack) {\r\n      _notFoundCallBack(result);\r\n    }\r\n  }\r\n  let _onConnectionErrorCallBack;\r\n  function _onConnectionError(result) {\r\n    if (_onConnectionErrorCallBack) {\r\n      _onConnectionErrorCallBack(result);\r\n    }\r\n  }\r\n  function _call(contentTypeId, fieldId) {\r\n    //const status = rawResponse.status;\r\n    //const result = await rawResponse.json();\r\n\r\n    //\r\n    const result = data.contentTypes.map(item => {\r\n      if (item.sys.id === contentTypeId) {\r\n        const newItem = { ...item };\r\n        const f_s = newItem.fields.filter(f => f.id !== fieldId);\r\n        newItem.fields = f_s;\r\n        return newItem;\r\n      }\r\n      return item;\r\n    });\r\n\r\n    data.contentTypes = result;\r\n\r\n    const status = 200;\r\n    switch (status) {\r\n      case 200:\r\n        _onOk(result);\r\n        break;\r\n      case 400:\r\n        _onBadRequest();\r\n        break;\r\n      case 401:\r\n        _unAuthorized();\r\n        break;\r\n      case 404:\r\n        _notFound();\r\n        break;\r\n      case 500:\r\n        _onServerError();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  return {\r\n    call: _call,\r\n    onOk: function(callback) {\r\n      _onOkCallBack = callback;\r\n      return this;\r\n    },\r\n    onServerError: function(callback) {\r\n      _onServerErrorCallBack = callback;\r\n      return this;\r\n    },\r\n    onBadRequest: function(callback) {\r\n      _onBadRequestCallBack = callback;\r\n      return this;\r\n    },\r\n    notFound: function(callback) {\r\n      _notFoundCallBack = callback;\r\n      return this;\r\n    },\r\n    unAuthorized: function(callback) {\r\n      _unAuthorizedCallBack = callback;\r\n      return this;\r\n    },\r\n    onConnectionError: function(callback) {\r\n      _onConnectionErrorCallBack = callback;\r\n      return this;\r\n    }\r\n  };\r\n}\r\n","const data = require(\"./../data.json\");\r\n\r\nexport function getCategories() {\r\n  let _onOkCallBack;\r\n  function _onOk(result) {\r\n    if (_onOkCallBack) {\r\n      _onOkCallBack(result);\r\n    }\r\n  }\r\n  let _onServerErrorCallBack;\r\n  function _onServerError(result) {\r\n    if (_onServerErrorCallBack) {\r\n      _onServerErrorCallBack(result);\r\n    }\r\n  }\r\n  let _onBadRequestCallBack;\r\n  function _onBadRequest(result) {\r\n    if (_onBadRequestCallBack) {\r\n      _onBadRequestCallBack(result);\r\n    }\r\n  }\r\n  let _unAuthorizedCallBack;\r\n  function _unAuthorized(result) {\r\n    if (_unAuthorizedCallBack) {\r\n      _unAuthorizedCallBack(result);\r\n    }\r\n  }\r\n  let _notFoundCallBack;\r\n  function _notFound(result) {\r\n    if (_notFoundCallBack) {\r\n      _notFoundCallBack(result);\r\n    }\r\n  }\r\n  let _onConnectionErrorCallBack;\r\n  function _onConnectionError(result) {\r\n    if (_onConnectionErrorCallBack) {\r\n      _onConnectionErrorCallBack(result);\r\n    }\r\n  }\r\n  function _call(name, contentType, category) {\r\n    //const status = rawResponse.status;\r\n    //const result = await rawResponse.json();\r\n    const result = data.categories;\r\n    const status = 200;\r\n    switch (status) {\r\n      case 200:\r\n        _onOk(result);\r\n        break;\r\n      case 400:\r\n        _onBadRequest(result);\r\n        break;\r\n      case 401:\r\n        _unAuthorized(result);\r\n        break;\r\n      case 404:\r\n        _notFound(result);\r\n        break;\r\n      case 500:\r\n        _onServerError(result);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  return {\r\n    call: _call,\r\n    onOk: function(callback) {\r\n      _onOkCallBack = callback;\r\n      return this;\r\n    },\r\n    onServerError: function(callback) {\r\n      _onServerErrorCallBack = callback;\r\n      return this;\r\n    },\r\n    onBadRequest: function(callback) {\r\n      _onBadRequestCallBack = callback;\r\n      return this;\r\n    },\r\n    notFound: function(callback) {\r\n      _notFoundCallBack = callback;\r\n      return this;\r\n    },\r\n    unAuthorized: function(callback) {\r\n      _unAuthorizedCallBack = callback;\r\n      return this;\r\n    },\r\n    onConnectionError: function(callback) {\r\n      _onConnectionErrorCallBack = callback;\r\n      return this;\r\n    }\r\n  };\r\n}\r\nexport function addCategory() {\r\n  let _onOkCallBack;\r\n  function _onOk(result) {\r\n    if (_onOkCallBack) {\r\n      _onOkCallBack(result);\r\n    }\r\n  }\r\n  let _onServerErrorCallBack;\r\n  function _onServerError(result) {\r\n    if (_onServerErrorCallBack) {\r\n      _onServerErrorCallBack(result);\r\n    }\r\n  }\r\n  let _onBadRequestCallBack;\r\n  function _onBadRequest(result) {\r\n    if (_onBadRequestCallBack) {\r\n      _onBadRequestCallBack(result);\r\n    }\r\n  }\r\n  let _unAuthorizedCallBack;\r\n  function _unAuthorized(result) {\r\n    if (_unAuthorizedCallBack) {\r\n      _unAuthorizedCallBack(result);\r\n    }\r\n  }\r\n  let _notFoundCallBack;\r\n  function _notFound(result) {\r\n    if (_notFoundCallBack) {\r\n      _notFoundCallBack(result);\r\n    }\r\n  }\r\n  let _onConnectionErrorCallBack;\r\n  function _onConnectionError(result) {\r\n    if (_onConnectionErrorCallBack) {\r\n      _onConnectionErrorCallBack(result);\r\n    }\r\n  }\r\n  function _call(obj) {\r\n    //const status = rawResponse.status;\r\n    //const result = await rawResponse.json();\r\n\r\n    //\r\n    function addNodeInList(list, node) {\r\n      for (let i = 0; i < list.length; i++) {\r\n        if (list[i].sys.id === node.parentId) {\r\n          if (list[i].children === undefined) {\r\n            list[i].children = [];\r\n          }\r\n          list[i].children.push(node);\r\n        }\r\n        if (list[i].children) addNodeInList(list[i].children, node);\r\n      }\r\n    }\r\n    if (obj.parentId === undefined) {\r\n      data.categories.push(obj);\r\n    } else {\r\n      addNodeInList(data.categories, obj);\r\n    }\r\n    const result = data.categories;\r\n\r\n    const status = 200;\r\n    switch (status) {\r\n      case 200:\r\n        _onOk(result);\r\n        break;\r\n      case 400:\r\n        _onBadRequest();\r\n        break;\r\n      case 401:\r\n        _unAuthorized();\r\n        break;\r\n      case 404:\r\n        _notFound();\r\n        break;\r\n      case 500:\r\n        _onServerError();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  return {\r\n    call: _call,\r\n    onOk: function(callback) {\r\n      _onOkCallBack = callback;\r\n      return this;\r\n    },\r\n    onServerError: function(callback) {\r\n      _onServerErrorCallBack = callback;\r\n      return this;\r\n    },\r\n    onBadRequest: function(callback) {\r\n      _onBadRequestCallBack = callback;\r\n      return this;\r\n    },\r\n    notFound: function(callback) {\r\n      _notFoundCallBack = callback;\r\n      return this;\r\n    },\r\n    unAuthorized: function(callback) {\r\n      _unAuthorizedCallBack = callback;\r\n      return this;\r\n    },\r\n    onConnectionError: function(callback) {\r\n      _onConnectionErrorCallBack = callback;\r\n      return this;\r\n    }\r\n  };\r\n}\r\nexport function updateCategory() {\r\n  let _onOkCallBack;\r\n  function _onOk(result) {\r\n    if (_onOkCallBack) {\r\n      _onOkCallBack(result);\r\n    }\r\n  }\r\n  let _onServerErrorCallBack;\r\n  function _onServerError(result) {\r\n    if (_onServerErrorCallBack) {\r\n      _onServerErrorCallBack(result);\r\n    }\r\n  }\r\n  let _onBadRequestCallBack;\r\n  function _onBadRequest(result) {\r\n    if (_onBadRequestCallBack) {\r\n      _onBadRequestCallBack(result);\r\n    }\r\n  }\r\n  let _unAuthorizedCallBack;\r\n  function _unAuthorized(result) {\r\n    if (_unAuthorizedCallBack) {\r\n      _unAuthorizedCallBack(result);\r\n    }\r\n  }\r\n  let _notFoundCallBack;\r\n  function _notFound(result) {\r\n    if (_notFoundCallBack) {\r\n      _notFoundCallBack(result);\r\n    }\r\n  }\r\n  let _onConnectionErrorCallBack;\r\n  function _onConnectionError(result) {\r\n    if (_onConnectionErrorCallBack) {\r\n      _onConnectionErrorCallBack(result);\r\n    }\r\n  }\r\n  function _call(node) {\r\n    //const status = rawResponse.status;\r\n    //const result = await rawResponse.json();\r\n\r\n    //\r\n\r\n    function updateNodeInList(list, node) {\r\n      for (let i = 0; i < list.length; i++) {\r\n        if (list[i].sys.id === node.sys.id) {\r\n          list[i] = node;\r\n        }\r\n        if (list[i].children) updateNodeInList(list[i].children, node);\r\n      }\r\n    }\r\n    updateNodeInList(data.categories, node);\r\n    const result = data.categories;\r\n\r\n    const status = 200;\r\n    switch (status) {\r\n      case 200:\r\n        _onOk(result);\r\n        break;\r\n      case 400:\r\n        _onBadRequest();\r\n        break;\r\n      case 401:\r\n        _unAuthorized();\r\n        break;\r\n      case 404:\r\n        _notFound();\r\n        break;\r\n      case 500:\r\n        _onServerError();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  return {\r\n    call: _call,\r\n    onOk: function(callback) {\r\n      _onOkCallBack = callback;\r\n      return this;\r\n    },\r\n    onServerError: function(callback) {\r\n      _onServerErrorCallBack = callback;\r\n      return this;\r\n    },\r\n    onBadRequest: function(callback) {\r\n      _onBadRequestCallBack = callback;\r\n      return this;\r\n    },\r\n    notFound: function(callback) {\r\n      _notFoundCallBack = callback;\r\n      return this;\r\n    },\r\n    unAuthorized: function(callback) {\r\n      _unAuthorizedCallBack = callback;\r\n      return this;\r\n    },\r\n    onConnectionError: function(callback) {\r\n      _onConnectionErrorCallBack = callback;\r\n      return this;\r\n    }\r\n  };\r\n}\r\nexport function deleteCategory() {\r\n  let _onOkCallBack;\r\n  function _onOk(result) {\r\n    if (_onOkCallBack) {\r\n      _onOkCallBack(result);\r\n    }\r\n  }\r\n  let _onServerErrorCallBack;\r\n  function _onServerError(result) {\r\n    if (_onServerErrorCallBack) {\r\n      _onServerErrorCallBack(result);\r\n    }\r\n  }\r\n  let _onBadRequestCallBack;\r\n  function _onBadRequest(result) {\r\n    if (_onBadRequestCallBack) {\r\n      _onBadRequestCallBack(result);\r\n    }\r\n  }\r\n  let _unAuthorizedCallBack;\r\n  function _unAuthorized(result) {\r\n    if (_unAuthorizedCallBack) {\r\n      _unAuthorizedCallBack(result);\r\n    }\r\n  }\r\n  let _notFoundCallBack;\r\n  function _notFound(result) {\r\n    if (_notFoundCallBack) {\r\n      _notFoundCallBack(result);\r\n    }\r\n  }\r\n  let _onConnectionErrorCallBack;\r\n  function _onConnectionError(result) {\r\n    if (_onConnectionErrorCallBack) {\r\n      _onConnectionErrorCallBack(result);\r\n    }\r\n  }\r\n  function _call(node) {\r\n    //const status = rawResponse.status;\r\n    //const result = await rawResponse.json();\r\n\r\n    //\r\n    function deleteNodeInList(list, node) {\r\n      for (let i = 0; i < list.length; i++) {\r\n        if (list[i].sys.id === node.sys.id) {\r\n          list.splice(i, 1);\r\n          return;\r\n        }\r\n        if (list[i].children) deleteNodeInList(list[i].children, node);\r\n      }\r\n    }\r\n    deleteNodeInList(data.categories, node);\r\n    const result = data.categories;\r\n\r\n    const status = 200;\r\n    switch (status) {\r\n      case 200:\r\n        _onOk(result);\r\n        break;\r\n      case 400:\r\n        _onBadRequest();\r\n        break;\r\n      case 401:\r\n        _unAuthorized();\r\n        break;\r\n      case 404:\r\n        _notFound();\r\n        break;\r\n      case 500:\r\n        _onServerError();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  return {\r\n    call: _call,\r\n    onOk: function(callback) {\r\n      _onOkCallBack = callback;\r\n      return this;\r\n    },\r\n    onServerError: function(callback) {\r\n      _onServerErrorCallBack = callback;\r\n      return this;\r\n    },\r\n    onBadRequest: function(callback) {\r\n      _onBadRequestCallBack = callback;\r\n      return this;\r\n    },\r\n    notFound: function(callback) {\r\n      _notFoundCallBack = callback;\r\n      return this;\r\n    },\r\n    unAuthorized: function(callback) {\r\n      _unAuthorizedCallBack = callback;\r\n      return this;\r\n    },\r\n    onConnectionError: function(callback) {\r\n      _onConnectionErrorCallBack = callback;\r\n      return this;\r\n    }\r\n  };\r\n}\r\n\r\nexport function addContentTypeToCategory() {\r\n  let _onOkCallBack;\r\n  function _onOk(result) {\r\n    if (_onOkCallBack) {\r\n      _onOkCallBack(result);\r\n    }\r\n  }\r\n  let _onServerErrorCallBack;\r\n  function _onServerError(result) {\r\n    if (_onServerErrorCallBack) {\r\n      _onServerErrorCallBack(result);\r\n    }\r\n  }\r\n  let _onBadRequestCallBack;\r\n  function _onBadRequest(result) {\r\n    if (_onBadRequestCallBack) {\r\n      _onBadRequestCallBack(result);\r\n    }\r\n  }\r\n  let _unAuthorizedCallBack;\r\n  function _unAuthorized(result) {\r\n    if (_unAuthorizedCallBack) {\r\n      _unAuthorizedCallBack(result);\r\n    }\r\n  }\r\n  let _notFoundCallBack;\r\n  function _notFound(result) {\r\n    if (_notFoundCallBack) {\r\n      _notFoundCallBack(result);\r\n    }\r\n  }\r\n  let _onConnectionErrorCallBack;\r\n  function _onConnectionError(result) {\r\n    if (_onConnectionErrorCallBack) {\r\n      _onConnectionErrorCallBack(result);\r\n    }\r\n  }\r\n  function _call(categoryId, contentType) {\r\n    //const status = rawResponse.status;\r\n    //const result = await rawResponse.json();\r\n\r\n    //\r\n    const result = data.categories.map(item => {\r\n      if (item.sys.id === categoryId) {\r\n        let newItem = item;\r\n        if (newItem.itemTypes === undefined) {\r\n          newItem.itemTypes = [];\r\n        }\r\n        newItem.itemTypes.push(contentType);\r\n        return newItem;\r\n      }\r\n      return item;\r\n    });\r\n    data.categories = result;\r\n    const status = 200;\r\n    switch (status) {\r\n      case 200:\r\n        _onOk(result);\r\n        break;\r\n      case 400:\r\n        _onBadRequest();\r\n        break;\r\n      case 401:\r\n        _unAuthorized();\r\n        break;\r\n      case 404:\r\n        _notFound();\r\n        break;\r\n      case 500:\r\n        _onServerError();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  return {\r\n    call: _call,\r\n    onOk: function(callback) {\r\n      _onOkCallBack = callback;\r\n      return this;\r\n    },\r\n    onServerError: function(callback) {\r\n      _onServerErrorCallBack = callback;\r\n      return this;\r\n    },\r\n    onBadRequest: function(callback) {\r\n      _onBadRequestCallBack = callback;\r\n      return this;\r\n    },\r\n    notFound: function(callback) {\r\n      _notFoundCallBack = callback;\r\n      return this;\r\n    },\r\n    unAuthorized: function(callback) {\r\n      _unAuthorizedCallBack = callback;\r\n      return this;\r\n    },\r\n    onConnectionError: function(callback) {\r\n      _onConnectionErrorCallBack = callback;\r\n      return this;\r\n    }\r\n  };\r\n}\r\n\r\nexport function removeContentTypeFromCategory() {\r\n  let _onOkCallBack;\r\n  function _onOk(result) {\r\n    if (_onOkCallBack) {\r\n      _onOkCallBack(result);\r\n    }\r\n  }\r\n  let _onServerErrorCallBack;\r\n  function _onServerError(result) {\r\n    if (_onServerErrorCallBack) {\r\n      _onServerErrorCallBack(result);\r\n    }\r\n  }\r\n  let _onBadRequestCallBack;\r\n  function _onBadRequest(result) {\r\n    if (_onBadRequestCallBack) {\r\n      _onBadRequestCallBack(result);\r\n    }\r\n  }\r\n  let _unAuthorizedCallBack;\r\n  function _unAuthorized(result) {\r\n    if (_unAuthorizedCallBack) {\r\n      _unAuthorizedCallBack(result);\r\n    }\r\n  }\r\n  let _notFoundCallBack;\r\n  function _notFound(result) {\r\n    if (_notFoundCallBack) {\r\n      _notFoundCallBack(result);\r\n    }\r\n  }\r\n  let _onConnectionErrorCallBack;\r\n  function _onConnectionError(result) {\r\n    if (_onConnectionErrorCallBack) {\r\n      _onConnectionErrorCallBack(result);\r\n    }\r\n  }\r\n  function _call(categoryId, contentTypeId) {\r\n    //const status = rawResponse.status;\r\n    //const result = await rawResponse.json();\r\n\r\n    //\r\n    const result = data.categories.map(item => {\r\n      if (item.sys.id === categoryId) {\r\n        const newItem = { ...item };\r\n        const f_s = newItem.itemTypes.filter(f => f.sys.id !== contentTypeId);\r\n        newItem.itemTypes = f_s;\r\n        return newItem;\r\n      }\r\n      return item;\r\n    });\r\n\r\n    data.categories = result;\r\n\r\n    const status = 200;\r\n    switch (status) {\r\n      case 200:\r\n        _onOk(result);\r\n        break;\r\n      case 400:\r\n        _onBadRequest();\r\n        break;\r\n      case 401:\r\n        _unAuthorized();\r\n        break;\r\n      case 404:\r\n        _notFound();\r\n        break;\r\n      case 500:\r\n        _onServerError();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  return {\r\n    call: _call,\r\n    onOk: function(callback) {\r\n      _onOkCallBack = callback;\r\n      return this;\r\n    },\r\n    onServerError: function(callback) {\r\n      _onServerErrorCallBack = callback;\r\n      return this;\r\n    },\r\n    onBadRequest: function(callback) {\r\n      _onBadRequestCallBack = callback;\r\n      return this;\r\n    },\r\n    notFound: function(callback) {\r\n      _notFoundCallBack = callback;\r\n      return this;\r\n    },\r\n    unAuthorized: function(callback) {\r\n      _unAuthorizedCallBack = callback;\r\n      return this;\r\n    },\r\n    onConnectionError: function(callback) {\r\n      _onConnectionErrorCallBack = callback;\r\n      return this;\r\n    }\r\n  };\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Modal, ModalBody, ModalHeader } from \"reactstrap\";\r\nimport { languageManager } from \"../../../../services\";\r\nimport { getContentTypes } from \"./../../../../Api/contentType-api\";\r\nimport {\r\n  addContentTypeToCategory,\r\n  removeContentTypeFromCategory\r\n} from \"./../../../../Api/category-api\";\r\nimport \"./styles.scss\";\r\n\r\nconst AddNewField = props => {\r\n  const currentLang = languageManager.getCurrentLanguage().name;\r\n  const { selectedCategory } = props;\r\n  let items = props.itemTypes ? props.itemTypes : [];\r\n  let data = props.data;\r\n  const [allData, setData] = useState([]);\r\n  const [isOpen, toggleModal] = useState(true);\r\n  useEffect(() => {\r\n    getContentTypes()\r\n      .onOk(result => {\r\n        let d = result.slice();\r\n        for (let j = 0; j < items.length; j++) {\r\n          for (let i = 0; i < d.length; i++) {\r\n            if (items[j].id === d[i].id) {\r\n              d[i].selected = true;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        setData(d);\r\n      })\r\n      .call();\r\n\r\n    return () => {\r\n      allData.map(d => delete d.selected);\r\n      if (!props.isOpen) toggleModal(false);\r\n    };\r\n  }, []);\r\n  function closeModal(params) {\r\n    props.onCloseModal(items);\r\n  }\r\n  function handleChooseItem(event, item) {\r\n    if (event.target.checked) {\r\n      addContentTypeToCategory()\r\n        .onOk(result => {\r\n          props.onAddContentType(result, item);\r\n        })\r\n        .call(selectedCategory.sys.id, item);\r\n    } else {\r\n      removeContentTypeFromCategory()\r\n        .onOk(result => {\r\n          props.onRemoveContentType(result, item);\r\n        })\r\n        .call(selectedCategory.sys.id, item.sys.id);\r\n    }\r\n  }\r\n  return (\r\n    <Modal isOpen={isOpen} toggle={closeModal}>\r\n      <ModalHeader toggle={closeModal}>\r\n        {languageManager.translate(\"CATEGORY_ITEM_TYPE_MODAL_HEADER_TITLE\")}\r\n      </ModalHeader>\r\n      <ModalBody>\r\n        {allData.map(item => (\r\n          <label key={item.id} for={item.id} className=\"itemTypeModal\">\r\n            <div className=\"itemTypeModal-left\">\r\n              <div className=\"itemType-icon\">\r\n                <i className=\"icon-item-type\" />\r\n              </div>\r\n              <div className=\"itemType-center\">\r\n                <span className=\"itemType-title\">\r\n                  {item.title[currentLang]}\r\n                </span>\r\n                <span className=\"itemType-description\">\r\n                  {item.description[currentLang]}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"itemTypeModal-right\">\r\n              <label className=\"switch \">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"primary\"\r\n                  onChange={e => handleChooseItem(e, item)}\r\n                  checked={item.selected}\r\n                  id={item.id}\r\n                />\r\n                <span className=\"slider\" />\r\n              </label>\r\n              {/* <input\r\n                id={item.id}\r\n                type=\"checkbox\"\r\n                onChange={e => handleChooseItem(e, item)}\r\n                checked={item.selected}\r\n              /> */}\r\n            </div>\r\n          </label>\r\n        ))}\r\n      </ModalBody>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddNewField;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input\r\n} from \"reactstrap\";\r\nimport \"./styles.scss\";\r\nimport Tree from \"./tree\";\r\nimport AddNewItemType from \"./modals/AddItemType\";\r\nimport { languageManager, useGlobalState, utility } from \"../../services\";\r\nimport {\r\n  getCategories,\r\n  deleteCategory,\r\n  addCategory,\r\n  updateCategory,\r\n  removeContentTypeFromCategory\r\n} from \"./../../Api/category-api\";\r\n\r\nfunction useInput(defaultValue = \"\") {\r\n  const [input, setInput] = useState(defaultValue);\r\n  function onChange(value) {\r\n    setInput(value);\r\n  }\r\n  return [input, onChange];\r\n}\r\n\r\nconst Categories = props => {\r\n  const { name: pageTitle, desc: pageDescription } = props.component;\r\n  const currentLang = languageManager.getCurrentLanguage().name;\r\n  const [{ categories }, dispatch] = useGlobalState();\r\n\r\n  useEffect(() => {\r\n    getCategories()\r\n      .onOk(result => {\r\n        dispatch({\r\n          type: \"SET_CATEGORIES\",\r\n          value: result\r\n        });\r\n      })\r\n      .call();\r\n  }, []);\r\n\r\n  // variables and handlers\r\n  const newCategoryNameInput = useRef(null);\r\n  const [upsertCategoryModal, setModal] = useState(false);\r\n  const [upsertItemTypeModal, toggleUpsertItemTypeModal] = useState(false);\r\n\r\n  const [name, handleNameChanged] = useInput(\"\");\r\n  const [description, handleDesciptionChanged] = useInput(\"\");\r\n\r\n  const [selectedCategory, setSelectedCategory] = useState();\r\n  const [itemTypes, setItemTypes] = useState([]);\r\n  const [updateMode, setUpdateMode] = useState();\r\n  const [modalHeaderTitle, setModalHeader] = useState(\"\");\r\n  const [modalUpsertBtn, setModalUpsertBtnText] = useState(\"\");\r\n  const [rightContent, toggleRightContent] = useState(false);\r\n  const [isManageCategory, setManageCategory] = useState(false);\r\n\r\n  function initModalForm() {\r\n    handleNameChanged(\"\");\r\n    handleDesciptionChanged(\"\");\r\n  }\r\n  function toggleModal() {\r\n    setModalHeader(\r\n      languageManager.translate(\"CATEGORIES_MODAL_HEADER_TITLE_NEW\")\r\n    );\r\n    setModalUpsertBtnText(\r\n      languageManager.translate(\"CATEGORIES_MODAL_FOOTER_UPSERT_BTN_NEW\")\r\n    );\r\n    setModal(prevModal => !prevModal);\r\n    initModalForm();\r\n  }\r\n\r\n  function closeAddCategoryModal() {\r\n    toggleModal();\r\n    setManageCategory(false);\r\n  }\r\n  function closeRightContent() {\r\n    toggleRightContent(false);\r\n  }\r\n\r\n  function newChildCategory(item) {\r\n    setModal(prevModal => !prevModal);\r\n    setSelectedCategory(item);\r\n    setUpdateMode(false);\r\n    setModalHeader(\r\n      languageManager.translate(\"CATEGORIES_MODAL_HEADER_TITLE_NEW\")\r\n    );\r\n    setModalUpsertBtnText(\r\n      languageManager.translate(\"CATEGORIES_MODAL_FOOTER_UPSERT_BTN_NEW\")\r\n    );\r\n    setTimeout(() => {\r\n      newCategoryNameInput.current.focus();\r\n    }, 1);\r\n    setManageCategory(true);\r\n  }\r\n  function editCategory(item) {\r\n    setModal(prevModal => !prevModal);\r\n    setSelectedCategory(item);\r\n    setUpdateMode(true);\r\n\r\n    handleNameChanged(item.name[currentLang]);\r\n    handleDesciptionChanged(item.description[currentLang]);\r\n\r\n    setModalHeader(\r\n      languageManager.translate(\"CATEGORIES_MODAL_HEADER_TITLE_EDIT\")\r\n    );\r\n    setModalUpsertBtnText(\r\n      languageManager.translate(\"CATEGORIES_MODAL_FOOTER_UPSERT_BTN_EDIT\")\r\n    );\r\n    setManageCategory(true);\r\n  }\r\n  function upsertCategory() {\r\n    if (isManageCategory) {\r\n      if (!updateMode) {\r\n        const obj = {\r\n          sys: {\r\n            id: Math.random(),\r\n            issuer: {\r\n              fullName: \"Saeed Padyab\",\r\n              image: \"\"\r\n            },\r\n            issueDate: \"19/01/2019 20:18\"\r\n          },\r\n          parentId: selectedCategory.sys.id,\r\n          name: utility.applyeLangs(name),\r\n          description: utility.applyeLangs(description),\r\n          type: \"category\"\r\n        };\r\n        addCategory()\r\n          .onOk(result => {\r\n            dispatch({\r\n              type: \"SET_CATEGORIES\",\r\n              value: result\r\n            });\r\n          })\r\n          .call(obj);\r\n        handleNameChanged(\"\");\r\n        handleDesciptionChanged(\"\");\r\n      } else {\r\n        let newCategory = {};\r\n        for (const key in selectedCategory) {\r\n          newCategory[key] = selectedCategory[key];\r\n        }\r\n        newCategory[\"name\"] = utility.applyeLangs(name);\r\n        newCategory[\"description\"] = utility.applyeLangs(description);\r\n        updateCategory()\r\n          .onOk(result => {\r\n            dispatch({\r\n              type: \"SET_CATEGORIES\",\r\n              value: result\r\n            });\r\n            closeAddCategoryModal();\r\n          })\r\n          .call(newCategory);\r\n      }\r\n    } else {\r\n      const obj = {\r\n        sys: {\r\n          id: Math.random(),\r\n          issuer: {\r\n            fullName: \"Saeed Padyab\",\r\n            image: \"\"\r\n          },\r\n          issueDate: \"19/01/2019 20:18\"\r\n        },\r\n        name: utility.applyeLangs(name),\r\n        description: utility.applyeLangs(description),\r\n        type: \"category\"\r\n      };\r\n      addCategory()\r\n        .onOk(result => {\r\n          dispatch({\r\n            type: \"SET_CATEGORIES\",\r\n            value: result\r\n          });\r\n        })\r\n        .call(obj);\r\n      initModalForm();\r\n    }\r\n  }\r\n\r\n  function removeCategoryItem(selected) {\r\n    deleteCategory()\r\n      .onOk(result => {\r\n        dispatch({\r\n          type: \"SET_CATEGORIES\",\r\n          value: result\r\n        });\r\n      })\r\n      .call(selected);\r\n  }\r\n\r\n  // field\r\n  function showItemTypes(category) {\r\n    if (!rightContent) toggleRightContent(true);\r\n    setSelectedCategory(category);\r\n    let m = [];\r\n    if (category.itemTypes !== undefined) m = category.itemTypes;\r\n    setItemTypes(m);\r\n    setManageCategory(false);\r\n  }\r\n  function closeAddItemTypeModal() {\r\n    toggleUpsertItemTypeModal(false);\r\n  }\r\n  function addNewItemType() {\r\n    toggleUpsertItemTypeModal(prevModal => !prevModal);\r\n  }\r\n  function removeContentType(item) {\r\n    removeContentTypeFromCategory()\r\n      .onOk(result => {\r\n        handleRemoveContenType(result, item);\r\n      })\r\n      .call(selectedCategory.sys.id, item.sys.id);\r\n  }\r\n  function handleRemoveContenType(result, itemType) {\r\n    const m = itemTypes.filter(item => item.sys.id !== itemType.sys.id);\r\n    setItemTypes(m);\r\n    dispatch({\r\n      type: \"SET_CATEGORIES\",\r\n      value: result\r\n    });\r\n  }\r\n  function handleAddContenType(result, itemType) {\r\n    let m = [...itemTypes];\r\n    m.push(itemType);\r\n    setItemTypes(m);\r\n    dispatch({\r\n      type: \"SET_CATEGORIES\",\r\n      value: result\r\n    });\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"c-wrapper\">\r\n        <div className=\"c-header\">\r\n          <div className=\"c-header-left\">\r\n            <span className=\"c-header-title\">{pageTitle}</span>\r\n            <span className=\"c-header-description\">{pageDescription}</span>\r\n          </div>\r\n          <div className=\"c-header-right\">\r\n            <button className=\"btn btn-primary\" onClick={toggleModal}>\r\n              {languageManager.translate(\"CATEGORIES_NEW_CATEGORY_BTN\")}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"c-content\">\r\n          <div className=\"c-content-left\">\r\n            <Tree\r\n              rightContent={rightContent}\r\n              data={categories}\r\n              handleNewCategory={selected => newChildCategory(selected)}\r\n              handleEditCategory={selected => editCategory(selected)}\r\n              handleDeleteCategory={selected => removeCategoryItem(selected)}\r\n              handleItemTypes={selected => showItemTypes(selected)}\r\n            />\r\n          </div>\r\n          {rightContent && (\r\n            <div className=\"c-content-right animated slideInRight faster\">\r\n              <div className=\"c-content-right-header\">\r\n                <span className=\"c-right-header-title\">\r\n                  {languageManager.translate(\r\n                    \"CATEGORIES_ITEM_TYPES_HEADER_TITLE\"\r\n                  )}\r\n                </span>\r\n                <span className=\"c-right-header-description\">\r\n                  {languageManager.translate(\r\n                    \"CATEGORIES_ITEM_TYPES_HEADER_DESC\"\r\n                  )}\r\n                </span>\r\n                <span\r\n                  className=\"icon-cross closeIcon\"\r\n                  onClick={closeRightContent}\r\n                />\r\n              </div>\r\n              <div className=\"c-content-right-body\">\r\n                <div className=\"fieldsContent\">\r\n                  {itemTypes &&\r\n                    itemTypes.map(item => (\r\n                      <div className=\"fieldItem\" key={item.sys.id}>\r\n                        <div className=\"fieldItem-icon\">\r\n                          <i className=\"icon-more-h\" />\r\n                        </div>\r\n                        <div className=\"fieldItem-type\">\r\n                          <i className=\"icon-item-type\" />\r\n                        </div>\r\n                        <div className=\"fieldItem-name\">\r\n                          {item.title[currentLang]}\r\n                        </div>\r\n                        <div className=\"fieldItem-title\">\r\n                          {item.description[currentLang]}\r\n                        </div>\r\n                        <div\r\n                          className=\"fieldItem-actions\"\r\n                          onClick={() => removeContentType(item)}\r\n                        >\r\n                          <button className=\"btn btn-link\" size=\"xs\">\r\n                            <i className=\"icon-bin\" />\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"btnNewFieldContent\">\r\n                  <button className=\"btn btn-primary\" onClick={addNewItemType}>\r\n                    <i className=\"icon-plus\" />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <Modal isOpen={upsertCategoryModal} toggle={closeAddCategoryModal}>\r\n        <ModalHeader toggle={closeAddCategoryModal}>\r\n          {modalHeaderTitle}\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <div className=\"c-category-modal-body\">\r\n            <Form>\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  {languageManager.translate(\"CATEGORIES_MODAL_NAME\")}\r\n                </label>\r\n                <input\r\n                  ref={newCategoryNameInput}\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder={languageManager.translate(\r\n                    \"CATEGORIES_MODAL_NAME_PLACEHOLDER\"\r\n                  )}\r\n                  value={name}\r\n                  required\r\n                  onChange={e => handleNameChanged(e.target.value)}\r\n                />\r\n                <small className=\"form-text text-muted\">\r\n                  {languageManager.translate(\r\n                    \"CATEGORIES_MODAL_NAME_DESCRIPTION\"\r\n                  )}\r\n                </small>\r\n              </div>\r\n              <FormGroup>\r\n                <Label for=\"exampleEmail\">\r\n                  {languageManager.translate(\"CATEGORIES_MODAL_DESCRIPTION\")}\r\n                </Label>\r\n                <Input\r\n                  type=\"string\"\r\n                  placeholder={languageManager.translate(\r\n                    \"CATEGORIES_MODAL_DESCRIPTION_PLACEHOLDER\"\r\n                  )}\r\n                  value={description}\r\n                  onChange={e => handleDesciptionChanged(e.target.value)}\r\n                />\r\n                {/* <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                  {languageManager.translate(\r\n                    \"CATEGORIES_MODAL_DESCRIPTION_DESC\"\r\n                  )}\r\n                </small> */}\r\n              </FormGroup>\r\n            </Form>\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            onClick={() => upsertCategory(selectedCategory)}\r\n            disabled={name.length > 0 ? false : true}\r\n          >\r\n            {modalUpsertBtn}\r\n          </Button>\r\n          <Button color=\"secondary\" onClick={closeAddCategoryModal}>\r\n            {languageManager.translate(\"CANCEL\")}\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n      {upsertItemTypeModal && (\r\n        <AddNewItemType\r\n          selectedCategory={selectedCategory}\r\n          itemTypes={itemTypes}\r\n          isOpen={upsertItemTypeModal}\r\n          onCloseModal={closeAddItemTypeModal}\r\n          onAddContentType={handleAddContenType}\r\n          onRemoveContentType={handleRemoveContenType}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { ListGroup, ListGroupItem } from \"reactstrap\";\r\nimport { languageManager } from \"../../../services\";\r\n\r\nconst List = props => {\r\n  const currentLang = languageManager.getCurrentLanguage().name;\r\n  const [selected, setSelected] = useState({});\r\n  useEffect(() => {\r\n    if (!props.rightContent) {\r\n      setSelected({});\r\n    }\r\n  }, [props.rightContent]);\r\n  return (\r\n    <ListGroup>\r\n      {props.data &&\r\n        props.data.map(listItem => (\r\n          <ListGroupItem\r\n            key={listItem.sys.id}\r\n            className=\"listGroupItem\"\r\n            style={{\r\n              backgroundColor: selected.sys\r\n                ? selected.sys.id === listItem.sys.id\r\n                  ? \"lightgray\"\r\n                  : \"white\"\r\n                : \"white\"\r\n            }}\r\n          >\r\n            <div className=\"treeItem\">\r\n              <button\r\n                className=\"btn btn-primary btn-sm\"\r\n                color=\"primary\"\r\n                style={{ marginRight: 15 }}\r\n              >\r\n                <i className=\"icon-item-type\" />\r\n              </button>\r\n              <div className=\"treeItem-text\">\r\n                <span className=\"treeItem-name\">\r\n                  {listItem.title[currentLang]}\r\n                </span>\r\n                <span className=\"treeItem-desc\">\r\n                  {listItem.description[currentLang] ||\r\n                    \"Lorem ipsum dolor sit amet, consectetur\"}\r\n                </span>\r\n              </div>\r\n              {listItem.template !== \"generic\" && (\r\n                <>\r\n                  <button\r\n                    className=\"btn btn-light treeItem-action\"\r\n                    size=\"xs\"\r\n                    onClick={() => props.handleDeleteType(listItem)}\r\n                  >\r\n                    <i className=\"icon-bin\" />\r\n                  </button>\r\n                  <button\r\n                    className=\"btn btn-light treeItem-action\"\r\n                    size=\"xs\"\r\n                    onClick={() => props.handleEditType(listItem)}\r\n                  >\r\n                    <i className=\"icon-pencil\" />\r\n                  </button>\r\n                </>\r\n              )}\r\n              <button\r\n                className=\"btn btn-light treeItem-action\"\r\n                size=\"xs\"\r\n                onClick={() => {\r\n                  setSelected(listItem);\r\n                  props.handleShowFields(listItem);\r\n                }}\r\n              >\r\n                <span style={{ fontSize: 12 }}>\r\n                  {languageManager.translate(\"ITEM_TYPES_FIELDS\")}\r\n                </span>\r\n              </button>\r\n            </div>\r\n          </ListGroupItem>\r\n        ))}\r\n    </ListGroup>\r\n  );\r\n};\r\nexport default List;\r\n","import React from \"react\";\r\nimport \"./styles.scss\";\r\nconst CheckBox = props => {\r\n  return (\r\n    <label className=\"checkBox\">\r\n      {props.title}\r\n      <input type=\"checkbox\" {...props} />\r\n      <span className=\"checkmark\" />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default CheckBox;\r\n","import React, { memo } from \"react\";\r\nimport \"./styles.css\";\r\nconst Divider = ({ children, ...props }) => {\r\n  return <div className=\"hr-sect\">{children}</div>;\r\n};\r\n\r\nexport default memo(Divider);\r\n","import React, { useState } from \"react\";\r\nimport \"./styles.scss\";\r\nimport { languageManager } from \"./../../services\";\r\n\r\nconst BooleanComponent = props => {\r\n  const currentLang = languageManager.getCurrentLanguage().name;\r\n  const { field } = props;\r\n  if (field.appearance === \"checkbox\") {\r\n    return (\r\n      <div className=\"form-check\">\r\n        <input\r\n          className=\"form-check-input\"\r\n          type=\"checkbox\"\r\n          value=\"\"\r\n          id={\"chk\" + field.id}\r\n        />\r\n        <label className=\"form-check-label\" for={\"chk\" + field.id}>\r\n          {field.title[currentLang]}\r\n        </label>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"form-check\">\r\n        <input\r\n          className=\"form-check-input\"\r\n          type=\"checkbox\"\r\n          value=\"\"\r\n          id={\"chk\" + field.id}\r\n        />\r\n        <label className=\"form-check-label\" for={\"chk\" + field.id}>\r\n          {field.title[currentLang]}\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default BooleanComponent;\r\n","import React, { useState } from \"react\";\r\nimport \"./styles.scss\";\r\nimport { languageManager } from \"./../../services\";\r\n\r\nconst DateTimeInput = props => {\r\n    const currentLang = languageManager.getCurrentLanguage().name;\r\n  const { field } = props;\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label>{field.title[currentLang]}</label>\r\n      <textarea\r\n        type=\"datetime\"\r\n        className=\"form-control up-form-stringInput-textArea\"\r\n        placeholder={field.title[currentLang]}\r\n\r\n      />\r\n      <small className=\"form-text text-muted\">{field.description[currentLang]}</small>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DateTimeInput;\r\n","import React, { useState } from \"react\";\r\nimport \"./styles.scss\";\r\nimport { languageManager } from \"./../../services\";\r\n\r\nconst KeyValueInput = props => {\r\n    const currentLang = languageManager.getCurrentLanguage().name;\r\n  const { field } = props;\r\n  if (field.appearance === \"combo\") {\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label>{field.title[currentLang]}</label>\r\n        <select className=\"form-control\">\r\n          {field.options &&\r\n            field.options.map(option => (\r\n              <option value={option.key}>{option.value}</option>\r\n            ))}\r\n        </select>\r\n        <small className=\"form-text text-muted\">{field.description[currentLang]}</small>\r\n      </div>\r\n    );\r\n  } else if (field.appearance === \"radioGroup\") {\r\n    return (\r\n      <>\r\n        <label>{field.title[currentLang]}</label>\r\n        <div className=\"up-form-keyvalue-radio\">\r\n          {field.options.map(option => (\r\n            <div class=\"form-check\">\r\n              <input\r\n                class=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"exampleRadios\"\r\n                id={\"radio\" + option.key}\r\n                value={option.key}\r\n              />\r\n              <label class=\"form-check-label\" for={\"radio\" + option.key}>\r\n                {option.value}\r\n              </label>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label>{field.title[currentLang]}</label>\r\n        <select className=\"form-control\">\r\n          {field.options &&\r\n            field.options.map(option => (\r\n              <option value={option.key}>{option.value}</option>\r\n            ))}\r\n        </select>\r\n        <small className=\"form-text text-muted\">{field.description[currentLang]}</small>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default KeyValueInput;\r\n","import React, { useState } from \"react\";\r\nimport \"./styles.scss\";\r\n\r\nconst LocationInput = props => {\r\n    return <div />;\r\n}\r\n\r\nexport default LocationInput;","import React, { useState, useEffect } from \"react\";\r\nimport \"./styles.scss\";\r\nimport { languageManager, utility } from \"../../services\";\r\n\r\nconst MediaInput = props => {\r\n  const currentLang = languageManager.getCurrentLanguage().name;\r\n  const { field, formData } = props;\r\n  const [files, setFiles] = useState(() => {\r\n    if (formData[field.name]) {\r\n      if (field.isList) {\r\n        return formData[field.name];\r\n      } else {\r\n        if (field.isTranslate) {\r\n          let fs = [];\r\n          fs.push({ url: formData[field.name][currentLang] });\r\n          return fs;\r\n        } else {\r\n          let fs = [];\r\n          fs.push({ url: formData[field.name][currentLang] });\r\n          return fs;\r\n        }\r\n      }\r\n    }\r\n    return [];\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (\r\n      props.init &&\r\n      field.isRequired !== undefined &&\r\n      field.isRequired &&\r\n      !props.reset\r\n    ) {\r\n      if (formData[field.name] === undefined) props.init(field.name);\r\n    }\r\n\r\n    if (props.reset) {\r\n      setFiles([]);\r\n    }\r\n  }, [props.reset]);\r\n\r\n  function handleChange(event) {\r\n    const obj = {\r\n      id: Math.random(),\r\n      url: URL.createObjectURL(event.target.files[0]),\r\n      name: event.target.files[0].name,\r\n      fileType: event.target.files[0].type\r\n    };\r\n    if (field.isList !== undefined && field.isList) {\r\n      let fs = [...files];\r\n      fs.push(obj);\r\n      setFiles(fs);\r\n      props.onChangeValue(field.name, fs, true);\r\n    } else {\r\n      let fs = [...files];\r\n      fs[0] = obj;\r\n      setFiles(fs);\r\n\r\n      let f, l;\r\n      if (field.isTranslate) {\r\n        l = utility.applyeLangs(fs[0].url);\r\n        f = { ...fs[0], ...l };\r\n      }\r\n      props.onChangeValue(field.name, f, true);\r\n    }\r\n  }\r\n\r\n  function removeFile(f) {\r\n    const fs = files.filter(file => file.id !== f.id);\r\n    setFiles(fs);\r\n\r\n    if (field.isRequired) {\r\n      if (field.isList !== undefined && field.isList) {\r\n        if (fs.length === 0) props.onChangeValue(field.name, fs, false);\r\n        else props.onChangeValue(field.name, fs, true);\r\n      } else {\r\n        if (fs.length === 0) {\r\n          let img;\r\n          if (field.isTranslate) {\r\n            img = utility.applyeLangs(\"\");\r\n            props.onChangeValue(field.name, img, false);\r\n          } else props.onChangeValue(field.name, \"\", false);\r\n        }\r\n      }\r\n    } else {\r\n      props.onChangeValue(field.name, fs, true);\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"up-uploader\">\r\n      <span className=\"title\">{field.title[currentLang]}</span>\r\n      <span className=\"description\">{field.description[currentLang]}</span>\r\n\r\n      <div className=\"files\">\r\n        {files.map(file => (\r\n          <div key={file.id} className=\"files-uploaded\">\r\n            <div\r\n              className=\"files-uploaded-icon\"\r\n              onClick={() => removeFile(file)}\r\n            >\r\n              <i className=\"icon-bin\" />\r\n            </div>\r\n            {field.mediaType === \"file\" ? (\r\n              <div className=\"updatedFileType\">\r\n                <i className=\"icon-file-plus-o\" />\r\n              </div>\r\n            ) : field.mediaType === \"image\" ? (\r\n              <img src={file.url} alt=\"\" />\r\n            ) : (\r\n              <div className=\"updatedFileType\">\r\n                <i className=\"icon-file-plus-o\" />\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n        <div className=\"files-input\">\r\n          <input type=\"file\" className=\"btn\" onChange={handleChange} />\r\n          {field.mediaType === \"file\" ? (\r\n            <i className=\"icon-file-plus-o\" />\r\n          ) : field.mediaType === \"image\" ? (\r\n            <i className=\"icon-camera\" />\r\n          ) : (\r\n            <i className=\"icon-file-plus-o\" />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MediaInput;\r\n","import React, { useState } from \"react\";\r\nimport \"./styles.scss\";\r\nimport { languageManager } from \"../../services\";\r\n\r\nconst NumberInput = props => {\r\n  const currentLang = languageManager.getCurrentLanguage().name;\r\n\r\n  const { field } = props;\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label>{field.title[currentLang]}</label>\r\n      <input type=\"number\" className=\"form-control\" placeholder={field.title} />\r\n      <small className=\"form-text text-muted\">\r\n        {field.description[currentLang]}\r\n      </small>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NumberInput;\r\n","import React, { useState } from \"react\";\r\nimport \"./styles.scss\";\r\nimport { languageManager } from \"../../services\";\r\n\r\nconst RichTextInput = props => {\r\n  const currentLang = languageManager.getCurrentLanguage().name;\r\n  const { field } = props;\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label>{field.title[currentLang]}</label>\r\n      <textarea\r\n        type=\"text\"\r\n        className=\"form-control up-form-richtext-textArea\"\r\n        placeholder={field.title}\r\n      />\r\n      <small className=\"form-text text-muted\">\r\n        {field.description[currentLang]}\r\n      </small>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RichTextInput;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./styles.scss\";\r\nimport { languageManager, utility } from \"../../services\";\r\n\r\nconst StringInput = props => {\r\n  const currentLang = languageManager.getCurrentLanguage().name;\r\n\r\n  const { field, formData } = props;\r\n  // چک کن ببین فرم دیتا با این اسم فیلد مقدار داره یا نه . الان فقط رو یه اینپوت ست کردم باید رو تک تک اینپوت های زبان ها ست بشه\r\n  const value = props.formData[field.name]\r\n    ? field.isTranslate\r\n      ? props.formData[field.name][currentLang]\r\n      : props.formData[field.name]\r\n    : \"\";\r\n  const [input, setInput] = useState(value);\r\n  if (\r\n    props.init &&\r\n    field.isRequired !== undefined &&\r\n    field.isRequired &&\r\n    !props.reset\r\n  ) {\r\n    if (formData[field.name] === undefined) props.init(field.name);\r\n  }\r\n\r\n  useEffect(() => {\r\n    props.formData[field.name]\r\n      ? field.isTranslate\r\n        ? setInput(props.formData[field.name][currentLang])\r\n        : setInput(props.formData[field.name])\r\n      : setInput(\"\");\r\n    if (props.reset && input.length > 0) setInput(\"\");\r\n  }, [props.reset, formData]);\r\n  function handleOnChange(e) {\r\n    setInput(e.target.value);\r\n\r\n    let value;\r\n    if (field.isTranslate) value = utility.applyeLangs(e.target.value);\r\n    else value = e.target.value;\r\n\r\n    if (field.isRequired) {\r\n      let isValid = false;\r\n      if (e.target.value.length > 0) {\r\n        isValid = true;\r\n      }\r\n      props.onChangeValue(field.name, value, isValid);\r\n    } else props.onChangeValue(field.name, value, true);\r\n  }\r\n  if (field.isMultiLine !== undefined && field.isMultiLine) {\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label>{field.title[currentLang]}</label>\r\n        <textarea\r\n          type=\"text\"\r\n          className=\"form-control up-form-stringInput-textArea\"\r\n          placeholder={field.title[currentLang]}\r\n          value={input}\r\n          onChange={handleOnChange}\r\n        />\r\n        <small className=\"form-text text-muted\">\r\n          {field.description[currentLang]}\r\n        </small>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label>{field.title[currentLang]}</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder={field.title[currentLang]}\r\n          value={input}\r\n          onChange={handleOnChange}\r\n        />\r\n        <small className=\"form-text text-muted\">\r\n          {field.description[currentLang]}\r\n        </small>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default StringInput;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./styles.scss\";\r\nimport { languageManager, utility } from \"../../services\";\r\n\r\nconst FileUploaderInput = props => {\r\n  const currentLang = languageManager.getCurrentLanguage().name;\r\n  const { field, formData } = props;\r\n  const [files, setFiles] = useState(() => {\r\n    if (formData[field.name]) {\r\n      if (field.isList) {\r\n        return formData[field.name];\r\n      } else {\r\n        if (field.isTranslate) {\r\n          let fs = [];\r\n          fs.push({ url: formData[field.name][currentLang] });\r\n          return fs;\r\n        } else {\r\n          let fs = [];\r\n          fs.push({ url: formData[field.name][currentLang] });\r\n          return fs;\r\n        }\r\n      }\r\n    }\r\n    return [];\r\n  });\r\n\r\n  if (\r\n    props.init &&\r\n    field.isRequired !== undefined &&\r\n    field.isRequired &&\r\n    !props.reset\r\n  ) {\r\n    if (formData[field.name] === undefined) props.init(field.name);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (formData[field.name]) {\r\n      if (field.isList) {\r\n        setFiles(formData[field.name]);\r\n      } else {\r\n        if (field.isTranslate) {\r\n          let fs = [];\r\n          fs.push({\r\n            url: formData[field.name][currentLang],\r\n            fileType: formData[\"fileType\"]\r\n          });\r\n          setFiles(fs);\r\n        } else {\r\n          let fs = [];\r\n          fs.push({ url: formData[field.name] });\r\n          setFiles(fs);\r\n        }\r\n      }\r\n    }\r\n    if (props.reset && files.length > 0) {\r\n      setFiles([]);\r\n    }\r\n  }, [props.reset, formData]);\r\n\r\n  function handleChange(event) {\r\n    debugger\r\n    const obj = {\r\n      id: Math.random(),\r\n      url: URL.createObjectURL(event.target.files[0]),\r\n      name: event.target.files[0].name,\r\n      fileType: event.target.files[0].type\r\n    };\r\n    if (field.isList !== undefined && field.isList) {\r\n      let fs = [...files];\r\n      fs.push(obj);\r\n      setFiles(fs);\r\n      props.onChangeValue(field.name, fs, true);\r\n    } else {\r\n      let fs = [...files];\r\n      fs[0] = obj;\r\n      setFiles(fs);\r\n\r\n      let f, l;\r\n      if (field.isTranslate) {\r\n        l = utility.applyeLangs(fs[0].url);\r\n        f = { ...fs[0], ...l };\r\n      }\r\n      props.onChangeValue(field.name, f, true);\r\n    }\r\n  }\r\n\r\n  function removeFile(f) {\r\n    const fs = files.filter(file => file.id !== f.id);\r\n    setFiles(fs);\r\n\r\n    if (field.isRequired) {\r\n      if (field.isList !== undefined && field.isList) {\r\n        if (fs.length === 0) props.onChangeValue(field.name, fs, false);\r\n        else props.onChangeValue(field.name, fs, true);\r\n      } else {\r\n        if (fs.length === 0) {\r\n          let img;\r\n          if (field.isTranslate) {\r\n            img = utility.applyeLangs(\"\");\r\n            props.onChangeValue(field.name, img, false);\r\n          } else props.onChangeValue(field.name, \"\", false);\r\n        }\r\n      }\r\n    } else {\r\n      props.onChangeValue(field.name, fs, true);\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"up-uploader\">\r\n      <span className=\"title\">{field.title[currentLang]}</span>\r\n      <span className=\"description\">{field.description[currentLang]}</span>\r\n\r\n      <div className=\"files\">\r\n        {files.map(file => (\r\n          <div key={file.id} className=\"files-uploaded\">\r\n            <div\r\n              className=\"files-uploaded-icon\"\r\n              onClick={() => removeFile(file)}\r\n            >\r\n              <i className=\"icon-bin\" />\r\n            </div>\r\n            <div className=\"updatedFileType\">\r\n              {file.fileType.toLowerCase().includes(\"image\") ? (\r\n                <img src={file.url} alt=\"\" />\r\n              ) : file.fileType.toLowerCase().includes(\"video\") ? (\r\n                <i className=\"icon-video\" />\r\n              ) : file.fileType.toLowerCase().includes(\"audio\") ? (\r\n                <i className=\"icon-audio\" />\r\n              ) : file.fileType.toLowerCase().includes(\"pdf\") ? (\r\n                <i className=\"icon-pdf\" />\r\n              ) : file.fileType.toLowerCase().includes(\"spreadsheet\") ? (\r\n                <i className=\"icon-spreadsheet\" />\r\n              ) : (\r\n                <i className=\"icon-folder\" />\r\n              )}\r\n            </div>\r\n          </div>\r\n        ))}\r\n        <div className=\"files-input\">\r\n          <input type=\"file\" className=\"btn\" onChange={handleChange} />\r\n          {field.mediaType === \"file\" ? (\r\n            <i className=\"icon-file-plus-o\" />\r\n          ) : field.mediaType === \"image\" ? (\r\n            <i className=\"icon-camera\" />\r\n          ) : (\r\n            <i className=\"icon-file-plus-o\" />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUploaderInput;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input\r\n} from \"reactstrap\";\r\nimport { languageManager, utility, useGlobalState } from \"../../../../services\";\r\nimport { CheckBox } from \"./../../../../components\";\r\nimport { addFieldToContentType } from \"./../../../../Api/contentType-api\";\r\nimport \"./styles.scss\";\r\nconst fields = [\r\n  {\r\n    name: \"string\",\r\n    title: languageManager.translate(\"FIELD_TYPE_TEXT\"),\r\n    description: languageManager.translate(\"FIELD_TYPE_TEXT_INFO\"),\r\n    icon: \"icon-file-text\"\r\n  },\r\n  {\r\n    name: \"number\",\r\n    title: languageManager.translate(\"FIELD_TYPE_NUMBER\"),\r\n    description: languageManager.translate(\"FIELD_TYPE_NUMBER_INFO\"),\r\n    icon: \"icon-number\"\r\n  },\r\n  {\r\n    name: \"dateTime\",\r\n    title: languageManager.translate(\"FIELD_TYPE_DATE_TIME\"),\r\n    description: languageManager.translate(\"FIELD_TYPE_DATE_TIME_INFO\"),\r\n    icon: \"icon-calendar\"\r\n  },\r\n  {\r\n    name: \"location\",\r\n    title: languageManager.translate(\"FIELD_TYPE_LOCATION\"),\r\n    description: languageManager.translate(\"FIELD_TYPE_LOCATION_INFO\"),\r\n    icon: \"icon-location\"\r\n  },\r\n  {\r\n    name: \"media\",\r\n    title: languageManager.translate(\"FIELD_TYPE_MEDIA\"),\r\n    description: languageManager.translate(\"FIELD_TYPE_MEDIA_INFO\"),\r\n    icon: \"icon-images\"\r\n  },\r\n  {\r\n    name: \"boolean\",\r\n    title: languageManager.translate(\"FIELD_TYPE_BOOLEAN\"),\r\n    description: languageManager.translate(\"FIELD_TYPE_BOOLEAN_INFO\"),\r\n    icon: \"icon-boolean\"\r\n  },\r\n  {\r\n    name: \"keyValue\",\r\n    title: languageManager.translate(\"FIELD_TYPE_KEY_VALUE\"),\r\n    description: languageManager.translate(\"FIELD_TYPE_KEY_VALUE_INFO\"),\r\n    icon: \"icon-combo-box\"\r\n  },\r\n  {\r\n    name: \"richText\",\r\n    title: languageManager.translate(\"FIELD_TYPE_RICH_TEXT\"),\r\n    description: languageManager.translate(\"FIELD_TYPE_RICH_TEXT_INFO\"),\r\n    icon: \"icon-file-text-o\"\r\n  }\r\n  // {\r\n  //   name: \"jsonObject\",\r\n  //   title: languageManager.translate(\"FIELD_TYPE_OBJECT\"),\r\n  //   description: languageManager.translate(\"FIELD_TYPE_OBJECT_INFO\"),\r\n  //   icon: \"icon-json-file\"\r\n  // },\r\n  // {\r\n  //   name: \"reference\",\r\n  //   title: languageManager.translate(\"FIELD_TYPE_REFERENCE\"),\r\n  //   description: languageManager.translate(\"FIELD_TYPE_REFERENCE_INFO\"),\r\n  //   icon: \"icon-reference\"\r\n  // }\r\n];\r\n\r\nconst AddNewField = props => {\r\n  const [{}, dispatch] = useGlobalState();\r\n  const { selectedContentType } = props;\r\n\r\n  const [isOpen, toggleModal] = useState(true);\r\n  const nameInput = useRef(null); //  ref is defined here\r\n  const [tab, changeTab] = useState(1);\r\n  const [newFieldHeaderTitle, setAddFieldHeaderTitle] = useState(\r\n    languageManager.translate(\"CONTENT_TYPE_ADD_FIELD_TITLE\")\r\n  );\r\n  const [selectedField, setField] = useState({});\r\n  const [name, setName] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [translation, toggleTranslation] = useState(false);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (!props.isOpen) toggleModal(false);\r\n    };\r\n  });\r\n  function closeAddFieldModal(params) {\r\n    props.onCloseModal();\r\n  }\r\n  function handleChooseField(field) {\r\n    changeTab(2);\r\n    setField(field);\r\n    const title =\r\n      languageManager.translate(\"CONTENT_TYPE_ADD_FIELD_CHOOSEN\") +\r\n      \" \" +\r\n      field.title;\r\n    setAddFieldHeaderTitle(title);\r\n    //nameInput.current.focus(); // focus after changing tab on first input\r\n  }\r\n  function backToFields(params) {\r\n    const title = languageManager.translate(\"CONTENT_TYPE_ADD_FIELD_CHOOSEN\");\r\n    setAddFieldHeaderTitle(title);\r\n    changeTab(1);\r\n  }\r\n  function handleNameChanged(e) {\r\n    setName(e.target.value);\r\n  }\r\n  function handleTitleChanged(e) {\r\n    setTitle(e.target.value);\r\n  }\r\n  function handleDescriptionChanged(e) {\r\n    setDescription(e.target.value);\r\n  }\r\n  function resetForm() {\r\n    setName(\"\");\r\n    setTitle(\"\");\r\n    setDescription(\"\");\r\n  }\r\n\r\n  function addField() {\r\n    const obj = {\r\n      id: Math.random().toString(),\r\n      name: name,\r\n      title: utility.applyeLangs(title),\r\n      description: utility.applyeLangs(description),\r\n      type: selectedField.name,\r\n      isTranslate: translation\r\n    };\r\n    addFieldToContentType()\r\n      .onOk(result => {\r\n        // dispatch({\r\n        //   type: \"SET_CONTENT_TYPES\",\r\n        //   value: result\r\n        // });\r\n        props.onCloseModal(obj);\r\n      })\r\n      .call(selectedContentType.sys.id, obj);\r\n  }\r\n  function addField_configure() {}\r\n  return (\r\n    <Modal isOpen={isOpen} toggle={closeAddFieldModal} size=\"lg\">\r\n      <ModalHeader toggle={closeAddFieldModal}>\r\n        {newFieldHeaderTitle}\r\n      </ModalHeader>\r\n      <ModalBody>\r\n        <div className=\"c-category-addField-body\">\r\n          {tab === 1 ? (\r\n            <div className=\"fieldsTab\">\r\n              {fields.map(field => (\r\n                <div\r\n                  key={field.icon}\r\n                  className=\"add-field-types\"\r\n                  onClick={() => handleChooseField(field)}\r\n                >\r\n                  <div className=\"add-field-icon\">\r\n                    <i className={field.icon} />\r\n                  </div>\r\n                  <span className=\"title\">{field.title}</span>\r\n                  <span className=\"description\">{field.description}</span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <Form className=\"formTab\">\r\n              <div className=\"row\">\r\n                <div className=\"form-group col\">\r\n                  <label>\r\n                    {languageManager.translate(\r\n                      \"CONTENT_TYPE_ADD_FIELD_MODAL_NAME\"\r\n                    )}\r\n                  </label>\r\n                  <input\r\n                    ref={nameInput} // using ref\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder={languageManager.translate(\r\n                      \"CONTENT_TYPE_ADD_FIELD_MODAL_NAME_PLACEHOLDER\"\r\n                    )}\r\n                    value={name}\r\n                    required\r\n                    onChange={handleNameChanged}\r\n                  />\r\n                  <small className=\"form-text text-muted\">\r\n                    {languageManager.translate(\r\n                      \"CONTENT_TYPE_ADD_FIELD_MODAL_NAME_INFO\"\r\n                    )}\r\n                  </small>\r\n                </div>\r\n\r\n                <FormGroup className=\"col\">\r\n                  <Label>\r\n                    {languageManager.translate(\r\n                      \"CONTENT_TYPE_ADD_FIELD_MODAL_TITLE\"\r\n                    )}\r\n                  </Label>\r\n                  <Input\r\n                    type=\"string\"\r\n                    value={title}\r\n                    placeholder={languageManager.translate(\r\n                      \"CONTENT_TYPE_ADD_FIELD_MODAL_TITLE_PLACEHOLDER\"\r\n                    )}\r\n                    onChange={handleTitleChanged}\r\n                  />\r\n                  <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                    {languageManager.translate(\r\n                      \"CONTENT_TYPE_ADD_FIELD_MODAL_TITLE_INFO\"\r\n                    )}\r\n                  </small>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"formTab-row\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    {languageManager.translate(\r\n                      \"CONTENT_TYPE_ADD_FIELD_MODAL_DESCRIPTION\"\r\n                    )}\r\n                  </Label>\r\n                  <Input\r\n                    type=\"string\"\r\n                    value={description}\r\n                    placeholder={languageManager.translate(\r\n                      \"CONTENT_TYPE_ADD_FIELD_MODAL_DESCRIPTION_PLACEHOLDER\"\r\n                    )}\r\n                    onChange={handleDescriptionChanged}\r\n                  />\r\n                  <small className=\"form-text text-muted\">\r\n                    {languageManager.translate(\r\n                      \"CONTENT_TYPE_ADD_FIELD_MODAL_DESCRIPTION_INFO\"\r\n                    )}\r\n                  </small>\r\n                </FormGroup>\r\n\r\n                <CheckBox\r\n                  title=\"Enable Local Translation\"\r\n                  onChange={e => toggleTranslation(e.target.checked)}\r\n                />\r\n              </div>\r\n            </Form>\r\n          )}\r\n        </div>\r\n      </ModalBody>\r\n      {tab !== 1 ? (\r\n        <ModalFooter>\r\n          <Button\r\n            color=\"primary\"\r\n            onClick={addField}\r\n            disabled={\r\n              name.length > 0 && title.length > 0 && !name.includes(\" \")\r\n                ? false\r\n                : true\r\n            }\r\n          >\r\n            {languageManager.translate(\r\n              \"CONTENT_TYPE_ADD_FIELD_MODAL_CREATE_BTN\"\r\n            )}\r\n          </Button>\r\n          {/* <Button\r\n            color=\"primary\"\r\n            onClick={addField_configure}\r\n            disabled={\r\n              name.length > 0 && title.length > 0 && !name.includes(\" \")\r\n                ? false\r\n                : true\r\n            }\r\n          >\r\n            {languageManager.translate(\r\n              \"CONTENT_TYPE_ADD_FIELD_MODAL_CREATE_CONFIG_BTN\"\r\n            )}\r\n          </Button> */}\r\n          <Button color=\"secondary\" onClick={backToFields}>\r\n            {languageManager.translate(\r\n              \"CONTENT_TYPE_ADD_FIELD_MODAL_CHNAGE_FIELD_BTN\"\r\n            )}\r\n          </Button>\r\n        </ModalFooter>\r\n      ) : (\r\n        undefined\r\n      )}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddNewField;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input\r\n} from \"reactstrap\";\r\nimport { languageManager, utility, useGlobalState } from \"../../../../services\";\r\nimport {\r\n  addContentType,\r\n  updateContentType\r\n} from \"./../../../../Api/contentType-api\";\r\nimport \"./styles.scss\";\r\n\r\nconst templates = [\r\n  {\r\n    id: \"1\",\r\n    name: \"dataCollection\",\r\n    title: \"Data Collection\",\r\n    description: \"Create an item type with custom fields\",\r\n    icon: \"\",\r\n    fields: [\r\n      {\r\n        id: \"1\",\r\n        name: \"name\",\r\n        title: {\r\n          en: \"Name\",\r\n          fa: \"Name\"\r\n        },\r\n        description: {\r\n          fa: \"name of each product\",\r\n          en: \"name of each product\"\r\n        },\r\n        type: \"string\",\r\n        isBase: true,\r\n        isTranslate: true,\r\n        isRequired: true\r\n      },\r\n      {\r\n        id: \"2\",\r\n        name: \"shortDesc\",\r\n        title: {\r\n          fa: \"Short Description\",\r\n          en: \"Short Description\"\r\n        },\r\n        description: {\r\n          fa: \"\",\r\n          en: \"\"\r\n        },\r\n        type: \"string\",\r\n        isBase: true,\r\n        isTranslate: true\r\n      },\r\n      {\r\n        id: \"3\",\r\n        name: \"thumbnail\",\r\n        title: {\r\n          fa: \"Thumbnail\",\r\n          en: \"Thumbnail\"\r\n        },\r\n        description: {\r\n          fa: \"\",\r\n          en: \"\"\r\n        },\r\n        type: \"media\",\r\n        isBase: true,\r\n        isTranslate: true,\r\n        isRequired: true\r\n      }\r\n    ],\r\n    allowCustomFields: true\r\n  },\r\n  {\r\n    id: \"2\",\r\n    name: \"content\",\r\n    title: \"Content\",\r\n    description: \"it does not allow you to have custom fields\",\r\n    icon: \"\",\r\n    fields: [\r\n      {\r\n        id: \"1\",\r\n        name: \"name\",\r\n        title: {\r\n          en: \"Name\",\r\n          fa: \"Name\"\r\n        },\r\n        description: {\r\n          fa: \"name of each product\",\r\n          en: \"name of each product\"\r\n        },\r\n        type: \"string\",\r\n        isBase: true,\r\n        isTranslate: true,\r\n        isRequired: true\r\n      },\r\n      {\r\n        id: \"2\",\r\n        name: \"shortDesc\",\r\n        title: {\r\n          fa: \"Short Description\",\r\n          en: \"Short Description\"\r\n        },\r\n        description: {\r\n          fa: \"\",\r\n          en: \"\"\r\n        },\r\n        type: \"string\",\r\n        isBase: true,\r\n        isTranslate: true\r\n      },\r\n      {\r\n        id: \"3\",\r\n        name: \"thumbnail\",\r\n        title: {\r\n          fa: \"Thumbnail\",\r\n          en: \"Thumbnail\"\r\n        },\r\n        description: {\r\n          fa: \"\",\r\n          en: \"\"\r\n        },\r\n        type: \"media\",\r\n        isBase: true,\r\n        isTranslate: true,\r\n        isRequired: true\r\n      },\r\n      {\r\n        id: Math.random(),\r\n        name: \"body\",\r\n        title: \"Body\",\r\n        description: \"\",\r\n        type: \"richText\",\r\n        isBase: true\r\n      }\r\n    ],\r\n    allowCustomFields: true\r\n  },\r\n  {\r\n    id: \"3\",\r\n    name: \"gallery\",\r\n    title: \"Gallery\",\r\n    description: \"Making custom gallery data\",\r\n    icon: \"icon-images\",\r\n    fields: [\r\n      {\r\n        id: \"1\",\r\n        name: \"name\",\r\n        title: {\r\n          en: \"Name\",\r\n          fa: \"Name\"\r\n        },\r\n        description: {\r\n          fa: \"name of each product\",\r\n          en: \"name of each product\"\r\n        },\r\n        type: \"string\",\r\n        isBase: true,\r\n        isTranslate: true,\r\n        isRequired: true\r\n      },\r\n      {\r\n        id: \"2\",\r\n        name: \"shortDesc\",\r\n        title: {\r\n          fa: \"Short Description\",\r\n          en: \"Short Description\"\r\n        },\r\n        description: {\r\n          fa: \"\",\r\n          en: \"\"\r\n        },\r\n        type: \"string\",\r\n        isBase: true,\r\n        isTranslate: true\r\n      },\r\n      {\r\n        id: \"3\",\r\n        name: \"thumbnail\",\r\n        title: {\r\n          fa: \"Thumbnail\",\r\n          en: \"Thumbnail\"\r\n        },\r\n        description: {\r\n          fa: \"\",\r\n          en: \"\"\r\n        },\r\n        type: \"media\",\r\n        isBase: true,\r\n        isTranslate: true,\r\n        isRequired: true\r\n      },\r\n      {\r\n        id: Math.random(),\r\n        name: \"images\",\r\n        title: \"Images\",\r\n        description: \"\",\r\n        type: \"media\",\r\n        isList: true,\r\n        isBase: true\r\n      }\r\n    ],\r\n    allowCustomFields: true\r\n  }\r\n];\r\n\r\nconst UpsertTemplate = props => {\r\n  const currentLang = languageManager.getCurrentLanguage().name;\r\n  const [{}, dispatch] = useGlobalState();\r\n  const { updateMode } = props;\r\n  const submitBtnText = !updateMode\r\n    ? languageManager.translate(\"CONTENT_TYPE_MODAL_FOOTER_UPSERT_BTN_NEW\")\r\n    : languageManager.translate(\"CONTENT_TYPE_MODAL_FOOTER_UPSERT_BTN_EDIT\");\r\n\r\n  const selectedContentType = updateMode ? props.selectedContentType : undefined;\r\n  const [isOpen, toggleModal] = useState(true);\r\n\r\n  const [modalHeaderTitle, setModalHeader] = useState(\r\n    !updateMode\r\n      ? languageManager.translate(\"CONTENT_TYPE_MODAL_HEADER_TITLE_NEW\")\r\n      : languageManager.translate(\"CONTENT_TYPE_MODAL_HEADER_TITLE_EDIT\")\r\n  );\r\n\r\n  const [tab, changeTab] = useState(updateMode ? 2 : 1);\r\n  const [newFieldHeaderTitle, setAddFieldHeaderTitle] = useState(\r\n    languageManager.translate(\"CONTENT_TYPE_ADD_FIELD_TITLE\")\r\n  );\r\n  const [selectedTemplate, setTemplate] = useState(\r\n    updateMode ? props.selectedTemplate : {}\r\n  );\r\n  const [name, setName] = useState(\r\n    selectedContentType ? selectedContentType.name : \"\"\r\n  );\r\n  const [title, setTitle] = useState(\r\n    selectedContentType ? selectedContentType.title[currentLang] : \"\"\r\n  );\r\n  const [description, setDescription] = useState(\r\n    selectedContentType ? selectedContentType.description[currentLang] : \"\"\r\n  );\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (!props.isOpen) toggleModal(false);\r\n    };\r\n  }, []);\r\n\r\n  function closeModal() {\r\n    props.onCloseModal();\r\n  }\r\n  function handleChooseTemplate(tmp) {\r\n    changeTab(2);\r\n    setTemplate(tmp);\r\n    const title =\r\n      languageManager.translate(\"CONTENT_TYPE_ADD_FIELD_CHOOSEN\") +\r\n      \" \" +\r\n      tmp.name;\r\n    setAddFieldHeaderTitle(title);\r\n  }\r\n  function backToTemplates() {\r\n    const title = languageManager.translate(\"CONTENT_TYPE_ADD_FIELD_CHOOSEN\");\r\n    setAddFieldHeaderTitle(title);\r\n    changeTab(1);\r\n  }\r\n  function handleNameChanged(e) {\r\n    setName(e.target.value);\r\n  }\r\n  function handleTitleChanged(e) {\r\n    setTitle(e.target.value);\r\n  }\r\n  function handleDescriptionChanged(e) {\r\n    setDescription(e.target.value);\r\n  }\r\n\r\n  function upsertItemType() {\r\n    if (updateMode) {\r\n      let obj = {};\r\n      for (const key in selectedContentType) {\r\n        obj[key] = selectedContentType[key];\r\n      }\r\n      obj[\"name\"] = name;\r\n      obj[\"title\"] = utility.applyeLangs(title);\r\n      obj[\"description\"] = utility.applyeLangs(description);\r\n\r\n      updateContentType()\r\n        .onOk(result => {\r\n          dispatch({\r\n            type: \"SET_CONTENT_TYPES\",\r\n            value: result\r\n          });\r\n          props.onCloseModal(obj);\r\n        })\r\n        .call(obj);\r\n    } else {\r\n      let obj = {\r\n        sys: {\r\n          id: Math.random(),\r\n          issuer: {\r\n            fullName: \"Saeed Padyab\",\r\n            image: \"\"\r\n          },\r\n          issueDate: \"19/01/2019 20:18\"\r\n        },\r\n        name: name,\r\n        title: utility.applyeLangs(title),\r\n        description: utility.applyeLangs(description),\r\n        fields: selectedTemplate.fields,\r\n        type: \"contentType\",\r\n        template: selectedTemplate.name,\r\n        allowCustomFields: selectedTemplate.allowCustomFields\r\n      };\r\n      addContentType()\r\n        .onOk(result => {\r\n          dispatch({\r\n            type: \"SET_CONTENT_TYPES\",\r\n            value: result\r\n          });\r\n          props.onCloseModal(obj);\r\n        })\r\n        .call(obj);\r\n    }\r\n\r\n    // const obj = {\r\n    //   selectedTemplate: selectedTemplate,\r\n    //   name: name,\r\n    //   title: utility.applyeLangs(title),\r\n    //   description: utility.applyeLangs(description)\r\n    // };\r\n  }\r\n  return (\r\n    <Modal isOpen={isOpen} toggle={closeModal} size=\"lg\">\r\n      <ModalHeader toggle={closeModal}>{modalHeaderTitle}</ModalHeader>\r\n      <ModalBody>\r\n        <div className=\"c-category-templates-body\">\r\n          {tab === 1 ? (\r\n            <div className=\"fieldsTab\">\r\n              {templates.map(tmp => (\r\n                <div\r\n                  key={tmp.id}\r\n                  className=\"add-field-types\"\r\n                  onClick={() => handleChooseTemplate(tmp)}\r\n                >\r\n                  <div\r\n                    className=\"add-field-icon\"\r\n                    style={{\r\n                      backgroundColor:\r\n                        selectedContentType &&\r\n                        selectedContentType.template === tmp.name\r\n                          ? \"lightgray\"\r\n                          : \"whitesmoke\"\r\n                    }}\r\n                  >\r\n                    <i className={tmp.icon || \"icon-item-type\"} />\r\n                  </div>\r\n                  <span className=\"title\">{tmp.title}</span>\r\n                  <span className=\"description\">{tmp.description}</span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <Form>\r\n              <div className=\"row\">\r\n                <div className=\"form-group col\">\r\n                  <label>\r\n                    {languageManager.translate(\"CONTENT_TYPE_MODAL_NAME\")}\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder={languageManager.translate(\r\n                      \"CONTENT_TYPE_MODAL_NAME_PLACEHOLDER\"\r\n                    )}\r\n                    value={name}\r\n                    required\r\n                    onChange={handleNameChanged}\r\n                  />\r\n                  <small className=\"form-text text-muted\">\r\n                    {languageManager.translate(\r\n                      \"CONTENT_TYPE_MODAL_NAME_DESCRIPTION\"\r\n                    )}\r\n                  </small>\r\n                </div>\r\n\r\n                <FormGroup className=\"col\">\r\n                  <Label>\r\n                    {languageManager.translate(\r\n                      \"CONTENT_TYPE_ADD_FIELD_MODAL_TITLE\"\r\n                    )}\r\n                  </Label>\r\n                  <Input\r\n                    type=\"string\"\r\n                    value={title}\r\n                    placeholder={languageManager.translate(\r\n                      \"CONTENT_TYPE_ADD_FIELD_MODAL_TITLE_PLACEHOLDER\"\r\n                    )}\r\n                    onChange={handleTitleChanged}\r\n                  />\r\n                  <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                    {languageManager.translate(\r\n                      \"CONTENT_TYPE_ADD_FIELD_MODAL_TITLE_INFO\"\r\n                    )}\r\n                  </small>\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <FormGroup>\r\n                <Label>\r\n                  {languageManager.translate(\"CONTENT_TYPE_MODAL_DESCRIPTION\")}\r\n                </Label>\r\n                <Input\r\n                  type=\"string\"\r\n                  placeholder={languageManager.translate(\r\n                    \"CONTENT_TYPE_MODAL_DESCRIPTION_PLACEHOLDER\"\r\n                  )}\r\n                  value={description}\r\n                  onChange={handleDescriptionChanged}\r\n                />\r\n              </FormGroup>\r\n            </Form>\r\n          )}\r\n        </div>\r\n      </ModalBody>\r\n      {tab !== 1 ? (\r\n        <ModalFooter>\r\n          <Button\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            onClick={upsertItemType}\r\n            disabled={\r\n              name.length > 0 && title.length > 0 && !name.includes(\" \")\r\n                ? false\r\n                : true\r\n            }\r\n          >\r\n            {submitBtnText}\r\n          </Button>\r\n          {!updateMode && (\r\n            <Button color=\"secondary\" onClick={backToTemplates}>\r\n              Templates\r\n            </Button>\r\n          )}\r\n        </ModalFooter>\r\n      ) : (\r\n        undefined\r\n      )}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default UpsertTemplate;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./styles.scss\";\r\nimport List from \"./list\";\r\nimport AddNewField from \"./modals/AddNewField\";\r\nimport AddNewItemType from \"./modals/AddNewItemType\";\r\nimport { languageManager, useGlobalState } from \"../../services\";\r\nimport {\r\n  getContentTypes,\r\n  deleteContentType,\r\n  removeContentTypeField\r\n} from \"./../../Api/contentType-api\";\r\n\r\nconst ItemTypes = props => {\r\n  const currentLang = languageManager.getCurrentLanguage().name;\r\n\r\n  const [{ contentTypes }, dispatch] = useGlobalState();\r\n\r\n  useEffect(() => {\r\n    getContentTypes()\r\n      .onOk(result => {\r\n        dispatch({\r\n          type: \"SET_CONTENT_TYPES\",\r\n          value: result\r\n        });\r\n      })\r\n      .call();\r\n  }, []);\r\n\r\n  const { name: pageTitle, desc: pageDescription } = props.component;\r\n  // variables and handlers\r\n  const [upsertFieldModal, toggleUpsertFieldModal] = useState(false);\r\n  const [upsertItemTypeModal, toggleUpserItemTypeModal] = useState(false);\r\n  const [selectedContentType, setItemType] = useState({});\r\n  debugger\r\n  const [fields, setFields] = useState([]);\r\n  const [updateMode, setUpdateMode] = useState();\r\n\r\n  const [rightContent, toggleRightContent] = useState(false);\r\n\r\n  function openAddItemTypeModal() {\r\n    setUpdateMode(false);\r\n    toggleUpserItemTypeModal(true);\r\n  }\r\n\r\n  function editItemType(item) {\r\n    setItemType(item);\r\n    setUpdateMode(true);\r\n    toggleUpserItemTypeModal(true);\r\n  }\r\n\r\n  function removeItemType(selected) {\r\n    deleteContentType()\r\n      .onOk(result => {\r\n        if (selected.sys.id === selectedContentType.sys.id)\r\n          toggleRightContent(false);\r\n        dispatch({\r\n          type: \"SET_CONTENT_TYPES\",\r\n          value: result\r\n        });\r\n      })\r\n      .call(selected);\r\n  }\r\n  function closeRightContent() {\r\n    toggleRightContent();\r\n  }\r\n\r\n  /////////////////////////////// fields\r\n  function showFields(item) {\r\n    if (!rightContent) toggleRightContent(true);\r\n    setItemType(item);\r\n    setFields(item.fields);\r\n  }\r\n  function closeAddFieldModal(field) {\r\n    if (field) {\r\n      const f = [...fields];\r\n      f.push(field);\r\n      setFields(f);\r\n    }\r\n    // dispatch({\r\n    //   type: \"SET_CONTENT_TYPES\",\r\n    //   value: result\r\n    // });\r\n    toggleUpsertFieldModal(false);\r\n  }\r\n  function addNewField() {\r\n    toggleUpsertFieldModal(prevModal => !prevModal);\r\n  }\r\n  function handleRemoveField(field) {\r\n    removeContentTypeField()\r\n      .onOk(result => {\r\n        const f = [...fields].filter(item => item.id !== field.id);\r\n        setFields(f);\r\n        // dispatch({\r\n        //   type: \"SET_CONTENT_TYPES\",\r\n        //   value: result\r\n        // });\r\n      })\r\n      .call(selectedContentType.sys.id, field.id);\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"ct-wrapper\">\r\n        <div className=\"ct-header\">\r\n          <div className=\"ct-header-left\">\r\n            <span className=\"ct-header-title\">{pageTitle}</span>\r\n            <span className=\"ct-header-description\">{pageDescription}</span>\r\n          </div>\r\n          <div className=\"ct-header-right\">\r\n            <button className=\"btn btn-primary\" onClick={openAddItemTypeModal}>\r\n              {languageManager.translate(\"CONTENT_TYPE_NEW_ITEM_BTN\")}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"ct-content\">\r\n          <div className=\"ct-content-left\">\r\n            <List\r\n              rightContent={rightContent}\r\n              data={contentTypes}\r\n              handleEditType={selected => editItemType(selected)}\r\n              handleDeleteType={selected => removeItemType(selected)}\r\n              handleShowFields={selected => showFields(selected)}\r\n            />\r\n          </div>\r\n          {rightContent && (\r\n            <div className=\"ct-content-right animated slideInRight faster\">\r\n              <div className=\"ct-content-right-header\">\r\n                <span className=\"ct-right-header-title\">\r\n                  {languageManager.translate(\"CONTENT_TYPE_MODEL_HEADER_TITLE\")}\r\n                </span>\r\n                <span className=\"ct-right-header-description\">\r\n                  {languageManager.translate(\"CONTENT_TYPE_MODEL_HEADER_DESC\")}\r\n                </span>\r\n                <span\r\n                  className=\"icon-cross closeIcon\"\r\n                  onClick={closeRightContent}\r\n                />\r\n              </div>\r\n              <div className=\"ct-content-right-body\">\r\n                <div className=\"fieldsContent\">\r\n                  {/* <SortableContainer onSortEnd={onSortEnd}>\r\n                    {fields.map((value, index) => (\r\n                      <SortableItem\r\n                        key={`item-${index}`}\r\n                        index={index}\r\n                        field={value}\r\n                      />\r\n                    ))}\r\n                  </SortableContainer> */}\r\n                  {fields &&\r\n                    fields.map(field => (\r\n                      <div\r\n                        className=\"fieldItem\"\r\n                        key={field.id}\r\n                        // style={{\r\n                        //   display: !selectedContentType.allowCustomFields\r\n                        //     ? field.isBase\r\n                        //       ? \"none\"\r\n                        //       : \"flex\"\r\n                        //     : \"flex\"\r\n                        // }}\r\n                      >\r\n                        <div className=\"fieldItem-icon\">\r\n                          <i className=\"icon-more-h\" />\r\n                        </div>\r\n                        <div className=\"fieldItem-type\">\r\n                          <i\r\n                            className={\r\n                              field.type === \"string\"\r\n                                ? \"icon-file-text\"\r\n                                : field.type === \"number\"\r\n                                ? \"icon-number\"\r\n                                : field.type === \"dateTime\"\r\n                                ? \"icon-calendar\"\r\n                                : field.type === \"location\"\r\n                                ? \"icon-location\"\r\n                                : field.type === \"media\"\r\n                                ? \"icon-images\"\r\n                                : field.type === \"jsonObject\"\r\n                                ? \"icon-json-file\"\r\n                                : field.type === \"reference\"\r\n                                ? \"icon-reference\"\r\n                                : field.type === \"boolean\"\r\n                                ? \"icon-boolean\"\r\n                                : \"icon-file-text\"\r\n                            }\r\n                          />\r\n                        </div>\r\n                        <div className=\"fieldItem-name\">{field.name}</div>\r\n                        <div className=\"fieldItem-title\">\r\n                          {field.title[currentLang]}\r\n                        </div>\r\n\r\n                        <div className=\"fieldItem-actions\">\r\n                          {field.isBase === undefined || !field.isBase ? (\r\n                            <>\r\n                              <button\r\n                                className=\"btn btn-link\"\r\n                                size=\"xs\"\r\n                                onClick={() => handleRemoveField(field)}\r\n                              >\r\n                                <i className=\"icon-bin\" />\r\n                              </button>\r\n                              <button className=\"btn btn-link\" size=\"xs\">\r\n                                Settings\r\n                              </button>\r\n                            </>\r\n                          ) : (\r\n                            // <span className=\"badge badge-danger label-nonEditable\">\r\n                            //   Non-editable\r\n                            // </span>\r\n                            <div />\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"btnNewFieldContent\">\r\n                  {selectedContentType.allowCustomFields && (\r\n                    <button className=\"btn btn-primary\" onClick={addNewField}>\r\n                      <i className=\"icon-plus\" />\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {upsertItemTypeModal && (\r\n        <AddNewItemType\r\n          selectedContentType={selectedContentType}\r\n          updateMode={updateMode}\r\n          isOpen={upsertFieldModal}\r\n          onCloseModal={() => toggleUpserItemTypeModal(false)}\r\n        />\r\n      )}\r\n      {upsertFieldModal && (\r\n        <AddNewField\r\n          selectedContentType={selectedContentType}\r\n          isOpen={upsertFieldModal}\r\n          onCloseModal={closeAddFieldModal}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ItemTypes;\r\n","import React from \"react\";\r\nimport \"./styles.scss\";\r\nconst ManageUsers = props => {\r\n  const { name: pageTitle, desc: pageDescription } = props.component;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"c-wrapper\">\r\n        <div className=\"c-header\">\r\n          <div className=\"c-header-left\">\r\n            <span className=\"c-header-title\">{pageTitle}</span>\r\n            <span className=\"c-header-description\">{pageDescription}</span>\r\n          </div>\r\n          <div className=\"c-header-right\" />\r\n        </div>\r\n        <div className=\"c-content\">\r\n          <div className=\"c-content-left\">\r\n          </div>\r\n          <div className=\"c-content-right\" />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ManageUsers;\r\n","import { languageManager, useGlobalState } from \"./../../services\";\r\nconst currentLang = languageManager.getCurrentLanguage().name;\r\nconst data = require(\"./../data.json\");\r\n\r\nexport function filterContents() {\r\n  let _onOkCallBack;\r\n  function _onOk(result) {\r\n    if (_onOkCallBack) {\r\n      _onOkCallBack(result);\r\n    }\r\n  }\r\n  let _onServerErrorCallBack;\r\n  function _onServerError(result) {\r\n    if (_onServerErrorCallBack) {\r\n      _onServerErrorCallBack(result);\r\n    }\r\n  }\r\n  let _onBadRequestCallBack;\r\n  function _onBadRequest(result) {\r\n    if (_onBadRequestCallBack) {\r\n      _onBadRequestCallBack(result);\r\n    }\r\n  }\r\n  let _unAuthorizedCallBack;\r\n  function _unAuthorized(result) {\r\n    if (_unAuthorizedCallBack) {\r\n      _unAuthorizedCallBack(result);\r\n    }\r\n  }\r\n  let _notFoundCallBack;\r\n  function _notFound(result) {\r\n    if (_notFoundCallBack) {\r\n      _notFoundCallBack(result);\r\n    }\r\n  }\r\n  let _onConnectionErrorCallBack;\r\n  function _onConnectionError(result) {\r\n    if (_onConnectionErrorCallBack) {\r\n      _onConnectionErrorCallBack(result);\r\n    }\r\n  }\r\n  function _call(name, contentType, category) {\r\n    const f_data = data.contents.filter(item => {\r\n      if (name && name.length > 0) {\r\n        if (!item.fields.name[currentLang].toLowerCase().includes(name))\r\n          return false;\r\n      }\r\n      if (contentType) {\r\n        if (item.contentType.id !== contentType) return false;\r\n      }\r\n      if (category) {\r\n        if (item.category.id !== category) return false;\r\n      }\r\n\r\n      return true;\r\n    });\r\n    _onOk(f_data);\r\n  }\r\n\r\n  return {\r\n    call: _call,\r\n    onOk: function(callback) {\r\n      _onOkCallBack = callback;\r\n      return this;\r\n    },\r\n    onServerError: function(callback) {\r\n      _onServerErrorCallBack = callback;\r\n      return this;\r\n    },\r\n    onBadRequest: function(callback) {\r\n      _onBadRequestCallBack = callback;\r\n      return this;\r\n    },\r\n    notFound: function(callback) {\r\n      _notFoundCallBack = callback;\r\n      return this;\r\n    },\r\n    unAuthorized: function(callback) {\r\n      _unAuthorizedCallBack = callback;\r\n      return this;\r\n    },\r\n    onConnectionError: function(callback) {\r\n      _onConnectionErrorCallBack = callback;\r\n      return this;\r\n    }\r\n  };\r\n}\r\n\r\nexport function getContents() {\r\n  let _onOkCallBack;\r\n  function _onOk(result) {\r\n    if (_onOkCallBack) {\r\n      _onOkCallBack(result);\r\n    }\r\n  }\r\n  let _onServerErrorCallBack;\r\n  function _onServerError(result) {\r\n    if (_onServerErrorCallBack) {\r\n      _onServerErrorCallBack(result);\r\n    }\r\n  }\r\n  let _onBadRequestCallBack;\r\n  function _onBadRequest(result) {\r\n    if (_onBadRequestCallBack) {\r\n      _onBadRequestCallBack(result);\r\n    }\r\n  }\r\n  let _unAuthorizedCallBack;\r\n  function _unAuthorized(result) {\r\n    if (_unAuthorizedCallBack) {\r\n      _unAuthorizedCallBack(result);\r\n    }\r\n  }\r\n  let _notFoundCallBack;\r\n  function _notFound(result) {\r\n    if (_notFoundCallBack) {\r\n      _notFoundCallBack(result);\r\n    }\r\n  }\r\n  let _onConnectionErrorCallBack;\r\n  function _onConnectionError(result) {\r\n    if (_onConnectionErrorCallBack) {\r\n      _onConnectionErrorCallBack(result);\r\n    }\r\n  }\r\n  function _call(name, contentType, category) {\r\n    //const status = rawResponse.status;\r\n    //const result = await rawResponse.json();\r\n    const result = data.contents;\r\n    const status = 200;\r\n    switch (status) {\r\n      case 200:\r\n        _onOk(result);\r\n        break;\r\n      case 400:\r\n        _onBadRequest(result);\r\n        break;\r\n      case 401:\r\n        _unAuthorized(result);\r\n        break;\r\n      case 404:\r\n        _notFound(result);\r\n        break;\r\n      case 500:\r\n        _onServerError(result);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  return {\r\n    call: _call,\r\n    onOk: function(callback) {\r\n      _onOkCallBack = callback;\r\n      return this;\r\n    },\r\n    onServerError: function(callback) {\r\n      _onServerErrorCallBack = callback;\r\n      return this;\r\n    },\r\n    onBadRequest: function(callback) {\r\n      _onBadRequestCallBack = callback;\r\n      return this;\r\n    },\r\n    notFound: function(callback) {\r\n      _notFoundCallBack = callback;\r\n      return this;\r\n    },\r\n    unAuthorized: function(callback) {\r\n      _unAuthorizedCallBack = callback;\r\n      return this;\r\n    },\r\n    onConnectionError: function(callback) {\r\n      _onConnectionErrorCallBack = callback;\r\n      return this;\r\n    }\r\n  };\r\n}\r\n\r\nexport function addContent() {\r\n  let _onOkCallBack;\r\n  function _onOk(result) {\r\n    if (_onOkCallBack) {\r\n      _onOkCallBack(result);\r\n    }\r\n  }\r\n  let _onServerErrorCallBack;\r\n  function _onServerError(result) {\r\n    if (_onServerErrorCallBack) {\r\n      _onServerErrorCallBack(result);\r\n    }\r\n  }\r\n  let _onBadRequestCallBack;\r\n  function _onBadRequest(result) {\r\n    if (_onBadRequestCallBack) {\r\n      _onBadRequestCallBack(result);\r\n    }\r\n  }\r\n  let _unAuthorizedCallBack;\r\n  function _unAuthorized(result) {\r\n    if (_unAuthorizedCallBack) {\r\n      _unAuthorizedCallBack(result);\r\n    }\r\n  }\r\n  let _notFoundCallBack;\r\n  function _notFound(result) {\r\n    if (_notFoundCallBack) {\r\n      _notFoundCallBack(result);\r\n    }\r\n  }\r\n  let _onConnectionErrorCallBack;\r\n  function _onConnectionError(result) {\r\n    if (_onConnectionErrorCallBack) {\r\n      _onConnectionErrorCallBack(result);\r\n    }\r\n  }\r\n  function _call(obj) {\r\n    //const status = rawResponse.status;\r\n    //const result = await rawResponse.json();\r\n\r\n    //\r\n\r\n    data.contents.push(obj);\r\n\r\n    const status = 200;\r\n    switch (status) {\r\n      case 200:\r\n        _onOk();\r\n        break;\r\n      case 400:\r\n        _onBadRequest();\r\n        break;\r\n      case 401:\r\n        _unAuthorized();\r\n        break;\r\n      case 404:\r\n        _notFound();\r\n        break;\r\n      case 500:\r\n        _onServerError();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  return {\r\n    call: _call,\r\n    onOk: function(callback) {\r\n      _onOkCallBack = callback;\r\n      return this;\r\n    },\r\n    onServerError: function(callback) {\r\n      _onServerErrorCallBack = callback;\r\n      return this;\r\n    },\r\n    onBadRequest: function(callback) {\r\n      _onBadRequestCallBack = callback;\r\n      return this;\r\n    },\r\n    notFound: function(callback) {\r\n      _notFoundCallBack = callback;\r\n      return this;\r\n    },\r\n    unAuthorized: function(callback) {\r\n      _unAuthorizedCallBack = callback;\r\n      return this;\r\n    },\r\n    onConnectionError: function(callback) {\r\n      _onConnectionErrorCallBack = callback;\r\n      return this;\r\n    }\r\n  };\r\n}\r\nexport function updateContent() {\r\n  let _onOkCallBack;\r\n  function _onOk(result) {\r\n    if (_onOkCallBack) {\r\n      _onOkCallBack(result);\r\n    }\r\n  }\r\n  let _onServerErrorCallBack;\r\n  function _onServerError(result) {\r\n    if (_onServerErrorCallBack) {\r\n      _onServerErrorCallBack(result);\r\n    }\r\n  }\r\n  let _onBadRequestCallBack;\r\n  function _onBadRequest(result) {\r\n    if (_onBadRequestCallBack) {\r\n      _onBadRequestCallBack(result);\r\n    }\r\n  }\r\n  let _unAuthorizedCallBack;\r\n  function _unAuthorized(result) {\r\n    if (_unAuthorizedCallBack) {\r\n      _unAuthorizedCallBack(result);\r\n    }\r\n  }\r\n  let _notFoundCallBack;\r\n  function _notFound(result) {\r\n    if (_notFoundCallBack) {\r\n      _notFoundCallBack(result);\r\n    }\r\n  }\r\n  let _onConnectionErrorCallBack;\r\n  function _onConnectionError(result) {\r\n    if (_onConnectionErrorCallBack) {\r\n      _onConnectionErrorCallBack(result);\r\n    }\r\n  }\r\n  function _call(obj) {\r\n    //const status = rawResponse.status;\r\n    //const result = await rawResponse.json();\r\n\r\n    //\r\n\r\n    const result = data.contents.map(item => {\r\n      if (item.sys.id === obj.sys.id) {\r\n        return { ...item, ...obj };\r\n      }\r\n      return item;\r\n    });\r\n    data.contents = result;\r\n\r\n    const status = 200;\r\n    switch (status) {\r\n      case 200:\r\n        _onOk(result);\r\n        break;\r\n      case 400:\r\n        _onBadRequest();\r\n        break;\r\n      case 401:\r\n        _unAuthorized();\r\n        break;\r\n      case 404:\r\n        _notFound();\r\n        break;\r\n      case 500:\r\n        _onServerError();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  return {\r\n    call: _call,\r\n    onOk: function(callback) {\r\n      _onOkCallBack = callback;\r\n      return this;\r\n    },\r\n    onServerError: function(callback) {\r\n      _onServerErrorCallBack = callback;\r\n      return this;\r\n    },\r\n    onBadRequest: function(callback) {\r\n      _onBadRequestCallBack = callback;\r\n      return this;\r\n    },\r\n    notFound: function(callback) {\r\n      _notFoundCallBack = callback;\r\n      return this;\r\n    },\r\n    unAuthorized: function(callback) {\r\n      _unAuthorizedCallBack = callback;\r\n      return this;\r\n    },\r\n    onConnectionError: function(callback) {\r\n      _onConnectionErrorCallBack = callback;\r\n      return this;\r\n    }\r\n  };\r\n}\r\nexport function deleteContent() {\r\n  let _onOkCallBack;\r\n  function _onOk(result) {\r\n    if (_onOkCallBack) {\r\n      _onOkCallBack(result);\r\n    }\r\n  }\r\n  let _onServerErrorCallBack;\r\n  function _onServerError(result) {\r\n    if (_onServerErrorCallBack) {\r\n      _onServerErrorCallBack(result);\r\n    }\r\n  }\r\n  let _onBadRequestCallBack;\r\n  function _onBadRequest(result) {\r\n    if (_onBadRequestCallBack) {\r\n      _onBadRequestCallBack(result);\r\n    }\r\n  }\r\n  let _unAuthorizedCallBack;\r\n  function _unAuthorized(result) {\r\n    if (_unAuthorizedCallBack) {\r\n      _unAuthorizedCallBack(result);\r\n    }\r\n  }\r\n  let _notFoundCallBack;\r\n  function _notFound(result) {\r\n    if (_notFoundCallBack) {\r\n      _notFoundCallBack(result);\r\n    }\r\n  }\r\n  let _onConnectionErrorCallBack;\r\n  function _onConnectionError(result) {\r\n    if (_onConnectionErrorCallBack) {\r\n      _onConnectionErrorCallBack(result);\r\n    }\r\n  }\r\n  function _call(obj) {\r\n    //const status = rawResponse.status;\r\n    //const result = await rawResponse.json();\r\n\r\n    //\r\n\r\n    const result = data.contents.filter(item => item.sys.id !== obj.sys.id);\r\n    data.contents = result;\r\n\r\n    const status = 200;\r\n    switch (status) {\r\n      case 200:\r\n        _onOk(result);\r\n        break;\r\n      case 400:\r\n        _onBadRequest();\r\n        break;\r\n      case 401:\r\n        _unAuthorized();\r\n        break;\r\n      case 404:\r\n        _notFound();\r\n        break;\r\n      case 500:\r\n        _onServerError();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  return {\r\n    call: _call,\r\n    onOk: function(callback) {\r\n      _onOkCallBack = callback;\r\n      return this;\r\n    },\r\n    onServerError: function(callback) {\r\n      _onServerErrorCallBack = callback;\r\n      return this;\r\n    },\r\n    onBadRequest: function(callback) {\r\n      _onBadRequestCallBack = callback;\r\n      return this;\r\n    },\r\n    notFound: function(callback) {\r\n      _notFoundCallBack = callback;\r\n      return this;\r\n    },\r\n    unAuthorized: function(callback) {\r\n      _unAuthorizedCallBack = callback;\r\n      return this;\r\n    },\r\n    onConnectionError: function(callback) {\r\n      _onConnectionErrorCallBack = callback;\r\n      return this;\r\n    }\r\n  };\r\n}\r\nexport function getContentById() {\r\n  let _onOkCallBack;\r\n  function _onOk(result) {\r\n    if (_onOkCallBack) {\r\n      _onOkCallBack(result);\r\n    }\r\n  }\r\n  let _onServerErrorCallBack;\r\n  function _onServerError(result) {\r\n    if (_onServerErrorCallBack) {\r\n      _onServerErrorCallBack(result);\r\n    }\r\n  }\r\n  let _onBadRequestCallBack;\r\n  function _onBadRequest(result) {\r\n    if (_onBadRequestCallBack) {\r\n      _onBadRequestCallBack(result);\r\n    }\r\n  }\r\n  let _unAuthorizedCallBack;\r\n  function _unAuthorized(result) {\r\n    if (_unAuthorizedCallBack) {\r\n      _unAuthorizedCallBack(result);\r\n    }\r\n  }\r\n  let _notFoundCallBack;\r\n  function _notFound(result) {\r\n    if (_notFoundCallBack) {\r\n      _notFoundCallBack(result);\r\n    }\r\n  }\r\n  let _onConnectionErrorCallBack;\r\n  function _onConnectionError(result) {\r\n    if (_onConnectionErrorCallBack) {\r\n      _onConnectionErrorCallBack(result);\r\n    }\r\n  }\r\n  function _call(id) {\r\n    //const status = rawResponse.status;\r\n    //const result = await rawResponse.json();\r\n\r\n    //\r\n\r\n    const result = data.contents.find(item => item.sys.id === id);\r\n    const status = 200;\r\n    switch (status) {\r\n      case 200:\r\n        _onOk(result);\r\n        break;\r\n      case 400:\r\n        _onBadRequest();\r\n        break;\r\n      case 401:\r\n        _unAuthorized();\r\n        break;\r\n      case 404:\r\n        _notFound();\r\n        break;\r\n      case 500:\r\n        _onServerError();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  return {\r\n    call: _call,\r\n    onOk: function(callback) {\r\n      _onOkCallBack = callback;\r\n      return this;\r\n    },\r\n    onServerError: function(callback) {\r\n      _onServerErrorCallBack = callback;\r\n      return this;\r\n    },\r\n    onBadRequest: function(callback) {\r\n      _onBadRequestCallBack = callback;\r\n      return this;\r\n    },\r\n    notFound: function(callback) {\r\n      _notFoundCallBack = callback;\r\n      return this;\r\n    },\r\n    unAuthorized: function(callback) {\r\n      _unAuthorizedCallBack = callback;\r\n      return this;\r\n    },\r\n    onConnectionError: function(callback) {\r\n      _onConnectionErrorCallBack = callback;\r\n      return this;\r\n    }\r\n  };\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { languageManager } from \"../../../../services\";\r\n\r\nconst ContentTypeFilter = props => {\r\n  const currentLang = languageManager.getCurrentLanguage().name;\r\n  const [selected, setSelected] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(selected).length > 0) {\r\n      const c = props.filters.find(item => item.type === \"contentType\");\r\n      if (!c) {\r\n        setSelected({});\r\n      }\r\n    }\r\n  }, [props.filters]);\r\n\r\n  function handleClick(item) {\r\n    setSelected(item);\r\n    if (item.id !== selected.id) props.onContentTypeSelect(item);\r\n  }\r\n  return (\r\n    <div className=\"filterBox\">\r\n      <div className=\"filter-header\">Item Types</div>\r\n      <div className=\"filter-body\">\r\n        {props.data.map(listItem => (\r\n          <div\r\n            className=\"filter-list-item\"\r\n            key={listItem.id}\r\n            onClick={() => handleClick(listItem)}\r\n          >\r\n            <div className=\"item-checkbox\" />\r\n            <div\r\n              className=\"item-name\"\r\n              style={{\r\n                color: selected.id === listItem.id ? \"rgb(56,132,255)\" : \"gray\"\r\n              }}\r\n            >\r\n              {listItem.title[currentLang]}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContentTypeFilter;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { languageManager } from \"../../../../services\";\r\n\r\nconst Tree = props => {\r\n  const currentLang = languageManager.getCurrentLanguage().name;\r\n  const [selected, setSelected] = useState({});\r\n  const [idState, setId] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(selected).length > 0) {\r\n      const c = props.filters.find(item => item.type === \"category\");\r\n      if (!c) {\r\n        setSelected({});\r\n      }\r\n    }\r\n  }, [props.filters]);\r\n  function toggle(event, node) {\r\n    const id = event.target.getAttribute(\"id\");\r\n    let n_s = { ...idState };\r\n    n_s[id] = !idState[id];\r\n    setId(n_s);\r\n    if (node && node.id !== selected.id) {\r\n      setSelected(node);\r\n      props.onCategorySelect(node);\r\n    }\r\n  }\r\n  function mapper(nodes, parentId, lvl) {\r\n    return nodes.map((node, index) => {\r\n      if (node.type !== \"contentType\") {\r\n        const id = `${node.id}-${parentId ? parentId : \"top\"}`.replace(\r\n          /[^a-zA-Z0-9-_]/g,\r\n          \"\"\r\n        );\r\n        return (\r\n          <li\r\n            key={id}\r\n            className=\"animated fadeIn faster\"\r\n            style={{\r\n              color: selected.id === node.id ? \"rgb(56,132,255)\" : \"gray\"\r\n            }}\r\n          >\r\n            {node.children ? (\r\n              <>\r\n                {idState[id] ? (\r\n                  <i\r\n                    className=\"icon-down-chevron chevron\"\r\n                    onClick={toggle}\r\n                    id={id}\r\n                  />\r\n                ) : (\r\n                  <i\r\n                    className=\"icon-right-chevron chevron\"\r\n                    onClick={toggle}\r\n                    id={id}\r\n                  />\r\n                )}\r\n                {node.name[currentLang]}\r\n                <ul style={{ display: idState[id] ? \"block\" : \"none\" }}>\r\n                  {mapper(node.children, id, (lvl || 0) + 1)}\r\n                </ul>\r\n              </>\r\n            ) : (\r\n              <span onClick={e => toggle(e, node)} id={id}>\r\n                {node.name[currentLang]}\r\n              </span>\r\n            )}\r\n          </li>\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"filterBox\">\r\n      <div className=\"filter-header\">Categories</div>\r\n      <div className=\"filter-body\">\r\n        <ul>\r\n          <li className=\"root\">\r\n            <i className=\"icon-right-chevron chevron\" />\r\n            All Categories\r\n          </li>\r\n          {mapper(props.data)}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tree;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { languageManager, useGlobalState } from \"../../../../services\";\r\n\r\nconst StatusFilter = props => {\r\n  const currentLang = languageManager.getCurrentLanguage().name;\r\n  const [selected, setSelected] = useState({});\r\n  const [{ status }, dispatch] = useGlobalState();\r\n  useEffect(() => {\r\n    if (Object.keys(selected).length > 0) {\r\n      const c = props.filters.find(item => item.type === \"contentType\");\r\n      if (!c) {\r\n        setSelected({});\r\n      }\r\n    }\r\n  }, [props.filters]);\r\n\r\n  function handleClick(item) {\r\n    setSelected(item);\r\n    if (item.id !== selected.id) props.onContentTypeSelect(item);\r\n  }\r\n  return (\r\n    <div className=\"filterBox\">\r\n      <div className=\"filter-header\">Status</div>\r\n      <div className=\"filter-body\">\r\n        {status.map(listItem => (\r\n          <div\r\n            className=\"filter-list-item\"\r\n            key={listItem.id}\r\n            onClick={() => handleClick(listItem)}\r\n          >\r\n            <i\r\n              className={listItem.icon}\r\n              style={{\r\n                marginRight: 10\r\n              }}\r\n            />\r\n            <div\r\n              className=\"item-name\"\r\n              style={{\r\n                color: selected.id === listItem.id ? \"rgb(56,132,255)\" : \"gray\"\r\n              }}\r\n            >\r\n              {listItem.title}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatusFilter;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\nimport { useGlobalState, languageManager } from \"./../../services\";\r\nimport {\r\n  getContents,\r\n  filterContents,\r\n  deleteContent\r\n} from \"./../../Api/content-api\";\r\nimport \"./styles.scss\";\r\n\r\nimport ContentTypes from \"./FilterBox/contentTypes\";\r\nimport Tree from \"./FilterBox/categories\";\r\nimport Status from \"./FilterBox/status\";\r\n\r\nconst Products = props => {\r\n  let baseFieldColumnsConfig = [\r\n    {\r\n      Header: \"#\",\r\n      //show: false,\r\n      width: 70,\r\n      headerStyle: {\r\n        display: \"block\"\r\n      },\r\n      Cell: props => {\r\n        return (\r\n          <div className=\"p-number\">\r\n            <div className=\"p-number-value\">{props.index + 1}</div>\r\n          </div>\r\n        );\r\n      }\r\n    },\r\n    {\r\n      width: 100,\r\n      Header: () => <div className=\"p-header-td\">Image</div>,\r\n      //show: false,\r\n      headerStyle: {\r\n        display: \"block\"\r\n      },\r\n      accessor: \"fields.thumbnail\",\r\n      Cell: props => (\r\n        <div className=\"p-image\">\r\n          <img\r\n            className=\"p-image-value\"\r\n            src={\r\n              props.value\r\n                ? props.value[languageManager.getCurrentLanguage().name]\r\n                : \"https://upload.wikimedia.org/wikipedia/commons/thumb/6/6c/No_image_3x4.svg/1024px-No_image_3x4.svg.png\"\r\n            }\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      Header: () => <div className=\"p-header-td\">Name</div>,\r\n      //show: false,\r\n      headerStyle: {\r\n        display: \"block\"\r\n      },\r\n      accessor: \"fields.name\",\r\n      Cell: props => (\r\n        <div className=\"p-name\">\r\n          {props.value\r\n            ? props.value[languageManager.getCurrentLanguage().name]\r\n            : \"\"}\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      Header: () => <div className=\"p-header-td\">Description</div>,\r\n      //show: false,\r\n      headerStyle: {\r\n        display: \"block\"\r\n      },\r\n      accessor: \"fields.shortDesc\",\r\n      Cell: props => (\r\n        <div className=\"p-description\">\r\n          {props.value\r\n            ? props.value[languageManager.getCurrentLanguage().name]\r\n            : \"\"}\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      Header: () => <div className=\"p-header-td\">Issuer</div>,\r\n      //show: false,\r\n      headerStyle: {\r\n        display: \"block\"\r\n      },\r\n      accessor: \"sys.issuer.fullName\",\r\n      Cell: props => <div className=\"p-issuer\">{props.value}</div>\r\n    },\r\n    {\r\n      Header: () => <div className=\"p-header-td\">Issue Date</div>,\r\n      //show: false,\r\n      headerStyle: {\r\n        display: \"block\"\r\n      },\r\n      accessor: \"sys.issueDate\",\r\n      Cell: props => <div className=\"p-date\">{props.value}</div>\r\n    },\r\n    {\r\n      Header: \"Actions\",\r\n      //show: false,\r\n      headerStyle: {\r\n        display: \"block\"\r\n      },\r\n      Cell: props => (\r\n        <div className=\"p-actions\">\r\n          <button\r\n            className=\"btn btn-light\"\r\n            onClick={() => handleEditRow(props)}\r\n          >\r\n            Edit\r\n          </button>\r\n          <button\r\n            className=\"btn btn-light\"\r\n            onClick={() => handleDeleteRow(props)}\r\n          >\r\n            <i className=\"icon-bin\" />\r\n          </button>\r\n        </div>\r\n      )\r\n    }\r\n  ];\r\n  const currentLang = languageManager.getCurrentLanguage().name;\r\n  const { name: pageTitle, desc: pageDescription } = props.component;\r\n\r\n  // variables\r\n  const [{ contents, categories, contentTypes }, dispatch] = useGlobalState();\r\n\r\n  const tableBox = useRef(null);\r\n\r\n  const [leftContent, toggleLeftContent] = useState(false);\r\n\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [selectedNode, setSelectedNode] = useState({});\r\n  const [selectedContentType, setSelectedContentType] = useState({});\r\n  const [columnsVisibility, toggleColumns] = useState(false);\r\n\r\n  const [columns, setColumns] = useState(baseFieldColumnsConfig.slice());\r\n  const [dataFilters, setFilters] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getContents()\r\n      .onOk(result => {\r\n        dispatch({\r\n          type: \"SET_CONTENTS\",\r\n          value: result\r\n        });\r\n      })\r\n      .call();\r\n    // doFiltersOnData();\r\n  }, []);\r\n  // methods\r\n  function initColumns() {\r\n    if (columnsVisibility) {\r\n      const cols = baseFieldColumnsConfig.map(col => {\r\n        let item = col;\r\n        item.headerStyle.display = \"none\";\r\n        return item;\r\n      });\r\n      setColumns(cols);\r\n      toggleColumns(true);\r\n    }\r\n  }\r\n\r\n  function toggleFilterBox() {\r\n    toggleLeftContent(prevState => !prevState);\r\n  }\r\n  function openNewItemBox(contentType) {\r\n    props.history.push({\r\n      pathname: \"/addNew\"\r\n      // search: \"?sort=name\",\r\n      //hash: \"#the-hash\",\r\n      //params: { contentType, hasContentType }\r\n    });\r\n  }\r\n  function makeTableFieldView(type, props) {\r\n    switch (type) {\r\n      case \"string\":\r\n        return <div className=\"p-string\">{props.value}</div>;\r\n      default:\r\n        return <div className=\"p-string\">{props.value}</div>;\r\n    }\r\n  }\r\n\r\n  function removeFilter(filter) {\r\n    let f = dataFilters.filter(item => item.type !== filter.type);\r\n    setFilters(f);\r\n    if (filter.type === \"text\") setSearchText(\"\");\r\n    // doFiltersOnData();\r\n    //  getContentByFilter(dataFilters);\r\n  }\r\n  function handleSearchChanged() {\r\n    filterContents()\r\n      .onOk(result => {\r\n        dispatch({\r\n          type: \"SET_CONTENTS\",\r\n          value: result\r\n        });\r\n      })\r\n      .call(searchText, selectedContentType.id, selectedNode.id);\r\n\r\n    // if (searchText.length === 0) {\r\n    //   let f = [...dataFilters].filter(item => item.type !== \"text\");\r\n    //   setFilters(f);\r\n    // } else {\r\n    //   let f = [...dataFilters].filter(item => item.type !== \"text\");\r\n    //   f.push({ type: \"text\", title: searchText });\r\n    //setFilters(f);\r\n    //}\r\n    // doFiltersOnData();\r\n    //getContentByFilter(dataFilters);\r\n  }\r\n  function handleContentTypeSelect(selected) {\r\n    setSelectedContentType(selected);\r\n    filterContents()\r\n      .onOk(result => {\r\n        dispatch({\r\n          type: \"SET_CONTENTS\",\r\n          value: result\r\n        });\r\n      })\r\n      .call(searchText, selected.id, selectedNode.id);\r\n    // let f = [...dataFilters].filter(item => item.type !== \"contentType\");\r\n    // f.push(selected);\r\n    // setFilters(f);\r\n    // doFiltersOnData();\r\n    //getContentByFilter(dataFilters);\r\n  }\r\n  function handleStatusSelect(selected) {}\r\n  function handleClickCategory(selected) {\r\n    setSelectedNode(selected);\r\n    filterContents()\r\n      .onOk(result => {\r\n        dispatch({\r\n          type: \"SET_CONTENTS\",\r\n          value: result\r\n        });\r\n      })\r\n      .call(searchText, selectedContentType.id, selected.id);\r\n    // let f = [...dataFilters].filter(item => item.type !== \"category\");\r\n    // f.push(selected);\r\n    // setFilters(f);\r\n    // doFiltersOnData();\r\n    //getContentByFilter(dataFilters);\r\n\r\n    // if (selected.type === \"category\") {\r\n    //   initColumns();\r\n    // } else {\r\n    //   if (selected.fields) {\r\n    //     toggleColumns(true); // columns are visible or not\r\n\r\n    //     const cols = columns.slice();\r\n    //     let c_arr = cols.map(col => {\r\n    //       let item = col;\r\n    //       item.headerStyle.display = \"flex\";\r\n    //       return item;\r\n    //     });\r\n    //     const fields = selected.fields;\r\n    //     for (let i = 0; i < fields.length; i++) {\r\n    //       const field = selected.fields[i];\r\n    //       const obj = {\r\n    //         Header: field.title,\r\n    //         //show: false,\r\n    //         headerStyle: {\r\n    //           display: \"block\"\r\n    //         },\r\n    //         accessor: field.name,\r\n    //         Cell: props => {\r\n    //           return makeTableFieldView(field.type, props);\r\n    //         }\r\n    //       };\r\n    //       c_arr.push(obj);\r\n    //     }\r\n    //     setColumns(c_arr);\r\n    //   } else {\r\n    //     initColumns();\r\n    //   }\r\n    // }\r\n  }\r\n  function handleDeleteRow(row) {\r\n    deleteContent()\r\n      .onOk(result => {\r\n        dispatch({\r\n          type: \"SET_CONTENTS\",\r\n          value: result\r\n        });\r\n      })\r\n      .call(row.original);\r\n    // dispatch({\r\n    //   type: \"DELETE_ITEM\",\r\n    //   value: row.original\r\n    // });\r\n  }\r\n  function handleEditRow(row) {\r\n    props.history.push({\r\n      pathname: `/editItem/${row.original.sys.id}`\r\n      // search: \"?sort=name\",\r\n      //hash: \"#the-hash\",\r\n      //  params: { selectedItem: row.original }\r\n    });\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"p-wrapper\">\r\n        <div className=\"p-header\">\r\n          <div className=\"p-header-left\">\r\n            <span className=\"p-header-title\">{pageTitle}</span>\r\n            <span className=\"p-header-description\">{pageDescription}</span>\r\n          </div>\r\n          <div className=\"p-header-right\">\r\n            <div className=\"input-group\">\r\n              <div\r\n                className=\"input-group-prepend\"\r\n                onClick={handleSearchChanged}\r\n              >\r\n                <span className=\"input-group-text searchBtn\">Search</span>\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Search in all data\"\r\n                value={searchText}\r\n                onChange={e => setSearchText(e.target.value)}\r\n              />\r\n            </div>\r\n            {/* <button className=\"btn btn-primary\">\r\n              <i className=\"icon-folder\" />\r\n            </button>\r\n            <button className=\"btn btn-primary\">\r\n              <i className=\"icon-list\" />\r\n            </button> */}\r\n            <button className=\"btn btn-primary\" onClick={toggleFilterBox}>\r\n              <i className=\"icon-filter\" />\r\n            </button>\r\n            <button className=\"btn btn-primary\" onClick={openNewItemBox}>\r\n              New Item\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"p-content\">\r\n          {leftContent && (\r\n            <div className=\"p-content-left animated fadeIn faster\">\r\n              <div className=\"filterBox\">\r\n                <div className=\"filter-header\">Selected Filters</div>\r\n                <div className=\"filter-body\">\r\n                  <div className=\"selectedFilters\">\r\n                    {dataFilters.length === 0 && (\r\n                      <div className=\"empty-dataFilter\">\r\n                        There is no selected filter\r\n                      </div>\r\n                    )}\r\n                    {dataFilters.map(filter => (\r\n                      <div key={filter.id} className=\"filterItem\">\r\n                        <span className=\"filterText\">\r\n                          {filter.title !== undefined\r\n                            ? filter.title.en !== undefined\r\n                              ? filter.title[currentLang]\r\n                              : filter.title\r\n                            : filter.name[currentLang]}\r\n                        </span>\r\n                        <span\r\n                          className=\"icon-cross icon\"\r\n                          onClick={() => removeFilter(filter)}\r\n                        />\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <ContentTypes\r\n                filters={dataFilters}\r\n                leftContent={leftContent}\r\n                data={contentTypes}\r\n                onContentTypeSelect={selected =>\r\n                  handleContentTypeSelect(selected)\r\n                }\r\n              />\r\n              <Tree\r\n                filters={dataFilters}\r\n                leftContent={leftContent}\r\n                data={categories}\r\n                onCategorySelect={selected => handleClickCategory(selected)}\r\n              />\r\n              <Status\r\n                filters={dataFilters}\r\n                leftContent={leftContent}\r\n                onStatusSelect={selected => handleStatusSelect(selected)}\r\n              />\r\n            </div>\r\n          )}\r\n          <div className=\"p-content-right\" ref={tableBox}>\r\n            <div className=\"p-content-right-header\">\r\n              <div className=\"p-content-header-title\">All Data</div>\r\n            </div>\r\n            <div className=\"p-content-right-body\">\r\n              <ReactTable\r\n                data={contents}\r\n                defaultPageSize={10}\r\n                minRows={2}\r\n                columns={columns}\r\n                showPaginationTop={false}\r\n                showPaginationBottom={false}\r\n                style={{\r\n                  border: \"none\",\r\n                  overflow: \"auto\",\r\n                  height: \"100%\" // This will force the table body to overflow and scroll, since there is not enough room\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n","import React, { Component } from \"react\";\r\nimport { ListGroup, ListGroupItem, Collapse } from \"reactstrap\";\r\nimport { languageManager } from \"../../../services\";\r\n\r\nclass Tree extends Component {\r\n  state = {\r\n    selected: {},\r\n    hasContentType: false,\r\n    currentLang: languageManager.getCurrentLanguage().name\r\n  };\r\n  static getDerivedStateFromProps(props, current_state) {\r\n    if (!props.leftContent) {\r\n      return {\r\n        selected: {}\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n  toggle = event => {\r\n    const id = event.target.getAttribute(\"id\");\r\n    this.setState(state => ({ [id]: !state[id] }));\r\n  };\r\n  mapper = (nodes, parentId, lvl) => {\r\n    return nodes.map((node, index) => {\r\n      if (node.type === \"category\") {\r\n        const id = `${node.id}-${parentId ? parentId : \"top\"}`.replace(\r\n          /[^a-zA-Z0-9-_]/g,\r\n          \"\"\r\n        );\r\n        return (\r\n          <>\r\n            <ListGroupItem\r\n              key={index}\r\n              style={{\r\n                zIndex: 0,\r\n                padding: 10,\r\n                background:\r\n                  this.state.selected.id === node.id ? \"lightgray\" : \"white\"\r\n              }}\r\n              className={`treeItemParent ${\r\n                parentId ? `rounded-0 ${lvl ? \"border-bottom-0\" : \"\"}` : \"\"\r\n              }`}\r\n            >\r\n              {\r\n                <div\r\n                  className=\"treeItem\"\r\n                  style={{\r\n                    paddingLeft: `${15 * lvl}px`\r\n                  }}\r\n                >\r\n                  {node.children && node.children.length > 0 ? (\r\n                    <button\r\n                      className=\"btnCategoryCollapse btn btn-primary btn-sm\"\r\n                      id={id}\r\n                      color=\"primary\"\r\n                      onClick={this.toggle}\r\n                    >\r\n                      {this.state[id] ? (\r\n                        <i className=\"icon-caret-down\" onClick={this.toggle} />\r\n                      ) : (\r\n                        <i className=\"icon-caret-right\" onClick={this.toggle} />\r\n                      )}\r\n                    </button>\r\n                  ) : node.type === \"category\" ? (\r\n                    <button className=\"btnCategoryLeaf btn btn-primary btn-sm\">\r\n                      <i className=\"icon-circle-o\" />\r\n                    </button>\r\n                  ) : (\r\n                    <button className=\"btnCategoryLeaf btn btn-dark btn-sm\">\r\n                      <i className=\"icon-circle-o\" />\r\n                    </button>\r\n                  )}\r\n                  <div className=\"treeItem-text\">\r\n                    <span className=\"treeItem-name\">\r\n                      {node.name[this.state.currentLang]}\r\n                    </span>\r\n                    <span className=\"treeItem-desc\">\r\n                      {node.description[this.state.currentLang] ||\r\n                        \"Lorem ipsum dolor sit amet, consectetur\"}\r\n                    </span>\r\n                  </div>\r\n                  {(node.children === undefined ||\r\n                    node.children.length === 0) && (\r\n                    <button\r\n                      className=\"btn btn-light treeItem-action\"\r\n                      size=\"xs\"\r\n                      onClick={() => {\r\n                        this.setState(state => ({ selected: node }));\r\n                        this.props.onRowSelect(node);\r\n                      }}\r\n                    >\r\n                      <span style={{ fontSize: 12 }}>\r\n                        {languageManager.translate(\"Select\")}\r\n                      </span>\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              }\r\n            </ListGroupItem>\r\n            {node.children && (\r\n              <Collapse isOpen={this.state[id]}>\r\n                {this.mapper(node.children, id, (lvl || 0) + 1)}\r\n              </Collapse>\r\n            )}\r\n          </>\r\n        );\r\n      } else {\r\n        return <></>;\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return <ListGroup>{this.mapper(this.props.data)}</ListGroup>;\r\n  }\r\n}\r\n\r\nexport default Tree;\r\n","import React, { useState } from \"react\";\r\nimport \"./styles.scss\";\r\nimport { Modal, ModalHeader, ModalBody } from \"reactstrap\";\r\nimport Tree from \"./tree\";\r\n\r\nconst Categories = props => {\r\n  function handleRowSelect(selected) {\r\n    props.onCloseModal(selected);\r\n  }\r\n\r\n  function closeModal(params) {\r\n    props.onCloseModal(undefined);\r\n  }\r\n  return (\r\n    <Modal isOpen={true} toggle={closeModal}>\r\n      <ModalHeader toggle={closeModal}>Choose a category</ModalHeader>\r\n      <ModalBody className=\"up-categories\">\r\n        <Tree\r\n          data={props.categories}\r\n          onRowSelect={selected => handleRowSelect(selected)}\r\n        />\r\n      </ModalBody>\r\n    </Modal>\r\n  );\r\n};\r\nexport default Categories;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./styles.scss\";\r\nimport { useGlobalState, languageManager } from \"./../../services\";\r\nimport {\r\n  addContent,\r\n  updateContent,\r\n  getContentById\r\n} from \"./../../Api/content-api\";\r\nimport CategoriesModal from \"./Categories\";\r\nimport {\r\n  String,\r\n  Number,\r\n  DateTime,\r\n  Location,\r\n  Media,\r\n  Boolean,\r\n  KeyValue,\r\n  RichText\r\n} from \"./../../components\";\r\n\r\nconst UpsertProduct = props => {\r\n  let selectedItem;\r\n  const currentLang = languageManager.getCurrentLanguage().name;\r\n  const [{ categories, contentTypes, contents }, dispatch] = useGlobalState();\r\n\r\n  // variables\r\n  const [updateMode, toggleUpdateMode] = useState(\r\n    props.match.params.id ? true : false\r\n  );\r\n  const [tab, toggleTab] = useState();\r\n  const [categoryModal, toggleCategoryModal] = useState(false);\r\n  const [category, setCategory] = useState();\r\n  const [contentType, setContentType] = useState();\r\n  const [fields, setFields] = useState();\r\n\r\n  const [formData, setFormData] = useState({});\r\n  const [formValidation, setFormValidation] = useState();\r\n\r\n  useEffect(() => {\r\n    if (updateMode) {\r\n      if (props.match.params.id !== undefined) {\r\n        if (props.match.params.id.length > 0) {\r\n          toggleUpdateMode(true);\r\n          getItemById(props.match.params.id);\r\n        } else {\r\n          toggleTab(3);\r\n        }\r\n      } else {\r\n        toggleTab(1);\r\n      }\r\n    } else toggleTab(1);\r\n  }, [props.match.params.id]);\r\n\r\n  // methods\r\n  function getItemById(id) {\r\n    getContentById()\r\n      .onOk(result => {\r\n        if (result) {\r\n          if (tab !== 2) toggleTab(2);\r\n          setFormData(result.fields);\r\n          setContentType(result.contentType);\r\n          const c = contentTypes.find(\r\n            item => item.id === result.contentType.id\r\n          );\r\n          setFields(c.fields.sort((a, b) => a.index - b.index));\r\n          setCategory(result.category);\r\n        } else {\r\n          toggleTab(3);\r\n        }\r\n      })\r\n      .call(id);\r\n  }\r\n  function setNameToFormValidation(name) {\r\n    if (!formValidation || formValidation[name] !== null) {\r\n      setFormValidation(prevFormValidation => ({\r\n        [name]: null,\r\n        ...prevFormValidation\r\n      }));\r\n    }\r\n  }\r\n  function handleOnChangeValue(key, value, isValid) {\r\n    // add value to form\r\n    let f = { ...formData };\r\n    f[key] = value;\r\n    setFormData(f);\r\n    // check validation\r\n    let obj = { ...formValidation };\r\n    if (isValid && obj) {\r\n      delete obj[key];\r\n      if (Object.keys(obj).length === 0) {\r\n        setFormValidation(undefined);\r\n      } else {\r\n        setFormValidation(obj);\r\n      }\r\n    } else {\r\n      if (obj === undefined) {\r\n        obj = {};\r\n      }\r\n      obj[key] = null;\r\n      setFormValidation(obj);\r\n    }\r\n  }\r\n  function showCatgoryModal() {\r\n    toggleCategoryModal(true);\r\n  }\r\n  function onCloseModel(selected) {\r\n    if (selected !== undefined) {\r\n      setCategory(selected);\r\n    }\r\n    toggleCategoryModal(false);\r\n  }\r\n\r\n  function getFieldItem(field) {\r\n    switch (field.type.toLowerCase()) {\r\n      case \"string\":\r\n        return (\r\n          <String\r\n            field={field}\r\n            formData={formData}\r\n            init={setNameToFormValidation}\r\n            onChangeValue={handleOnChangeValue}\r\n          />\r\n        );\r\n      case \"number\":\r\n        return (\r\n          <Number\r\n            field={field}\r\n            formData={formData}\r\n            init={setNameToFormValidation}\r\n            onChangeValue={handleOnChangeValue}\r\n          />\r\n        );\r\n      case \"datetime\":\r\n        return (\r\n          <DateTime\r\n            field={field}\r\n            formData={formData}\r\n            init={setNameToFormValidation}\r\n            onChangeValue={handleOnChangeValue}\r\n          />\r\n        );\r\n      case \"location\":\r\n        return (\r\n          <Location\r\n            field={field}\r\n            formData={formData}\r\n            init={setNameToFormValidation}\r\n            onChangeValue={handleOnChangeValue}\r\n          />\r\n        );\r\n      case \"media\":\r\n        return (\r\n          <Media\r\n            formData={formData}\r\n            field={field}\r\n            init={setNameToFormValidation}\r\n            onChangeValue={handleOnChangeValue}\r\n          />\r\n        );\r\n      case \"boolean\":\r\n        return (\r\n          <Boolean\r\n            field={field}\r\n            formData={formData}\r\n            init={setNameToFormValidation}\r\n            onChangeValue={handleOnChangeValue}\r\n          />\r\n        );\r\n      case \"keyvalue\":\r\n        return (\r\n          <KeyValue\r\n            field={field}\r\n            formData={formData}\r\n            init={setNameToFormValidation}\r\n            onChangeValue={handleOnChangeValue}\r\n          />\r\n        );\r\n      case \"richtext\":\r\n        return (\r\n          <RichText\r\n            field={field}\r\n            formData={formData}\r\n            init={setNameToFormValidation}\r\n            onChangeValue={handleOnChangeValue}\r\n          />\r\n        );\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  function backToProducts() {\r\n    props.history.push(\"/home/products\");\r\n  }\r\n  function changeTab(tab) {\r\n    if (tab === 2) {\r\n      if (contentType !== undefined) {\r\n        toggleTab(2);\r\n        const f = contentType.fields;\r\n        setFields(f.sort((a, b) => a.index - b.index));\r\n      }\r\n    } else {\r\n      toggleTab(1);\r\n    }\r\n  }\r\n  function handleSelectContentType(contentType) {\r\n    setContentType(contentType);\r\n    changeTab(2);\r\n  }\r\n  function upsertItem(closePage) {\r\n    const obj = {\r\n      sys: {\r\n        id: updateMode ? props.match.params.id : Math.random().toString(),\r\n        issuer: {\r\n          id: \"1\",\r\n          fullName: \"Saeed Padyab\",\r\n          image: \"\"\r\n        },\r\n        issueDate: \"19/01/2019 20:18\"\r\n      },\r\n      //contentType: contentType.id,\r\n      contentType: {\r\n        id: contentType.id,\r\n        name: contentType.name,\r\n        title: contentType.title\r\n      },\r\n      //category:category.id,\r\n      category: {\r\n        id: category.id,\r\n        name: category.name\r\n      },\r\n      fields: formData\r\n    };\r\n\r\n    if (updateMode) {\r\n      updateContent()\r\n        .onOk(result => {\r\n          if (closePage) {\r\n            backToProducts();\r\n          }\r\n        })\r\n        .call(obj);\r\n    } else {\r\n      addContent()\r\n        .onOk(result => {\r\n          if (closePage) {\r\n            backToProducts();\r\n          }\r\n        })\r\n        .call(obj);\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"up-wrapper\">\r\n      <div className=\"up-header\">\r\n        <button className=\"btn btn-light\" onClick={backToProducts}>\r\n          <i className=\"icon-arrow-left2\" />\r\n          Back\r\n        </button>\r\n        <div className=\"tabItems\">\r\n          {updateMode ? (\r\n            <div className=\"item active\">Update Mode</div>\r\n          ) : (\r\n            <>\r\n              <div\r\n                className={[\"item\", tab === 1 ? \"active\" : \"\"].join(\" \")}\r\n                onClick={() => changeTab(1)}\r\n              >\r\n                1.Choosing Item Type\r\n              </div>\r\n              <div\r\n                className={[\"item\", tab === 2 ? \"active\" : \"\"].join(\" \")}\r\n                onClick={() => changeTab(2)}\r\n              >\r\n                2.Complete Form\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"up-content\">\r\n        <main>\r\n          {tab === 1 && (\r\n            <>\r\n              <div className=\"up-content-title\">Choose an item type</div>\r\n              <div className=\"up-content-itemTypes animated fadeIn \">\r\n                {contentTypes.map(c => (\r\n                  <div key={c.id} className=\"listGroupItem\">\r\n                    <div className=\"treeItem\">\r\n                      <button\r\n                        className=\"btn btn-primary btn-sm\"\r\n                        color=\"primary\"\r\n                        style={{ marginRight: 15 }}\r\n                      >\r\n                        <i className=\"icon-item-type\" />\r\n                      </button>\r\n                      <div className=\"treeItem-text\">\r\n                        <span className=\"treeItem-name\">\r\n                          {c.title[currentLang]}\r\n                        </span>\r\n                        <span className=\"treeItem-desc\">\r\n                          {c.description[currentLang] ||\r\n                            \"Lorem ipsum dolor sit amet, consectetur\"}\r\n                        </span>\r\n                      </div>\r\n                      <button\r\n                        className=\"btn btn-light treeItem-action\"\r\n                        size=\"xs\"\r\n                        onClick={() => handleSelectContentType(c)}\r\n                      >\r\n                        <span style={{ fontSize: 12 }}>\r\n                          {languageManager.translate(\"Choose\")}\r\n                        </span>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </>\r\n          )}\r\n          {tab === 2 && (\r\n            <>\r\n              <div className=\"up-content-title\">\r\n                {updateMode ? \"Edit \" : \"Add New \"}\r\n                {contentType && contentType.title[currentLang]}\r\n              </div>\r\n              <div className=\"up-categoryBox animated fadeIn\">\r\n                <span>\r\n                  {category ? category.name[currentLang] : \"Choose a category\"}\r\n                </span>\r\n                <button className=\"btn btn-link\" onClick={showCatgoryModal}>\r\n                  Change category\r\n                </button>\r\n              </div>\r\n              <div className=\"up-formInputs animated fadeIn\">\r\n                {fields &&\r\n                  fields.map(field => (\r\n                    <div key={field.id} className=\"rowItem\">\r\n                      {getFieldItem(field)}\r\n                    </div>\r\n                  ))}\r\n                <div className=\"actions\">\r\n                  {!updateMode && (\r\n                    <button\r\n                      className=\"btn btn-primary \"\r\n                      onClick={() => upsertItem(false)}\r\n                      disabled={\r\n                        Object.keys(formData).length > 0 &&\r\n                        formValidation === undefined &&\r\n                        category !== undefined\r\n                          ? false\r\n                          : true\r\n                      }\r\n                    >\r\n                      Save & New\r\n                    </button>\r\n                  )}\r\n                  <button\r\n                    className=\"btn btn-primary \"\r\n                    onClick={() => upsertItem(true)}\r\n                    disabled={\r\n                      Object.keys(formData).length > 0 &&\r\n                      formValidation === undefined &&\r\n                      category !== undefined\r\n                        ? false\r\n                        : true\r\n                    }\r\n                  >\r\n                    {updateMode ? \"Update & Close\" : \"Save & Close\"}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </>\r\n          )}\r\n          {tab === 3 && (\r\n            <>\r\n              <div className=\"up-content-title\">Error has occurred</div>\r\n              <div className=\"up-error-section\" />\r\n            </>\r\n          )}\r\n        </main>\r\n      </div>\r\n      {categoryModal && (\r\n        <CategoriesModal categories={categories} onCloseModal={onCloseModel} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpsertProduct;\r\n","const data = require(\"./../data.json\");\r\n\r\nexport function filterAssets() {\r\n  let _onOkCallBack;\r\n  function _onOk(result) {\r\n    if (_onOkCallBack) {\r\n      _onOkCallBack(result);\r\n    }\r\n  }\r\n  let _onServerErrorCallBack;\r\n  function _onServerError(result) {\r\n    if (_onServerErrorCallBack) {\r\n      _onServerErrorCallBack(result);\r\n    }\r\n  }\r\n  let _onBadRequestCallBack;\r\n  function _onBadRequest(result) {\r\n    if (_onBadRequestCallBack) {\r\n      _onBadRequestCallBack(result);\r\n    }\r\n  }\r\n  let _unAuthorizedCallBack;\r\n  function _unAuthorized(result) {\r\n    if (_unAuthorizedCallBack) {\r\n      _unAuthorizedCallBack(result);\r\n    }\r\n  }\r\n  let _notFoundCallBack;\r\n  function _notFound(result) {\r\n    if (_notFoundCallBack) {\r\n      _notFoundCallBack(result);\r\n    }\r\n  }\r\n  let _onConnectionErrorCallBack;\r\n  function _onConnectionError(result) {\r\n    if (_onConnectionErrorCallBack) {\r\n      _onConnectionErrorCallBack(result);\r\n    }\r\n  }\r\n  function _call(type) {\r\n    let result;\r\n    if (type===\"all\") {\r\n      result = data.assets;\r\n    }\r\n    else  \r\n    result = [...data.assets].filter(item => item.fileType.toLowerCase().includes(type));\r\n      const status = 200;\r\n    switch (status) {\r\n      case 200:\r\n        _onOk(result);\r\n        break;\r\n      case 400:\r\n        _onBadRequest();\r\n        break;\r\n      case 401:\r\n        _unAuthorized();\r\n        break;\r\n      case 404:\r\n        _notFound();\r\n        break;\r\n      case 500:\r\n        _onServerError();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  return {\r\n    call: _call,\r\n    onOk: function(callback) {\r\n      _onOkCallBack = callback;\r\n      return this;\r\n    },\r\n    onServerError: function(callback) {\r\n      _onServerErrorCallBack = callback;\r\n      return this;\r\n    },\r\n    onBadRequest: function(callback) {\r\n      _onBadRequestCallBack = callback;\r\n      return this;\r\n    },\r\n    notFound: function(callback) {\r\n      _notFoundCallBack = callback;\r\n      return this;\r\n    },\r\n    unAuthorized: function(callback) {\r\n      _unAuthorizedCallBack = callback;\r\n      return this;\r\n    },\r\n    onConnectionError: function(callback) {\r\n      _onConnectionErrorCallBack = callback;\r\n      return this;\r\n    }\r\n  };\r\n}\r\n\r\nexport function getAssets() {\r\n  let _onOkCallBack;\r\n  function _onOk(result) {\r\n    if (_onOkCallBack) {\r\n      _onOkCallBack(result);\r\n    }\r\n  }\r\n  let _onServerErrorCallBack;\r\n  function _onServerError(result) {\r\n    if (_onServerErrorCallBack) {\r\n      _onServerErrorCallBack(result);\r\n    }\r\n  }\r\n  let _onBadRequestCallBack;\r\n  function _onBadRequest(result) {\r\n    if (_onBadRequestCallBack) {\r\n      _onBadRequestCallBack(result);\r\n    }\r\n  }\r\n  let _unAuthorizedCallBack;\r\n  function _unAuthorized(result) {\r\n    if (_unAuthorizedCallBack) {\r\n      _unAuthorizedCallBack(result);\r\n    }\r\n  }\r\n  let _notFoundCallBack;\r\n  function _notFound(result) {\r\n    if (_notFoundCallBack) {\r\n      _notFoundCallBack(result);\r\n    }\r\n  }\r\n  let _onConnectionErrorCallBack;\r\n  function _onConnectionError(result) {\r\n    if (_onConnectionErrorCallBack) {\r\n      _onConnectionErrorCallBack(result);\r\n    }\r\n  }\r\n  function _call(name, contentType, category) {\r\n    //const status = rawResponse.status;\r\n    //const result = await rawResponse.json();\r\n    const result = data.assets;\r\n    const status = 200;\r\n    switch (status) {\r\n      case 200:\r\n        _onOk(result);\r\n        break;\r\n      case 400:\r\n        _onBadRequest(result);\r\n        break;\r\n      case 401:\r\n        _unAuthorized(result);\r\n        break;\r\n      case 404:\r\n        _notFound(result);\r\n        break;\r\n      case 500:\r\n        _onServerError(result);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  return {\r\n    call: _call,\r\n    onOk: function(callback) {\r\n      _onOkCallBack = callback;\r\n      return this;\r\n    },\r\n    onServerError: function(callback) {\r\n      _onServerErrorCallBack = callback;\r\n      return this;\r\n    },\r\n    onBadRequest: function(callback) {\r\n      _onBadRequestCallBack = callback;\r\n      return this;\r\n    },\r\n    notFound: function(callback) {\r\n      _notFoundCallBack = callback;\r\n      return this;\r\n    },\r\n    unAuthorized: function(callback) {\r\n      _unAuthorizedCallBack = callback;\r\n      return this;\r\n    },\r\n    onConnectionError: function(callback) {\r\n      _onConnectionErrorCallBack = callback;\r\n      return this;\r\n    }\r\n  };\r\n}\r\n\r\nexport function addAsset() {\r\n  let _onOkCallBack;\r\n  function _onOk(result) {\r\n    if (_onOkCallBack) {\r\n      _onOkCallBack(result);\r\n    }\r\n  }\r\n  let _onServerErrorCallBack;\r\n  function _onServerError(result) {\r\n    if (_onServerErrorCallBack) {\r\n      _onServerErrorCallBack(result);\r\n    }\r\n  }\r\n  let _onBadRequestCallBack;\r\n  function _onBadRequest(result) {\r\n    if (_onBadRequestCallBack) {\r\n      _onBadRequestCallBack(result);\r\n    }\r\n  }\r\n  let _unAuthorizedCallBack;\r\n  function _unAuthorized(result) {\r\n    if (_unAuthorizedCallBack) {\r\n      _unAuthorizedCallBack(result);\r\n    }\r\n  }\r\n  let _notFoundCallBack;\r\n  function _notFound(result) {\r\n    if (_notFoundCallBack) {\r\n      _notFoundCallBack(result);\r\n    }\r\n  }\r\n  let _onConnectionErrorCallBack;\r\n  function _onConnectionError(result) {\r\n    if (_onConnectionErrorCallBack) {\r\n      _onConnectionErrorCallBack(result);\r\n    }\r\n  }\r\n  function _call(obj) {\r\n    //const status = rawResponse.status;\r\n    //const result = await rawResponse.json();\r\n\r\n    //\r\n\r\n    data.assets.push(obj);\r\n\r\n    const status = 200;\r\n    switch (status) {\r\n      case 200:\r\n        _onOk();\r\n        break;\r\n      case 400:\r\n        _onBadRequest();\r\n        break;\r\n      case 401:\r\n        _unAuthorized();\r\n        break;\r\n      case 404:\r\n        _notFound();\r\n        break;\r\n      case 500:\r\n        _onServerError();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  return {\r\n    call: _call,\r\n    onOk: function(callback) {\r\n      _onOkCallBack = callback;\r\n      return this;\r\n    },\r\n    onServerError: function(callback) {\r\n      _onServerErrorCallBack = callback;\r\n      return this;\r\n    },\r\n    onBadRequest: function(callback) {\r\n      _onBadRequestCallBack = callback;\r\n      return this;\r\n    },\r\n    notFound: function(callback) {\r\n      _notFoundCallBack = callback;\r\n      return this;\r\n    },\r\n    unAuthorized: function(callback) {\r\n      _unAuthorizedCallBack = callback;\r\n      return this;\r\n    },\r\n    onConnectionError: function(callback) {\r\n      _onConnectionErrorCallBack = callback;\r\n      return this;\r\n    }\r\n  };\r\n}\r\nexport function updateAsset() {\r\n  let _onOkCallBack;\r\n  function _onOk(result) {\r\n    if (_onOkCallBack) {\r\n      _onOkCallBack(result);\r\n    }\r\n  }\r\n  let _onServerErrorCallBack;\r\n  function _onServerError(result) {\r\n    if (_onServerErrorCallBack) {\r\n      _onServerErrorCallBack(result);\r\n    }\r\n  }\r\n  let _onBadRequestCallBack;\r\n  function _onBadRequest(result) {\r\n    if (_onBadRequestCallBack) {\r\n      _onBadRequestCallBack(result);\r\n    }\r\n  }\r\n  let _unAuthorizedCallBack;\r\n  function _unAuthorized(result) {\r\n    if (_unAuthorizedCallBack) {\r\n      _unAuthorizedCallBack(result);\r\n    }\r\n  }\r\n  let _notFoundCallBack;\r\n  function _notFound(result) {\r\n    if (_notFoundCallBack) {\r\n      _notFoundCallBack(result);\r\n    }\r\n  }\r\n  let _onConnectionErrorCallBack;\r\n  function _onConnectionError(result) {\r\n    if (_onConnectionErrorCallBack) {\r\n      _onConnectionErrorCallBack(result);\r\n    }\r\n  }\r\n  function _call(obj) {\r\n    //const status = rawResponse.status;\r\n    //const result = await rawResponse.json();\r\n\r\n    //\r\n\r\n    const result = data.assets.map(item => {\r\n      if (item.sys.id === obj.sys.id) {\r\n        return { ...item, ...obj };\r\n      }\r\n      return item;\r\n    });\r\n    data.assets = result;\r\n\r\n    const status = 200;\r\n    switch (status) {\r\n      case 200:\r\n        _onOk(result);\r\n        break;\r\n      case 400:\r\n        _onBadRequest();\r\n        break;\r\n      case 401:\r\n        _unAuthorized();\r\n        break;\r\n      case 404:\r\n        _notFound();\r\n        break;\r\n      case 500:\r\n        _onServerError();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  return {\r\n    call: _call,\r\n    onOk: function(callback) {\r\n      _onOkCallBack = callback;\r\n      return this;\r\n    },\r\n    onServerError: function(callback) {\r\n      _onServerErrorCallBack = callback;\r\n      return this;\r\n    },\r\n    onBadRequest: function(callback) {\r\n      _onBadRequestCallBack = callback;\r\n      return this;\r\n    },\r\n    notFound: function(callback) {\r\n      _notFoundCallBack = callback;\r\n      return this;\r\n    },\r\n    unAuthorized: function(callback) {\r\n      _unAuthorizedCallBack = callback;\r\n      return this;\r\n    },\r\n    onConnectionError: function(callback) {\r\n      _onConnectionErrorCallBack = callback;\r\n      return this;\r\n    }\r\n  };\r\n}\r\nexport function deleteAsset() {\r\n  let _onOkCallBack;\r\n  function _onOk(result) {\r\n    if (_onOkCallBack) {\r\n      _onOkCallBack(result);\r\n    }\r\n  }\r\n  let _onServerErrorCallBack;\r\n  function _onServerError(result) {\r\n    if (_onServerErrorCallBack) {\r\n      _onServerErrorCallBack(result);\r\n    }\r\n  }\r\n  let _onBadRequestCallBack;\r\n  function _onBadRequest(result) {\r\n    if (_onBadRequestCallBack) {\r\n      _onBadRequestCallBack(result);\r\n    }\r\n  }\r\n  let _unAuthorizedCallBack;\r\n  function _unAuthorized(result) {\r\n    if (_unAuthorizedCallBack) {\r\n      _unAuthorizedCallBack(result);\r\n    }\r\n  }\r\n  let _notFoundCallBack;\r\n  function _notFound(result) {\r\n    if (_notFoundCallBack) {\r\n      _notFoundCallBack(result);\r\n    }\r\n  }\r\n  let _onConnectionErrorCallBack;\r\n  function _onConnectionError(result) {\r\n    if (_onConnectionErrorCallBack) {\r\n      _onConnectionErrorCallBack(result);\r\n    }\r\n  }\r\n  function _call(obj) {\r\n    //const status = rawResponse.status;\r\n    //const result = await rawResponse.json();\r\n\r\n    //\r\n\r\n    const result = data.assets.filter(item => item.sys.id !== obj.sys.id);\r\n    data.assets = result;\r\n\r\n    const status = 200;\r\n    switch (status) {\r\n      case 200:\r\n        _onOk(result);\r\n        break;\r\n      case 400:\r\n        _onBadRequest();\r\n        break;\r\n      case 401:\r\n        _unAuthorized();\r\n        break;\r\n      case 404:\r\n        _notFound();\r\n        break;\r\n      case 500:\r\n        _onServerError();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  return {\r\n    call: _call,\r\n    onOk: function(callback) {\r\n      _onOkCallBack = callback;\r\n      return this;\r\n    },\r\n    onServerError: function(callback) {\r\n      _onServerErrorCallBack = callback;\r\n      return this;\r\n    },\r\n    onBadRequest: function(callback) {\r\n      _onBadRequestCallBack = callback;\r\n      return this;\r\n    },\r\n    notFound: function(callback) {\r\n      _notFoundCallBack = callback;\r\n      return this;\r\n    },\r\n    unAuthorized: function(callback) {\r\n      _unAuthorizedCallBack = callback;\r\n      return this;\r\n    },\r\n    onConnectionError: function(callback) {\r\n      _onConnectionErrorCallBack = callback;\r\n      return this;\r\n    }\r\n  };\r\n}\r\nexport function getAssetById() {\r\n  let _onOkCallBack;\r\n  function _onOk(result) {\r\n    if (_onOkCallBack) {\r\n      _onOkCallBack(result);\r\n    }\r\n  }\r\n  let _onServerErrorCallBack;\r\n  function _onServerError(result) {\r\n    if (_onServerErrorCallBack) {\r\n      _onServerErrorCallBack(result);\r\n    }\r\n  }\r\n  let _onBadRequestCallBack;\r\n  function _onBadRequest(result) {\r\n    if (_onBadRequestCallBack) {\r\n      _onBadRequestCallBack(result);\r\n    }\r\n  }\r\n  let _unAuthorizedCallBack;\r\n  function _unAuthorized(result) {\r\n    if (_unAuthorizedCallBack) {\r\n      _unAuthorizedCallBack(result);\r\n    }\r\n  }\r\n  let _notFoundCallBack;\r\n  function _notFound(result) {\r\n    if (_notFoundCallBack) {\r\n      _notFoundCallBack(result);\r\n    }\r\n  }\r\n  let _onConnectionErrorCallBack;\r\n  function _onConnectionError(result) {\r\n    if (_onConnectionErrorCallBack) {\r\n      _onConnectionErrorCallBack(result);\r\n    }\r\n  }\r\n  function _call(id) {\r\n    //const status = rawResponse.status;\r\n    //const result = await rawResponse.json();\r\n\r\n    //\r\n\r\n    const result = data.assets.find(item => item.sys.id === id);\r\n    const status = 200;\r\n    switch (status) {\r\n      case 200:\r\n        _onOk(result);\r\n        break;\r\n      case 400:\r\n        _onBadRequest();\r\n        break;\r\n      case 401:\r\n        _unAuthorized();\r\n        break;\r\n      case 404:\r\n        _notFound();\r\n        break;\r\n      case 500:\r\n        _onServerError();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  return {\r\n    call: _call,\r\n    onOk: function(callback) {\r\n      _onOkCallBack = callback;\r\n      return this;\r\n    },\r\n    onServerError: function(callback) {\r\n      _onServerErrorCallBack = callback;\r\n      return this;\r\n    },\r\n    onBadRequest: function(callback) {\r\n      _onBadRequestCallBack = callback;\r\n      return this;\r\n    },\r\n    notFound: function(callback) {\r\n      _notFoundCallBack = callback;\r\n      return this;\r\n    },\r\n    unAuthorized: function(callback) {\r\n      _unAuthorizedCallBack = callback;\r\n      return this;\r\n    },\r\n    onConnectionError: function(callback) {\r\n      _onConnectionErrorCallBack = callback;\r\n      return this;\r\n    }\r\n  };\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./styles.scss\";\r\nimport { languageManager, useGlobalState } from \"../../services\";\r\nimport { getAssets, deleteAsset, filterAssets } from \"./../../Api/asset-api\";\r\n\r\nconst filters = [\r\n  {\r\n    id: \"0\",\r\n    name: \"all\",\r\n    title: \"All Files\",\r\n    icon: \"icon-folder\"\r\n  },\r\n  {\r\n    id: \"1\",\r\n    name: \"image\",\r\n    title: \"Image\",\r\n    icon: \"icon-images\"\r\n  },\r\n  {\r\n    id: \"2\",\r\n    name: \"video\",\r\n    title: \"Video\",\r\n    icon: \"icon-video\"\r\n  },\r\n  {\r\n    id: \"3\",\r\n    name: \"audio\",\r\n    title: \"Audio\",\r\n    icon: \"icon-audio\"\r\n  },\r\n  {\r\n    id: \"4\",\r\n    name: \"pdf\",\r\n    title: \"PDF\",\r\n    icon: \"icon-pdf\"\r\n  },\r\n  {\r\n    id: \"5\",\r\n    name: \"spreadsheet\",\r\n    title: \"Spreadsheet\",\r\n    icon: \"icon-spreadsheet\"\r\n  }\r\n];\r\n\r\nconst Assets = props => {\r\n  const currentLang = languageManager.getCurrentLanguage().name;\r\n  const [{ assets, status }, dispatch] = useGlobalState();\r\n\r\n  useEffect(() => {\r\n    getAssets()\r\n      .onOk(result => {\r\n        dispatch({\r\n          type: \"SET_ASSETS\",\r\n          value: result\r\n        });\r\n      })\r\n      .call();\r\n  }, []);\r\n\r\n  const { name: pageTitle, desc: pageDescription } = props.component;\r\n  const [selectedFileType, setFileType] = useState(filters[0]);\r\n  const [selectedStatus, setStatus] = useState({});\r\n\r\n  function handleFileTypeClick(selected) {\r\n    setFileType(selected);\r\n    filterAssets()\r\n      .onOk(result => {\r\n        dispatch({\r\n          type: \"SET_ASSETS\",\r\n          value: result\r\n        });\r\n      })\r\n      .call(selected.name, selectedStatus.name);\r\n  }\r\n  function handleStatusClick(selected) {\r\n    setStatus(selected);\r\n    filterAssets()\r\n      .onOk(result => {\r\n        dispatch({\r\n          type: \"SET_ASSETS\",\r\n          value: result\r\n        });\r\n      })\r\n      .call(selectedFileType.name, selected.name);\r\n  }\r\n  function openUploader() {\r\n    props.history.push(\"/addAsset\");\r\n  }\r\n  function openUploaderForEdit(file) {\r\n    props.history.push(`/editAsset/${file.sys.id}`);\r\n  }\r\n  function removeAsset(item) {\r\n    deleteAsset()\r\n      .onOk(result => {\r\n        dispatch({\r\n          type: \"SET_ASSETS\",\r\n          value: result\r\n        });\r\n      })\r\n      .call(item);\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"as-wrapper\">\r\n        <div className=\"as-header\">\r\n          <div className=\"as-header-left\">\r\n            <span className=\"as-header-title\">{pageTitle}</span>\r\n            <span className=\"as-header-description\">{pageDescription}</span>\r\n          </div>\r\n          <div className=\"as-header-right\" />\r\n        </div>\r\n        <div className=\"as-content\">\r\n          <div className=\"as-content-left\">\r\n            <div className=\"left-text\">Filter & Upload New File</div>\r\n            <div className=\"left-btnContent\">\r\n              <button className=\"btn btn-primary\" onClick={openUploader}>\r\n                Upload New File\r\n              </button>\r\n            </div>\r\n            <div className=\"filterContent\">\r\n              <div className=\"left-filters\">\r\n                <div className=\"title\">Filter Files by Extenstion</div>\r\n                {filters.map(f => (\r\n                  <div\r\n                    className=\"filter\"\r\n                    key={f.id}\r\n                    onClick={() => handleFileTypeClick(f)}\r\n                    style={{\r\n                      color:\r\n                        f.id === selectedFileType.id\r\n                          ? \"rgb(56,132,255)\"\r\n                          : \"black\"\r\n                    }}\r\n                  >\r\n                    <i className={[\"icon\", f.icon].join(\" \")} />\r\n                    <span className=\"name\">{f.title}</span>\r\n                    <span\r\n                      className=\"icon-circle-o iconSelected\"\r\n                      style={{\r\n                        display: f.id === selectedFileType.id ? \"block\" : \"none\"\r\n                      }}\r\n                    />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <div className=\"left-filters\">\r\n                <div className=\"title\">Filter Files By Status</div>\r\n                {status.map(f => (\r\n                  <div\r\n                    className=\"filter\"\r\n                    key={f.id}\r\n                    onClick={() => handleStatusClick(f)}\r\n                    style={{\r\n                      color:\r\n                        f.id === selectedStatus.id ? \"rgb(56,132,255)\" : \"black\"\r\n                    }}\r\n                  >\r\n                    <i className={[\"icon\", f.icon].join(\" \")} />\r\n                    <span className=\"name\">{f.title}</span>\r\n                    <span\r\n                      className=\"icon-circle-o iconSelected\"\r\n                      style={{\r\n                        display: f.id === selectedStatus.id ? \"block\" : \"none\"\r\n                      }}\r\n                    />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"as-content-right\">\r\n            <div className=\"header\">All assets</div>\r\n            <div className=\"rightTable\">\r\n              <table className=\"table\">\r\n                <thead className=\"table__head\">\r\n                  <tr>\r\n                    <th>#</th>\r\n                    <th>Preview</th>\r\n                    <th>Name</th>\r\n                    <th>Type</th>\r\n                    <th>By</th>\r\n                    <th>Status</th>\r\n                    <th>Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {assets.map((file, index) => (\r\n                    <tr key={index}>\r\n                      <td>\r\n                        <div className=\"as-table-number\">\r\n                          <div className=\"as-table-number-value\">\r\n                            {index + 1}\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                      <td>\r\n                        {file.fileType.toLowerCase().includes(\"image\") ? (\r\n                          <div className=\"as-table-image\">\r\n                            <img src={file.url[currentLang]} alt=\"\" />\r\n                          </div>\r\n                        ) : file.fileType.toLowerCase().includes(\"video\") ? (\r\n                          <div className=\"as-table-image\">\r\n                            <i className=\"icon-video\" />\r\n                          </div>\r\n                        ) : file.fileType.toLowerCase().includes(\"audio\") ? (\r\n                          <div className=\"as-table-image\">\r\n                            <i className=\"icon-audio\" />\r\n                          </div>\r\n                        ) : file.fileType.toLowerCase().includes(\"pdf\") ? (\r\n                          <div className=\"as-table-image\">\r\n                            <i className=\"icon-pdf\" />\r\n                          </div>\r\n                        ) : file.fileType\r\n                            .toLowerCase()\r\n                            .includes(\"spreadsheet\") ? (\r\n                          <div className=\"as-table-image\">\r\n                            <i className=\"icon-spreadsheet\" />\r\n                          </div>\r\n                        ) : (\r\n                          <div className=\"as-table-image\">\r\n                            <i className=\"icon-folder\" />\r\n                          </div>\r\n                        )}\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"as-table-name\">\r\n                          {file.name[currentLang]}\r\n                        </div>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"as-table-type\">{file.fileType}</div>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"as-table-by\">\r\n                          <span>{file.sys.issuer.fullName}</span>\r\n                          <span>{file.sys.issueDate}</span>\r\n                        </div>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"as-table-status\">\r\n                          <span className=\"adge badge-primary\">Draft</span>\r\n                        </div>\r\n                      </td>\r\n                      <td>\r\n                        <button\r\n                          className=\"btn btn-light\"\r\n                          onClick={() => removeAsset(file)}\r\n                        >\r\n                          <i className=\"icon-bin\" />\r\n                        </button>\r\n                        <button\r\n                          className=\"btn btn-light\"\r\n                          onClick={() => openUploaderForEdit(file)}\r\n                        >\r\n                          <i className=\"icon-pencil\" />\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Assets;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./styles.scss\";\r\nimport { useGlobalState, languageManager } from \"./../../services\";\r\nimport { getAssetById, addAsset, updateAsset } from \"./../../Api/asset-api\";\r\nimport {\r\n  String,\r\n  Number,\r\n  DateTime,\r\n  Location,\r\n  Media,\r\n  Boolean,\r\n  KeyValue,\r\n  RichText,\r\n  FileUploader\r\n} from \"./../../components\";\r\n\r\nconst fields = [\r\n  {\r\n    id: \"1\",\r\n    name: \"name\",\r\n    title: {\r\n      en: \"Name\",\r\n      fa: \"Name\"\r\n    },\r\n    description: {\r\n      fa: \"name of each product\",\r\n      en: \"name of each product\"\r\n    },\r\n    type: \"string\",\r\n    isBase: true,\r\n    isTranslate: true,\r\n    isRequired: true\r\n  },\r\n  {\r\n    id: \"2\",\r\n    name: \"shortDesc\",\r\n    title: {\r\n      fa: \"Short Description\",\r\n      en: \"Short Description\"\r\n    },\r\n    description: {\r\n      fa: \"\",\r\n      en: \"\"\r\n    },\r\n    type: \"string\",\r\n    isBase: true,\r\n    isTranslate: true\r\n  },\r\n  {\r\n    id: \"3\",\r\n    name: \"url\",\r\n    title: {\r\n      fa: \"Your File\",\r\n      en: \"Your File\"\r\n    },\r\n    description: {\r\n      fa: \"\",\r\n      en: \"Click on file selector top choose your file\"\r\n    },\r\n    type: \"fileUploader\",\r\n    mediaType: \"file\",\r\n    isBase: true,\r\n    isTranslate: true,\r\n    isRequired: true\r\n  }\r\n];\r\nconst UpsertFile = props => {\r\n  // variables\r\n  const [updateMode, toggleUpdateMode] = useState(\r\n    props.match.params.id ? true : false\r\n  );\r\n\r\n  const [formData, setFormData] = useState({});\r\n  const [formValidation, setFormValidation] = useState();\r\n  const [resetForm, setResetForm] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (updateMode) {\r\n      if (props.match.params.id !== undefined) {\r\n        if (props.match.params.id.length > 0) {\r\n          toggleUpdateMode(true);\r\n          getAssetItemById(props.match.params.id);\r\n        }\r\n      }\r\n    }\r\n  }, [props.match.params.id]);\r\n\r\n  // methods\r\n  function getAssetItemById(id) {\r\n    getAssetById()\r\n      .onOk(result => {\r\n        setFormData(result);\r\n      })\r\n      .call(id);\r\n  }\r\n  function setNameToFormValidation(name) {\r\n    \r\n    if (!formValidation || formValidation[name]!==null) {\r\n      setFormValidation(prevFormValidation => ({\r\n        [name]: null,\r\n        ...prevFormValidation\r\n      }));\r\n    }\r\n  }\r\n  function handleOnChangeValue(key, value, isValid) {\r\n    // add value to form\r\n    let f = { ...formData };\r\n    if (key === \"url\") {\r\n      f[key] = {\r\n        en: value[\"en\"],\r\n        fa: value[\"fa\"]\r\n      };\r\n      f.fileType = value.fileType;\r\n    } else f[key] = value;\r\n    setFormData(f);\r\n\r\n    // check validation\r\n    let obj = { ...formValidation };\r\n    if (isValid && obj) {\r\n      delete obj[key];\r\n      if (Object.keys(obj).length === 0) {\r\n        setFormValidation(undefined);\r\n      } else {\r\n        setFormValidation(obj);\r\n      }\r\n    } else {\r\n      if (obj === undefined) {\r\n        obj = {};\r\n      }\r\n      obj[key] = null;\r\n      setFormValidation(obj);\r\n    }\r\n  }\r\n\r\n  function getFieldItem(field) {\r\n    switch (field.type.toLowerCase()) {\r\n      case \"string\":\r\n        return (\r\n          <String\r\n            reset={resetForm}\r\n            field={field}\r\n            formData={formData}\r\n            init={setNameToFormValidation}\r\n            onChangeValue={handleOnChangeValue}\r\n          />\r\n        );\r\n      case \"number\":\r\n        return (\r\n          <Number\r\n            reset={resetForm}\r\n            field={field}\r\n            formData={formData}\r\n            init={setNameToFormValidation}\r\n            onChangeValue={handleOnChangeValue}\r\n          />\r\n        );\r\n      case \"datetime\":\r\n        return (\r\n          <DateTime\r\n            reset={resetForm}\r\n            field={field}\r\n            formData={formData}\r\n            init={setNameToFormValidation}\r\n            onChangeValue={handleOnChangeValue}\r\n          />\r\n        );\r\n      case \"location\":\r\n        return (\r\n          <Location\r\n            reset={resetForm}\r\n            field={field}\r\n            formData={formData}\r\n            init={setNameToFormValidation}\r\n            onChangeValue={handleOnChangeValue}\r\n          />\r\n        );\r\n      case \"media\":\r\n        return (\r\n          <Media\r\n            reset={resetForm}\r\n            formData={formData}\r\n            field={field}\r\n            init={setNameToFormValidation}\r\n            onChangeValue={handleOnChangeValue}\r\n          />\r\n        );\r\n      case \"fileuploader\":\r\n        return (\r\n          <FileUploader\r\n            reset={resetForm}\r\n            formData={formData}\r\n            field={field}\r\n            init={setNameToFormValidation}\r\n            onChangeValue={handleOnChangeValue}\r\n          />\r\n        );\r\n      case \"boolean\":\r\n        return (\r\n          <Boolean\r\n            reset={resetForm}\r\n            field={field}\r\n            formData={formData}\r\n            init={setNameToFormValidation}\r\n            onChangeValue={handleOnChangeValue}\r\n          />\r\n        );\r\n      case \"keyvalue\":\r\n        return (\r\n          <KeyValue\r\n            reset={resetForm}\r\n            field={field}\r\n            formData={formData}\r\n            init={setNameToFormValidation}\r\n            onChangeValue={handleOnChangeValue}\r\n          />\r\n        );\r\n      case \"richtext\":\r\n        return (\r\n          <RichText\r\n            reset={resetForm}\r\n            field={field}\r\n            formData={formData}\r\n            init={setNameToFormValidation}\r\n            onChangeValue={handleOnChangeValue}\r\n          />\r\n        );\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  function backToAssets() {\r\n    props.history.push(\"/home/assets\");\r\n  }\r\n\r\n  function upsertItem(closePage) {\r\n    if (updateMode) {\r\n      updateAsset()\r\n        .onOk(result => {\r\n          if (closePage) {\r\n            backToAssets();\r\n          } else {\r\n            setResetForm(true);\r\n            setFormData({});\r\n            setFormValidation();\r\n          }\r\n        })\r\n        .call(formData);\r\n    } else {\r\n      const obj = {\r\n        sys: {\r\n          id: Math.random().toString(),\r\n          issuer: {\r\n            fullName: \"Saeed Padyab\",\r\n            image: \"\"\r\n          },\r\n          issueDate: \"19/01/2019 20:18\"\r\n        },\r\n        name: formData.name,\r\n        shorDesc: formData.shortDesc,\r\n        status: {},\r\n        url: formData.url,\r\n        fileType: formData.fileType\r\n      };\r\n      addAsset()\r\n        .onOk(result => {\r\n          if (closePage) {\r\n            backToAssets();\r\n          } else {\r\n            setResetForm(true);\r\n            setFormData({});\r\n            setFormValidation();\r\n          }\r\n        })\r\n        .call(obj);\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"up-wrapper\">\r\n      <div className=\"up-header\">\r\n        <button className=\"btn btn-light\" onClick={backToAssets}>\r\n          <i className=\"icon-arrow-left2\" />\r\n          Back\r\n        </button>\r\n        <div className=\"tabItems\">\r\n          <div className=\"item active\">1.Upload new file</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"up-content\">\r\n        <main>\r\n          <div className=\"up-content-title\">\r\n            {updateMode ? \"Edit \" : \"Upload new file\"}\r\n          </div>\r\n          <div className=\"up-formInputs animated fadeIn\">\r\n            {fields.map(field => (\r\n              <div key={field.id} className=\"rowItem\">\r\n                {getFieldItem(field)}\r\n              </div>\r\n            ))}\r\n            <div className=\"actions\">\r\n              {!updateMode && (\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  onClick={() => upsertItem(false)}\r\n                  disabled={\r\n                    !(\r\n                      Object.keys(formData).length > 0 &&\r\n                      formValidation === undefined\r\n                    )\r\n                  }\r\n                >\r\n                  Save & New\r\n                </button>\r\n              )}\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={() => upsertItem(true)}\r\n                disabled={\r\n                  !(\r\n                    Object.keys(formData).length > 0 &&\r\n                    formValidation === undefined\r\n                  )\r\n                }\r\n              >\r\n                {updateMode ? \"Update & Close\" : \"Save & Close\"}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpsertFile;\r\n","import { languageManager } from \"./services\";\r\n\r\nimport Login from \"./Packages/Login\";\r\nimport Signup from \"./Packages/Signup\";\r\nimport Home from \"./Packages/Home\";\r\nimport Categories from \"./Packages/Categories\";\r\nimport ContentType from \"./Packages/ContentType\";\r\nimport ManageUsers from \"./Packages/ManageUsers\";\r\nimport Products from \"./Packages/Products\";\r\n// import Requests from \"./Packages/Requests\";\r\n// import Quotes from \"./Packages/Quotes\";\r\nimport UpsertProduct from \"./Packages/UpsertProduct\";\r\nimport Assets from \"./Packages/Assets\";\r\nimport UploadFile from \"./Packages/upsertFile\";\r\n\r\nfunction translate(key) {\r\n  return languageManager.translate(key);\r\n}\r\n\r\nconst routes = [\r\n  {\r\n    path: \"/login\",\r\n    component: Login\r\n  },\r\n  {\r\n    path: \"/signup\",\r\n    component: Signup\r\n  },\r\n  {\r\n    path: \"/home\",\r\n    component: Home,\r\n    routes: [\r\n      {\r\n        name: translate(\"HOME_SIDE_NAV_CONTENT_TYPE\"),\r\n        icon: \"item-type\",\r\n        path: \"/home/contentType\",\r\n        desc: translate(\"HOME_SIDE_NAV_CONTENT_TYPE_DEC\"),\r\n        component: ContentType\r\n      },\r\n      {\r\n        name: translate(\"HOME_SIDE_NAV_CATEGRIES\"),\r\n        icon: \"category\",\r\n        path: \"/home/categories\",\r\n        desc: translate(\"HOME_SIDE_NAV_CATEGORIES_DEC\"),\r\n        component: Categories\r\n      },\r\n      {\r\n        name: translate(\"HOME_SIDE_NAV_PRODUCTS\"),\r\n        icon: \"product\",\r\n        path: \"/home/products\",\r\n        desc: translate(\"HOME_SIDE_NAV_PRODUCTS_DESC\"),\r\n        component: Products\r\n      },\r\n\r\n      // {\r\n      //   name: translate(\"HOME_SIDE_NAV_REQUESTS\"),\r\n      //   icon: \"request\",\r\n      //   path: \"/home/requests\",\r\n      //   desc: translate(\"HOME_SIDE_NAV_REQUESTS_DESC\"),\r\n      //   component: Requests\r\n      // },\r\n      // {\r\n      //   name: translate(\"HOME_SIDE_NAV_QUOTES\"),\r\n      //   icon: \"quote\",\r\n      //   path: \"/home/quotes\",\r\n      //   desc: translate(\"HOME_SIDE_NAV_QUOTES_DESC\"),\r\n      //   component: Quotes\r\n      // },\r\n      {\r\n        name: translate(\"HOME_SIDE_NAV_MANAGET_USERS\"),\r\n        icon: \"users\",\r\n        path: \"/home/manageUsers\",\r\n        desc: translate(\"HOME_SIDE_NAV_MANAGE_USERS_DESC\"),\r\n        component: ManageUsers\r\n      },\r\n      {\r\n        name: translate(\"HOME_SIDE_NAV_ASSETS_MANAGER\"),\r\n        icon: \"images\",\r\n        path: \"/home/assets\",\r\n        desc: translate(\"HOME_SIDE_NAV_ASSETS_MANAGER_DESC\"),\r\n        component: Assets\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: \"/addNew\",\r\n    component: UpsertProduct\r\n  },\r\n  {\r\n    path: \"/editItem/:id\",\r\n    component: UpsertProduct\r\n  },\r\n  {\r\n    name: translate(\"HOME_SIDE_NAV_ASSETS_MANAGER_UPLOAD\"),\r\n    icon: \"folder\",\r\n    path: \"/addAsset\",\r\n    desc: translate(\"HOME_SIDE_NAV_ASSETS_MANAGER_DESC_UPLOAD\"),\r\n    component: UploadFile\r\n  },\r\n  {\r\n    path: \"/editAsset/:id\",\r\n    component: UploadFile\r\n  }\r\n];\r\nexport default routes;\r\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport StateProvider from \"./services/stateManager/stateProvider\";\nimport \"./styles/app.scss\";\nimport \"animate.css\";\n\nimport Routes from \"./routes\";\n\nconst App = () => {\n  return (\n    <StateProvider>\n      <BrowserRouter>\n        <div>\n          <Switch>\n            {Routes.map(route => (\n              <Route\n                key={route.path}\n                path={route.path}\n                render={props => {\n                  const Component = route.component;\n                  let nestedRoutes;\n                  if (route.routes) {\n                    nestedRoutes = (\n                      <>\n                        {route.routes.map(nestedRoute => (\n                          <Route\n                            exact\n                            key={nestedRoute.path}\n                            path={nestedRoute.path}\n                            render={props => {\n                              const NestedComponent = nestedRoute.component;\n                              const p = {\n                                ...props,\n                                component: nestedRoute\n                              };\n                              return <NestedComponent {...p} />;\n                            }}\n                          />\n                        ))}\n                      </>\n                    );\n                  }\n                  return <Component {...props} routes={nestedRoutes} />;\n                }}\n              />\n            ))}\n            {/* <Route to=\"/not-found\" render={props=><NoutFound/>}/> */}\n            {/* اگه دقیقا / رو زد برو لاگین */}\n            <Redirect from=\"/\" to=\"/home\" exact />\n            {/* اگه هیچی نزد یا چرت و پرت زد برو اون روتی که نات فاند هست */}\n            {/* <Redirect to=\"/not-found\"/> */}\n          </Switch>\n        </div>\n      </BrowserRouter>\n    </StateProvider>\n  );\n};\n\nexport default App;\n\n// function makeData(len = 10) {\n//   return range(len).map(d => {\n//     return {\n//       ...newProduct(),\n//       children: range(10).map(newProduct)\n//     };\n//   });\n// }\n\n// function newProduct() {\n//   return {\n//     thumbnail:\n//       \"https://myresources1195.blob.core.windows.net/images/banana.jpg\",\n//     name: \"موز ممتاز\",\n//     description: \"محصولات وارداتی از افریقا\",\n//     price: \"2500 $\",\n//     brand: \"Banana\"\n//   };\n// }\n// function range(len) {\n//   const arr = [];\n//   for (let i = 0; i < len; i++) {\n//     arr.push(i);\n//   }\n//   return arr;\n// }\n//   function createTree(list) {\n//     var map = {},\n//       node,\n//       roots = [],\n//       i;\n//     for (i = 0; i < list.length; i += 1) {\n//       map[list[i].id] = i; // initialize the map\n//       list[i].children = []; // initis\n//     }\n//     for (i = 0; i < list.length; i += 1) {\n//       node = list[i];\n//       if (node.parentId) {\n//         // if you have dangling branches check that map[node.parentId] exists\n//         list[map[node.parentId]].children.push(node);\n//       } else {\n//         roots.push(node);\n//       }\n//     }\n//     return roots;\n//   }\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}