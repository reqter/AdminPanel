{"version":3,"sources":["services/stateManager/index.js","services/stateManager/stateProvider.jsx","services/languageManager/index.js","services/languageManager/locale/en.js","services/languageManager/locale/fa.js","Packages/Login/index.jsx","Packages/Signup/index.jsx","Packages/Home/components/SideBar/components/profileWidget/index.jsx","Packages/Home/components/SideBar/components/SideLinks/linkItem.jsx","Packages/Home/components/SideBar/components/SideLinks/index.jsx","Packages/Home/components/SideBar/index.jsx","Packages/Home/index.jsx","Packages/Categories/tree.jsx","Packages/Categories/modals/AddItemType/index.jsx","Packages/Categories/index.jsx","Packages/ContentType/list/index.jsx","Packages/ContentType/modals/AddNewField/index.jsx","Packages/ContentType/modals/AddNewItemType/index.jsx","Packages/ContentType/index.jsx","Packages/ManageUsers/index.jsx","Packages/Products/Categories/index.jsx","Packages/Products/index.jsx","Packages/Requests/index.jsx","Packages/Quotes/index.jsx","Packages/UpsertProduct/Categories/tree.jsx","Packages/UpsertProduct/Categories/index.jsx","Packages/UpsertProduct/Inputs/Boolean/index.jsx","Packages/UpsertProduct/Inputs/DateTime/index.jsx","Packages/UpsertProduct/Inputs/KeyValue/index.jsx","Packages/UpsertProduct/Inputs/Location/index.jsx","Packages/UpsertProduct/Inputs/Media/index.jsx","Packages/UpsertProduct/Inputs/Number/index.jsx","Packages/UpsertProduct/Inputs/RichText/index.jsx","Packages/UpsertProduct/Inputs/String/index.jsx","Packages/UpsertProduct/index.jsx","routes.js","App.js","serviceWorker.js","index.js"],"names":["StateContext","createContext","StateProvider","_ref","reducer","initialState","children","react_default","a","createElement","Provider","value","useReducer","useGlobalState","useContext","props","stateManager_StateProvider","projectInfo","name","contentTypes","id","title","description","type","template","allowCustomFields","fields","isBase","categories","contents","state","action","Object","objectSpread","systemDefaultLang","direction","languages","fa","en","translate","LOGIN_TITLE","LOGIN_EMAIL_INPUT_TITLE","LOGIN_EMAIL_INPUT_PLACEHOLDER","LOGIN_EMAIL_INPUT_DESCRIPTION","LOGIN_PASSWORD_INPUT","LOGIN_PASSWORD_INPUT_PLACEHOLDER","LOGIN_PASSWORD_INPUT_DESCRIPTION","LOGIN_SUBMIT_BTN","LOGIN_SOCIAL_TEXT","LOGIN_SIGNUP_LINK_TITLE","LOGIN_SIGNUP_LINK","LOGIN_SOCIAL_BTN_GOOGLE","LOGIN_SOCIAL_BTN_GITHUB","SIGNUP_TITLE","SIGNUP_LOGIN_LINK_TITLE","SIGNUP_LOGIN_LINK","SIGNUP_CONFIRM_PASSWORD_INPUT","SIGNUP_CONFIRM_PASSWORD_INPUT_PLACEHOLDER","SIGNUP_CONFIRM_PASSWORD_INPUT_DESCRIPTION","BRAND_NAME","HOME_NAVS_TITLE","HOME_SIDE_NAV_MANAGET_USERS","HOME_SIDE_NAV_MANAGE_USERS_DESC","HOME_SIDE_NAV_CATEGRIES","HOME_SIDE_NAV_CATEGORIES_DEC","HOME_SIDE_NAV_CONTENT_TYPE","HOME_SIDE_NAV_CONTENT_TYPE_DEC","HOME_SIDE_NAV_PRODUCTS","HOME_SIDE_NAV_PRODUCTS_DESC","HOME_SIDE_NAV_REQUESTS","HOME_SIDE_NAV_REQUESTS_DESC","HOME_SIDE_NAV_QUOTES","HOME_SIDE_NAV_QUOTES_DESC","HOME_SIDEAR_ABOUT","HOME_SIDEBAR_BLOG","HOME_SIDEBAR_DOCUMENT","HOME_COPY_RIGHT","HOME_SIDEBAR_PROFILE_SETTINGS","HOME_SIDEBAR_PROFILE_LOGOUT","CATEGORIES_MODAL_HEADER_TITLE_NEW","CATEGORIES_MODAL_HEADER_TITLE_EDIT","CATEGORIES_NEW_CATEGORY_BTN","CATEGORIES_MODAL_NAME","CATEGORIES_MODAL_NAME_PLACEHOLDER","CATEGORIES_MODAL_NAME_DESCRIPTION","CATEGORIES_MODAL_DESCRIPTION","CATEGORIES_MODAL_DESCRIPTION_PLACEHOLDER","CATEGORIES_MODAL_FOOTER_UPSERT_BTN_NEW","CATEGORIES_MODAL_FOOTER_UPSERT_BTN_EDIT","CANCEL","CATEGROES_CONTENT_TYPES","CATEGORIES_ITEM_TYPES_HEADER_TITLE","CATEGORIES_ITEM_TYPES_HEADER_DESC","CATEGORY_ITEM_TYPE_MODAL_HEADER_TITLE","CONTENT_TYPE_MODAL_HEADER_TITLE_NEW","CONTENT_TYPE_MODAL_FOOTER_UPSERT_BTN_NEW","CONTENT_TYPE_MODAL_HEADER_TITLE_EDIT","CONTENT_TYPE_MODAL_FOOTER_UPSERT_BTN_EDIT","CONTENT_TYPE_MODEL_HEADER_TITLE","CONTENT_TYPE_MODEL_HEADER_DESC","CONTENT_TYPE_MODAL_NAME","CONTENT_TYPE_MODAL_NAME_PLACEHOLDER","CONTENT_TYPE_MODAL_NAME_DESCRIPTION","CONTENT_TYPE_MODAL_DESCRIPTION","CONTENT_TYPE_MODAL_DESCRIPTION_PLACEHOLDER","CONTENT_TYPE_NEW_ITEM_BTN","CONTENT_TYPE_ADD_FIELD_TITLE","CONTENT_TYPE_ADD_FIELD_MODAL_NAME","CONTENT_TYPE_ADD_FIELD_MODAL_NAME_PLACEHOLDER","CONTENT_TYPE_ADD_FIELD_MODAL_NAME_INFO","CONTENT_TYPE_ADD_FIELD_MODAL_TITLE","CONTENT_TYPE_ADD_FIELD_MODAL_TITLE_PLACEHOLDER","CONTENT_TYPE_ADD_FIELD_MODAL_TITLE_INFO","CONTENT_TYPE_ADD_FIELD_MODAL_DESCRIPTION","CONTENT_TYPE_ADD_FIELD_MODAL_DESCRIPTION_PLACEHOLDER","CONTENT_TYPE_ADD_FIELD_MODAL_DESCRIPTION_INFO","CONTENT_TYPE_ADD_FIELD_MODAL_CREATE_BTN","CONTENT_TYPE_ADD_FIELD_MODAL_CREATE_CONFIG_BTN","CONTENT_TYPE_ADD_FIELD_MODAL_CHNAGE_FIELD_BTN","CONTENT_TYPE_ADD_FIELD_CHOOSEN","FIELD_TYPE_RICH_TEXT","FIELD_TYPE_RICH_TEXT_INFO","FIELD_TYPE_TEXT","FIELD_TYPE_TEXT_INFO","FIELD_TYPE_NUMBER","FIELD_TYPE_NUMBER_INFO","FIELD_TYPE_DATE_TIME","FIELD_TYPE_DATE_TIME_INFO","FIELD_TYPE_LOCATION","FIELD_TYPE_LOCATION_INFO","FIELD_TYPE_MEDIA","FIELD_TYPE_MEDIA_INFO","FIELD_TYPE_KEY_VALUE","FIELD_TYPE_KEY_VALUE_INFO","FIELD_TYPE_BOOLEAN","FIELD_TYPE_BOOLEAN_INFO","FIELD_TYPE_OBJECT","FIELD_TYPE_OBJECT_INFO","FIELD_TYPE_REFERENCE","FIELD_TYPE_REFERENCE_INFO","ITEM_TYPES_FIELDS","ITEMS_CATEGORIES_CONTENT","CATEGROES_FIELDS","CATEGORIES_MODEL_HEADER_TITLE","CATEGORIES_MODEL_HEADER_DESC","CATEGORY_ADD_FIELD_TITLE","CATEGORY_ADD_FIELD_CHOOSEN","CATEGORIES_ADD_FIELD_MODAL_NAME","CATEGORIES_ADD_FIELD_MODAL_NAME_PLACEHOLDER","CATEGORIES_ADD_FIELD_MODAL_NAME_INFO","CATEGORIES_ADD_FIELD_MODAL_TITLE","CATEGORIES_ADD_FIELD_MODAL_TITLE_PLACEHOLDER","CATEGORIES_ADD_FIELD_MODAL_TITLE_INFO","CATEGORIES_ADD_FIELD_MODAL_DESCRIPTION","CATEGORIES_ADD_FIELD_MODAL_DESCRIPTION_PLACEHOLDER","CATEGORIES_ADD_FIELD_MODAL_DESCRIPTION_INFO","CATEGORIES_ADD_FIELD_MODAL_CREATE_BTN","CATEGORIES_ADD_FIELD_MODAL_CREATE_CONFIG_BTN","CATEGORIES_ADD_FIELD_MODAL_CHNAGE_FIELD_BTN","currentLanguage","languageManager","key","undefined","setLanguage","langName","hasOwnProperty","keys","getCurrentLanguage","getCurrentLayout","setAppLanguages","enabledLanguages","getAllLanguages","isRTL","memo","_len","arguments","length","Array","_key","className","aria-describedby","placeholder","onClick","history","replace","Link","to","ProfileWidget","_useState","useState","_useState2","slicedToArray","dropDownVisibility","toggleVisibility","Dropdown","isOpen","toggle","prevState","DropdownToggle","DropdownMenu","DropdownItem","LinkItem","link","icon","concat","NavLink","path","activeClassName","desc","NavLinks","links","Fragment","map","linkItem","SideBar","_useGlobalState","_useGlobalState2","profileWidget","SideLinks","href","Home","components_SideBar","routes","Tree","selected","event","target","getAttribute","_this","setState","defineProperty","mapper","nodes","parentId","lvl","node","index","ListGroupItem","style","zIndex","padding","background","paddingLeft","color","size","handleDeleteCategory","handleEditCategory","handleItemTypes","fontSize","handleNewCategory","fontWeight","Collapse","ListGroup","this","data","current_state","rightContent","Component","AddNewField","selectedCategory","items","itemTypes","d","slice","j","i","makeData","allData","_useState3","_useState4","toggleModal","closeModal","params","onCloseModal","useEffect","Modal","ModalHeader","ModalBody","item","for","onChange","e","checked","push","arr","filter","handleChooseItem","useInput","defaultValue","input","setInput","Categories","_useGlobalState2$","dispatch","_props$component","component","pageTitle","pageDescription","newCategoryNameInput","useRef","upsertCategoryModal","setModal","_useState5","_useState6","upsertItemTypeModal","toggleUpsertItemTypeModal","_useInput","_useInput2","handleNameChanged","_useInput3","_useInput4","handleDesciptionChanged","_useState7","_useState8","setSelectedCategory","_useState9","_useState10","setItemTypes","_useState11","_useState12","updateMode","setUpdateMode","_useState13","_useState14","modalHeaderTitle","setModalHeader","_useState15","_useState16","modalUpsertBtn","setModalUpsertBtnText","_useState17","_useState18","toggleRightContent","_useState19","_useState20","isManageCategory","setManageCategory","initModalForm","prevModal","closeAddCategoryModal","updateNodeInList","list","newValue","removeCategoryItem","deleteNodeInList","splice","toConsumableArray","closeAddItemTypeModal","updateCategoryItemTypes","tree","setTimeout","current","focus","category","m","showItemTypes","itemType","handleRemoveItemType","Form","ref","required","FormGroup","Label","Input","ModalFooter","Button","newCategory","obj","Math","random","toString","upsertCategory","disabled","AddItemType","List","console","log","setSelected","listItem","backgroundColor","marginRight","handleDeleteType","handleEditType","handleShowFields","nameInput","tab","changeTab","newFieldHeaderTitle","setAddFieldHeaderTitle","selectedField","setField","setName","setTitle","setDescription","closeAddFieldModal","field","handleChooseField","onAddField","includes","templates","isList","UpsertTemplate","submitBtnText","selectedItemType","selectedTemplate","setTemplate","tmp","handleChooseTemplate","baseFields","ItemTypes","upsertFieldModal","toggleUpsertFieldModal","toggleUpserItemTypeModal","setItemType","setFields","removeItemType","handleRemoveField","AddNewItemType","upsertItemType","modals_AddNewField","handleAddField","ManageUsers","hasContentType","onContentSelect","leftContent","table_data","thumbnail","price","brand","Products","baseFieldColumnsConfig","Header","width","headerStyle","display","Cell","accessor","src","alt","row","categories_data","tableBox","treeData","checkContentType","gridData","listContent","toggleLeftContent","tableHeaderTitle","setTableHeaderTitle","selectedNode","setSelectedNode","columns","pathname","Products_Categories","handleClickCategoryContent","es","defaultPageSize","minRows","showPaginationTop","showPaginationBottom","overflowX","height","Requests","Quotes","onRowSelect","Categories_tree","categoriesData","handleRowSelect","BooleanComponent","appearance","DateTimeInput","KeyValueInput","options","option","class","LocationInput","MediaInput","images","setImages","image","imgs","img","removeImage","url","URL","createObjectURL","files","NumberInput","RichTextInput","StringInput","handleOnChange","isRequired","isValid","onChangeValue","init","isMultiLine","mediaType","UpsertProduct","location","checkCategoryHasContentType","categoryModal","toggleCategoryModal","checkPropsToSetCategoryBoxTitle","categoryBoxTitle","setCategoryBoxTitle","f","sort","b","_ref2","form","setForm","formValidation","setFormValidation","setNameToFormValidation","prevFormValidation","handleOnChangeValue","toLowerCase","Inputs_String","Inputs_Number","DateTime","Location","Media","Inputs_Boolean","KeyValue","RichText","getFieldItem","UpsertProduct_Categories","Login","Signup","ContentType","App","stateProvider","BrowserRouter","Switch","Routes","route","Route","render","nestedRoutes","nestedRoute","exact","NestedComponent","p","assign","Redirect","from","Boolean","window","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e3c95799.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer } from \"react\";\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children}\r\n  </StateContext.Provider>\r\n);\r\n\r\nconst useGlobalState = () => useContext(StateContext);\r\nexport default useGlobalState;\r\n","import React from \"react\";\r\nimport { StateProvider } from \"./index\";\r\nconst Provider = props => {\r\n  const initialState = {\r\n    projectInfo: { name: \"REQTER\" },\r\n    contentTypes: [\r\n      {\r\n        id: \"1\",\r\n        name: \"generic\",\r\n        title: \"Generic Item\",\r\n        description: \"Lorem ipsum dolor sit amet, consectetur\",\r\n        type: \"contentType\",\r\n        template: \"generic\",\r\n        allowCustomFields: true,\r\n        fields: [\r\n          {\r\n            id: \"1\",\r\n            name: \"name\",\r\n            title: \"Name\",\r\n            description: \"name of each product\",\r\n            type: \"string\",\r\n            isBase: true\r\n          },\r\n          {\r\n            id: \"2\",\r\n            name: \"shortDesc\",\r\n            title: \"Short Description\",\r\n            description: \"\",\r\n            type: \"string\",\r\n            isBase: true\r\n          },\r\n          {\r\n            id: \"3\",\r\n            name: \"thumbnail\",\r\n            title: \"Thumbnail\",\r\n            description: \"\",\r\n            type: \"media\",\r\n            isBase: true\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    categories: [],\r\n    contents: []\r\n  };\r\n\r\n  const reducer = (state, action) => {\r\n    switch (action.type) {\r\n      case \"SET_CONTENT_TYPES\":\r\n        const s = {\r\n          ...state,\r\n          contentTypes: action.value\r\n        };\r\n        return s;\r\n      case \"SET_CATEGORIES\":\r\n        return {\r\n          ...state,\r\n          categories: action.value\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StateProvider initialState={initialState} reducer={reducer}>\r\n      {props.children}\r\n    </StateProvider>\r\n  );\r\n};\r\nexport default Provider;\r\n","import en from \"./locale/en\";\r\nimport fa from \"./locale/fa\";\r\nlet systemDefaultLang = {\r\n  title: \"فارسی\",\r\n  direction: \"rtl\",\r\n  name: \"fa\",\r\n  description: \"جمهوری اسلامی ایران\"\r\n};\r\n\r\nlet languages = {\r\n  fa: {\r\n    title: \"فارسی\",\r\n    direction: \"rtl\",\r\n    name: \"fa\",\r\n    description: \"جمهوری اسلامی ایران\"\r\n  },\r\n  en: {\r\n    title: \"English\",\r\n    name: \"en\",\r\n    direction: \"ltr\",\r\n    description: \"United Kingdom\"\r\n  }\r\n};\r\nlet translate = {\r\n  en,\r\n  fa\r\n};\r\n\r\n// let currentLanguage = {\r\n//   title: \"فارسی\",\r\n//   direction: \"rtl\",\r\n//   name: \"fa\",\r\n//   description: \"جمهوری اسلامی ایران\"\r\n// };\r\n  \r\nlet currentLanguage = {\r\n  title: \"English\",\r\n  name: \"en\",\r\n  direction: \"ltr\",\r\n  description: \"United Kingdom\"\r\n};\r\n\r\nconst languageManager = {\r\n  translate(key) {\r\n    if (translate !== undefined && translate[currentLanguage.name])\r\n      return translate[currentLanguage.name][key]\r\n        ? translate[currentLanguage.name][key]\r\n        : key;\r\n    else return key;\r\n  },\r\n  setLanguage(langName) {\r\n    if (langName !== undefined) {\r\n      if (!languages.hasOwnProperty(langName)) {\r\n        currentLanguage = languages[Object.keys(languages)[0]];\r\n      } else {\r\n        currentLanguage = languages[langName];\r\n      }\r\n      if (\r\n        !(currentLanguage && currentLanguage.name && currentLanguage.direction)\r\n      ) {\r\n        currentLanguage = systemDefaultLang;\r\n      }\r\n      //EventRegister.emit(\"onLanguageChanged\", currentLanguage);\r\n    }\r\n  },\r\n  getCurrentLanguage() {\r\n    return currentLanguage;\r\n  },\r\n  getCurrentLayout() {\r\n    return currentLanguage.direction;\r\n  },\r\n  setAppLanguages(enabledLanguages) {\r\n    if (enabledLanguages) {\r\n      languages = enabledLanguages;\r\n    }\r\n  },\r\n  getAllLanguages() {\r\n    return languages;\r\n  },\r\n  get isRTL() {\r\n    return currentLanguage.direction === \"rtl\" ? true : false;\r\n  }\r\n};\r\nexport default languageManager;\r\n","export default {\r\n  LOGIN_TITLE: \"SignIn Reqter\",\r\n  LOGIN_EMAIL_INPUT_TITLE: \"Email Address\",\r\n  LOGIN_EMAIL_INPUT_PLACEHOLDER: \"Enter email\",\r\n  LOGIN_EMAIL_INPUT_DESCRIPTION: \"you can also enter your username\",\r\n  LOGIN_PASSWORD_INPUT: \"Password\",\r\n  LOGIN_PASSWORD_INPUT_PLACEHOLDER: \"Enter pssword\",\r\n  LOGIN_PASSWORD_INPUT_DESCRIPTION: \"Password must be at least 6 character\",\r\n  LOGIN_SUBMIT_BTN: \"Submit\",\r\n  LOGIN_SOCIAL_TEXT: \"OR SIGNIN WITH\",\r\n  LOGIN_SIGNUP_LINK_TITLE: \"New to REQTER ?\",\r\n  LOGIN_SIGNUP_LINK: \"Create an accout\",\r\n  LOGIN_SOCIAL_BTN_GOOGLE: \"Google\",\r\n  LOGIN_SOCIAL_BTN_GITHUB: \"Github\",\r\n\r\n  // SIGNUP\r\n  SIGNUP_TITLE: \"Signup Reqter\",\r\n  SIGNUP_LOGIN_LINK_TITLE: \"Have an account?\",\r\n  SIGNUP_LOGIN_LINK: \"Login\",\r\n  SIGNUP_CONFIRM_PASSWORD_INPUT: \"Confirm Password\",\r\n  SIGNUP_CONFIRM_PASSWORD_INPUT_PLACEHOLDER: \"Confirm your password\",\r\n  SIGNUP_CONFIRM_PASSWORD_INPUT_DESCRIPTION:\r\n    \"Password must be at least 6 character\",\r\n  // home\r\n  BRAND_NAME: \"REQTER\",\r\n  HOME_NAVS_TITLE: \"Features\",\r\n  HOME_SIDE_NAV_MANAGET_USERS: \"App Users\",\r\n  HOME_SIDE_NAV_MANAGE_USERS_DESC: \"Manage users of your apps\",\r\n  HOME_SIDE_NAV_CATEGRIES: \"Categories\",\r\n  HOME_SIDE_NAV_CATEGORIES_DEC: \"Define your business categories\",\r\n  HOME_SIDE_NAV_CONTENT_TYPE: \"Item Types\",\r\n  HOME_SIDE_NAV_CONTENT_TYPE_DEC: \"Manage your item types\",\r\n  HOME_SIDE_NAV_PRODUCTS: \"Items\",\r\n  HOME_SIDE_NAV_PRODUCTS_DESC: \"Define and manage your items\",\r\n  HOME_SIDE_NAV_REQUESTS: \"Requests\",\r\n  HOME_SIDE_NAV_REQUESTS_DESC: \"View and approve incoming requests\",\r\n  HOME_SIDE_NAV_QUOTES: \"Quotes\",\r\n  HOME_SIDE_NAV_QUOTES_DESC: \"View and approve offers from vendors\",\r\n  HOME_SIDEAR_ABOUT: \"About\",\r\n  HOME_SIDEBAR_BLOG: \"Blog\",\r\n  HOME_SIDEBAR_DOCUMENT: \"Document\",\r\n  HOME_COPY_RIGHT: \"@2019 Copyright\",\r\n  HOME_SIDEBAR_PROFILE_SETTINGS: \"Settings\",\r\n  HOME_SIDEBAR_PROFILE_LOGOUT: \"Logout\",\r\n  //category\r\n  CATEGORIES_MODAL_HEADER_TITLE_NEW: \"New Category\",\r\n  CATEGORIES_MODAL_HEADER_TITLE_EDIT: \"Edit Category\",\r\n  CATEGORIES_NEW_CATEGORY_BTN: \"New Category\",\r\n  CATEGORIES_MODAL_NAME: \"Name\",\r\n  CATEGORIES_MODAL_NAME_PLACEHOLDER: \"Enter name of your category\",\r\n  CATEGORIES_MODAL_NAME_DESCRIPTION: \"try to enter meaningfull name\",\r\n  CATEGORIES_MODAL_DESCRIPTION: \"Description\",\r\n  CATEGORIES_MODAL_DESCRIPTION_PLACEHOLDER: \"Enter a short description\",\r\n  CATEGORIES_MODAL_FOOTER_UPSERT_BTN_NEW: \"Create\",\r\n  CATEGORIES_MODAL_FOOTER_UPSERT_BTN_EDIT: \"Edit\",\r\n  CANCEL: \"Cancel\",\r\n  CATEGROES_CONTENT_TYPES: \"Item Types\",\r\n  CATEGORIES_ITEM_TYPES_HEADER_TITLE: \"Manage Item Types\",\r\n  CATEGORIES_ITEM_TYPES_HEADER_DESC: \"Lorem ipsum dolor sit amet, consectetur\",\r\n  CATEGORY_ITEM_TYPE_MODAL_HEADER_TITLE:\"Add item types to category\",\r\n\r\n  // CONTENT TYPE\r\n  CONTENT_TYPE_MODAL_HEADER_TITLE_NEW: \"Add New Item Type\",\r\n  CONTENT_TYPE_MODAL_FOOTER_UPSERT_BTN_NEW: \"Create\",\r\n  CONTENT_TYPE_MODAL_HEADER_TITLE_EDIT: \"Edit Item Type\",\r\n  CONTENT_TYPE_MODAL_FOOTER_UPSERT_BTN_EDIT: \"Edit\",\r\n  CONTENT_TYPE_MODEL_HEADER_TITLE: \"Manage Fields\",\r\n  CONTENT_TYPE_MODEL_HEADER_DESC: \"Lorem ipsum dolor sit amet, consectetur\",\r\n  CONTENT_TYPE_MODAL_NAME: \"Name\",\r\n  CONTENT_TYPE_MODAL_NAME_PLACEHOLDER: \"Enter name of your type\",\r\n  CONTENT_TYPE_MODAL_NAME_DESCRIPTION: \"try to enter meaningfull name\",\r\n  CONTENT_TYPE_MODAL_DESCRIPTION: \"Description\",\r\n  CONTENT_TYPE_MODAL_DESCRIPTION_PLACEHOLDER: \"Enter a short description\",\r\n  CONTENT_TYPE_NEW_ITEM_BTN: \"New Item Type\",\r\n  CONTENT_TYPE_ADD_FIELD_TITLE: \"Add New Field\",\r\n  CONTENT_TYPE_ADD_FIELD_MODAL_NAME: \"Name\",\r\n  CONTENT_TYPE_ADD_FIELD_MODAL_NAME_PLACEHOLDER: \"Enter name of your field\",\r\n  CONTENT_TYPE_ADD_FIELD_MODAL_NAME_INFO: \"name can not be included space\",\r\n  CONTENT_TYPE_ADD_FIELD_MODAL_TITLE: \"Title\",\r\n  CONTENT_TYPE_ADD_FIELD_MODAL_TITLE_PLACEHOLDER: \"Enter field title\",\r\n  CONTENT_TYPE_ADD_FIELD_MODAL_TITLE_INFO: \"Title will display all of places\",\r\n  CONTENT_TYPE_ADD_FIELD_MODAL_DESCRIPTION: \"Description\",\r\n  CONTENT_TYPE_ADD_FIELD_MODAL_DESCRIPTION_PLACEHOLDER:\r\n    \"Enter a short description\",\r\n  CONTENT_TYPE_ADD_FIELD_MODAL_DESCRIPTION_INFO: \"opetional\",\r\n  CONTENT_TYPE_ADD_FIELD_MODAL_CREATE_BTN: \"Create\",\r\n  CONTENT_TYPE_ADD_FIELD_MODAL_CREATE_CONFIG_BTN: \"Create and configure\",\r\n  CONTENT_TYPE_ADD_FIELD_MODAL_CHNAGE_FIELD_BTN: \"Change Field Type\",\r\n  CONTENT_TYPE_ADD_FIELD_CHOOSEN: \"New\",\r\n  FIELD_TYPE_RICH_TEXT: \"Rich Text\",\r\n  FIELD_TYPE_RICH_TEXT_INFO: \"Descriptive content ,for example blog post\",\r\n  FIELD_TYPE_TEXT: \"Text\",\r\n  FIELD_TYPE_TEXT_INFO: \"Titles, names, paragraphs, list of names\",\r\n  FIELD_TYPE_NUMBER: \"Number\",\r\n  FIELD_TYPE_NUMBER_INFO: \"ID, order number, rating, quantity\",\r\n  FIELD_TYPE_DATE_TIME: \"Date and time\",\r\n  FIELD_TYPE_DATE_TIME_INFO: \"Event date, opening hours\",\r\n  FIELD_TYPE_LOCATION: \"Location\",\r\n  FIELD_TYPE_LOCATION_INFO: \"Coordinates: latitude and longitude\",\r\n  FIELD_TYPE_MEDIA: \"Media\",\r\n  FIELD_TYPE_MEDIA_INFO: \"Images, videos, PDFs and other files\",\r\n  FIELD_TYPE_KEY_VALUE: \"Options\",\r\n  FIELD_TYPE_KEY_VALUE_INFO: \"For example, Brand of a car\",\r\n  FIELD_TYPE_BOOLEAN: \"Boolean\",\r\n  FIELD_TYPE_BOOLEAN_INFO: \"Yes or no, 1 or 0, true or false\",\r\n  FIELD_TYPE_OBJECT: \"Json Object\",\r\n  FIELD_TYPE_OBJECT_INFO: \"Data in JSON format\",\r\n  FIELD_TYPE_REFERENCE: \"Reference\",\r\n  FIELD_TYPE_REFERENCE_INFO:\r\n    \"For example, a blog post can reference its author(s)\",\r\n\r\n  // ITEM TYPES\r\n  ITEM_TYPES_FIELDS: \"Fields\",\r\n  // items\r\n  ITEMS_CATEGORIES_CONTENT: \"Content\"\r\n};\r\n","export default {\r\n  LOGIN_TITLE: \"ورود به ریکوئتر\",\r\n  LOGIN_EMAIL_INPUT_TITLE: \"ایمیل\",\r\n  LOGIN_EMAIL_INPUT_PLACEHOLDER: \"ایمیل خود را وارد کنید\",\r\n  LOGIN_EMAIL_INPUT_DESCRIPTION: \"با نام کاربری خود هم میتوانید وارد شوید\",\r\n  LOGIN_PASSWORD_INPUT: \"رمز عبور\",\r\n  LOGIN_PASSWORD_INPUT_PLACEHOLDER: \"رمز عبور خود را وارد کنید\",\r\n  LOGIN_PASSWORD_INPUT_DESCRIPTION: \"رمز عبور حداقل 6 کاراکتر میباشد\",\r\n  LOGIN_SUBMIT_BTN: \"ورود\",\r\n  LOGIN_SOCIAL_TEXT: \"ورود با حساب کاربری\",\r\n  LOGIN_SIGNUP_LINK_TITLE: \"حساب کاربری نداری؟\",\r\n  LOGIN_SIGNUP_LINK: \"وارد شو\",\r\n  LOGIN_SOCIAL_BTN_GOOGLE: \"گوگل\",\r\n  LOGIN_SOCIAL_BTN_GITHUB: \"گیت هاب\",\r\n  // SIGNUP\r\n  SIGNUP_TITLE: \"ثبت نام در ریکونتر\",\r\n  SIGNUP_LOGIN_LINK_TITLE: \"ثبت نام کرده اید ؟\",\r\n  SIGNUP_LOGIN_LINK: \"ورود\",\r\n  SIGNUP_CONFIRM_PASSWORD_INPUT: \"تایید رمز عبور\",\r\n  SIGNUP_CONFIRM_PASSWORD_INPUT_PLACEHOLDER: \"تایید رمز عبور\",\r\n  SIGNUP_CONFIRM_PASSWORD_INPUT_DESCRIPTION: \"رمز عبور حداقل 6 کاراکتر میباشد\",\r\n  // home\r\n  BRAND_NAME: \"REQTER\",\r\n  HOME_NAVS_TITLE: \"ابزارها و امکانات\",\r\n  HOME_SIDE_NAV_MANAGET_USERS: \"مدیریت کاربران\",\r\n  HOME_SIDE_NAV_MANAGE_USERS_DESC: \"کاربران اپلیکیشن های خود را مدیریت کنید\",\r\n  HOME_SIDE_NAV_CATEGRIES: \"دسته بندی ها\",\r\n  HOME_SIDE_NAV_CATEGORIES_DEC: \"دسته بندی های خود را مدیریت کنید\",\r\n  HOME_SIDE_NAV_CONTENT_TYPE: \"انواع آیتم ها\",\r\n  HOME_SIDE_NAV_CONTENT_TYPE_DEC: \"آیتم های خود را تعریف و مدیریت کنید\",\r\n  HOME_SIDE_NAV_PRODUCTS: \"آیتم ها\",\r\n  HOME_SIDE_NAV_PRODUCTS_DESC: \"آیتم های خود را مدیریت کنید\",\r\n  HOME_SIDE_NAV_REQUESTS: \"درخواست ها\",\r\n  HOME_SIDE_NAV_REQUESTS_DESC: \"مشاهده و مدیریت درخواست های رسیده\",\r\n  HOME_SIDE_NAV_QUOTES: \"پیشنهادات\",\r\n  HOME_SIDE_NAV_QUOTES_DESC: \"مشاهده و مدیریت پیشنهادات ارائه شده\",\r\n  HOME_SIDEAR_ABOUT: \"دربار ما\",\r\n  HOME_SIDEBAR_BLOG: \"رویدادها\",\r\n  HOME_SIDEBAR_DOCUMENT: \"مستندات\",\r\n  HOME_COPY_RIGHT: \"@2019 حق نمونه برداری\",\r\n  HOME_SIDEBAR_PROFILE_SETTINGS: \"تنظیمات\",\r\n  HOME_SIDEBAR_PROFILE_LOGOUT: \"خروج\",\r\n  //category\r\n  CATEGORIES_MODAL_HEADER_TITLE_NEW: \"دسته بندی جدید\",\r\n  CATEGORIES_MODAL_HEADER_TITLE_EDIT: \"ویرایش دسته بندی\",\r\n  CATEGORIES_NEW_CATEGORY_BTN: \"دسته بندی جدید\",\r\n  CATEGORIES_MODAL_NAME: \"نام\",\r\n  CATEGORIES_MODAL_NAME_PLACEHOLDER: \"نام دسته بندی خود را وارد کنید\",\r\n  CATEGORIES_MODAL_NAME_DESCRIPTION: \"نام با محتوا انتخاب کنید\",\r\n  CATEGORIES_MODAL_DESCRIPTION: \"توضیحات\",\r\n  CATEGORIES_MODAL_DESCRIPTION_PLACEHOLDER: \"توضیح کوتاه برای دسته بندی\",\r\n  CATEGORIES_MODAL_FOOTER_UPSERT_BTN_NEW: \"ایجاد\",\r\n  CATEGORIES_MODAL_FOOTER_UPSERT_BTN_EDIT: \"ویرایش\",\r\n  CANCEL: \"انصراف\",\r\n  CATEGROES_FIELDS:\"دیتا مدل\",\r\n\r\n  CATEGORIES_MODEL_HEADER_TITLE: \"مدیریت مدل\",\r\n  CATEGORIES_MODEL_HEADER_DESC: \"مدیریت مدل برای دیتا مدل\",\r\n  CATEGORY_ADD_FIELD_TITLE: \"ایجاد مدل جدید\",\r\n  CATEGORY_ADD_FIELD_CHOOSEN: \"ایجاد مدل\",\r\n  CATEGORIES_ADD_FIELD_MODAL_NAME: \"نام\",\r\n  CATEGORIES_ADD_FIELD_MODAL_NAME_PLACEHOLDER: \"نام مدل خود را وارد کنید\",\r\n  CATEGORIES_ADD_FIELD_MODAL_NAME_INFO: \"نام نمیتواند حاوی فاصله باشد\",\r\n  CATEGORIES_ADD_FIELD_MODAL_TITLE: \"عنوان\",\r\n  CATEGORIES_ADD_FIELD_MODAL_TITLE_PLACEHOLDER: \"عنوان مدل را وارد کنید\",\r\n  CATEGORIES_ADD_FIELD_MODAL_TITLE_INFO: \"عنوان را همه جا میبینید\",\r\n  CATEGORIES_ADD_FIELD_MODAL_DESCRIPTION: \"توضیحات\",\r\n  CATEGORIES_ADD_FIELD_MODAL_DESCRIPTION_PLACEHOLDER:\r\n    \"توضیح کوتاه\",\r\n  CATEGORIES_ADD_FIELD_MODAL_DESCRIPTION_INFO: \"اختیاری\",\r\n  CATEGORIES_ADD_FIELD_MODAL_CREATE_BTN: \"ایجاد\",\r\n  CATEGORIES_ADD_FIELD_MODAL_CREATE_CONFIG_BTN: \"ایجاد و تنظیمات\",\r\n  CATEGORIES_ADD_FIELD_MODAL_CHNAGE_FIELD_BTN: \"تغییر نوع مدل\",\r\n  FIELD_TYPE_TEXT: \"رشته\",\r\n  FIELD_TYPE_TEXT_INFO: \"عناوین ، نام ها، پاراگراف ها و لیستی از نام ها\",\r\n  FIELD_TYPE_NUMBER: \"عدد\",\r\n  FIELD_TYPE_NUMBER_INFO: \"شناسه ، شماره سفارش ، ارزیابی و تعداد\",\r\n  FIELD_TYPE_DATE_TIME: \"تاریخ و زمان\",\r\n  FIELD_TYPE_DATE_TIME_INFO: \"تاریخ یک رویداد\",\r\n  FIELD_TYPE_LOCATION: \"موقعیت\",\r\n  FIELD_TYPE_LOCATION_INFO: \"مکان روی نفشه\",\r\n  FIELD_TYPE_MEDIA: \"رسانه\",\r\n  FIELD_TYPE_MEDIA_INFO: \"عکس و ویدیو وفایل های مختلف\",\r\n  FIELD_TYPE_BOOLEAN: \"منطقی\",\r\n  FIELD_TYPE_BOOLEAN_INFO: \"بله و خیر ، صفر و یک\",\r\n  FIELD_TYPE_OBJECT: \"شی جی سون\",\r\n  FIELD_TYPE_OBJECT_INFO: \"داده با نمایش جی  سون\",\r\n  FIELD_TYPE_REFERENCE: \"اشاره گر\",\r\n  FIELD_TYPE_REFERENCE_INFO:\r\n    \"برای مثال، یک بلاگ پست میتواند به یک نویسنده وصل باشد\",\r\n  // items\r\n  ITEMS_CATEGORIES_CONTENT: \"محتوا\"\r\n};\r\n","import React, { memo } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { languageManager } from \"./../../services\";\r\nimport \"./styles.scss\";\r\n\r\nconst Login = (...props) => {\r\n  // const [visibility, setVisibility] = useState(0);\r\n  // function signIn() {\r\n  //   setVisibility({ visibility: true });\r\n  // }\r\n  const login = () => {\r\n    props[0].history.replace(\"home\");\r\n  };\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"center\">\r\n        <div className=\"header\">\r\n          <span className=\"header-title\">\r\n            {languageManager.translate(\"LOGIN_TITLE\")}\r\n          </span>\r\n        </div>\r\n        <div className=\"body\">\r\n          <form>\r\n            <div className=\"form-group\">\r\n              <label>\r\n                {languageManager.translate(\"LOGIN_EMAIL_INPUT_TITLE\")}\r\n              </label>\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                id=\"exampleInputEmail1\"\r\n                aria-describedby=\"emailHelp\"\r\n                placeholder={languageManager.translate(\r\n                  \"LOGIN_EMAIL_INPUT_PLACEHOLDER\"\r\n                )}\r\n              />\r\n              <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                {languageManager.translate(\"LOGIN_EMAIL_INPUT_DESCRIPTION\")}\r\n              </small>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>{languageManager.translate(\"LOGIN_PASSWORD_INPUT\")}</label>\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                id=\"exampleInputPassword1\"\r\n                placeholder={languageManager.translate(\r\n                  \"LOGIN_PASSWORD_INPUT_PLACEHOLDER\"\r\n                )}\r\n              />\r\n              <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                {languageManager.translate(\"LOGIN_PASSWORD_INPUT_DESCRIPTION\")}\r\n              </small>\r\n            </div>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary btn-block btn-submit\"\r\n              onClick={() => login()}\r\n            >\r\n              {languageManager.translate(\"LOGIN_SUBMIT_BTN\")}\r\n            </button>\r\n          </form>\r\n          {/* <div className=\"divider\">\r\n            <Divider>{languageManager.translate(\"LOGIN_SOCIAL_TEXT\")}</Divider>\r\n          </div>\r\n          <div className=\"social\">\r\n            <button type=\"button\" className=\"btn btn-light\">\r\n              <i className=\"icon-google icon\" />\r\n              {languageManager.translate(\"LOGIN_SOCIAL_BTN_GOOGLE\")}\r\n            </button>\r\n            <button type=\"button\" className=\"btn btn-light\">\r\n              <i className=\"icon-github icon\" />\r\n              {languageManager.translate(\"LOGIN_SOCIAL_BTN_GITHUB\")}\r\n            </button>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"signUpBox\">\r\n        <span>\r\n          {languageManager.translate(\"LOGIN_SIGNUP_LINK_TITLE\")}&nbsp;\r\n        </span>\r\n        <Link to=\"/signup\">\r\n          {\" \"}\r\n          {languageManager.translate(\"LOGIN_SIGNUP_LINK\")}\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default memo(Login);\r\n","import React, { memo } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { languageManager } from \"./../../services\";\r\nimport \"./styles.scss\";\r\n\r\nconst Signup = (...props) => {\r\n  // const [visibility, setVisibility] = useState(0);\r\n  // function signIn() {\r\n  //   setVisibility({ visibility: true });\r\n  // }\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"center\">\r\n        <div className=\"header\">\r\n          <span className=\"header-title\">\r\n            {languageManager.translate(\"SIGNUP_TITLE\")}\r\n          </span>\r\n        </div>\r\n        <div className=\"body\">\r\n          <form>\r\n            <div className=\"form-group\">\r\n              <label>\r\n                {languageManager.translate(\"LOGIN_EMAIL_INPUT_TITLE\")}\r\n              </label>\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                id=\"exampleInputEmail1\"\r\n                aria-describedby=\"emailHelp\"\r\n                placeholder={languageManager.translate(\r\n                  \"LOGIN_EMAIL_INPUT_PLACEHOLDER\"\r\n                )}\r\n              />\r\n              <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                {languageManager.translate(\"LOGIN_EMAIL_INPUT_DESCRIPTION\")}\r\n              </small>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>\r\n                {languageManager.translate(\"LOGIN_PASSWORD_INPUT\")}\r\n              </label>\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                id=\"exampleInputPassword1\"\r\n                placeholder={languageManager.translate(\r\n                  \"LOGIN_PASSWORD_INPUT_PLACEHOLDER\"\r\n                )}\r\n              />\r\n              <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                {languageManager.translate(\"LOGIN_PASSWORD_INPUT_DESCRIPTION\")}\r\n              </small>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>\r\n                {languageManager.translate(\"SIGNUP_CONFIRM_PASSWORD_INPUT\")}\r\n              </label>\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                id=\"exampleInputPassword1\"\r\n                placeholder={languageManager.translate(\r\n                  \"SIGNUP_CONFIRM_PASSWORD_INPUT_PLACEHOLDER\"\r\n                )}\r\n              />\r\n              <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                {languageManager.translate(\"SIGNUP_CONFIRM_PASSWORD_INPUT_DESCRIPTION\")}\r\n              </small>\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary btn-block btn-submit\">\r\n              {languageManager.translate(\"LOGIN_SUBMIT_BTN\")}\r\n            </button>\r\n          </form>\r\n          {/*<div className=\"divider\">\r\n            <Divider>{languageManager.translate(\"LOGIN_SOCIAL_TEXT\")}</Divider>\r\n          </div>\r\n           <div className=\"social\">\r\n            <button type=\"button\" className=\"btn btn-light\">\r\n              <i className=\"icon-google icon\"></i>\r\n              {languageManager.translate(\"LOGIN_SOCIAL_BTN_GOOGLE\")}\r\n            </button>\r\n            <button type=\"button\" className=\"btn btn-light\">\r\n              <i className=\"icon-github icon\"></i>\r\n              {languageManager.translate(\"LOGIN_SOCIAL_BTN_GITHUB\")}\r\n            </button>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"signUpBox\">\r\n        <span>\r\n          {languageManager.translate(\"SIGNUP_LOGIN_LINK_TITLE\")}&nbsp;\r\n        </span>\r\n        <Link to=\"/login\"> {languageManager.translate(\"SIGNUP_LOGIN_LINK\")}</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default memo(Signup);\r\n","import React, { useState } from \"react\";\r\nimport \"./styles.scss\";\r\nimport {\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem\r\n} from \"reactstrap\";\r\nimport { languageManager } from \"../../../../../../services\";\r\nconst ProfileWidget = props => {\r\n  const [dropDownVisibility, toggleVisibility] = useState(false);\r\n  function toggle() {\r\n    toggleVisibility(prevState => !prevState);\r\n  }\r\n  return (\r\n    <div className=\"profile-widget\">\r\n      <div className=\"left\">\r\n        <i className=\"icon-user\" />\r\n      </div>\r\n      <div className=\"centerbox\">\r\n        <span className=\"title\">Saeed Padyab</span>\r\n        <span className=\"role\">payabsaeed@gmail.com</span>\r\n      </div>\r\n      <div className=\"right\">\r\n        <Dropdown isOpen={dropDownVisibility} toggle={toggle}>\r\n          <DropdownToggle className=\"btn btn-light btn-small\">\r\n            <i className=\"icon-more-h\" />\r\n          </DropdownToggle>\r\n          <DropdownMenu>\r\n            <DropdownItem>{languageManager.translate('HOME_SIDEBAR_PROFILE_SETTINGS')}</DropdownItem>\r\n            <DropdownItem>{languageManager.translate('HOME_SIDEBAR_PROFILE_LOGOUT')}</DropdownItem>\r\n          </DropdownMenu>\r\n        </Dropdown>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ProfileWidget;\r\n","import React from \"react\";\r\nimport { NavLink  } from \"react-router-dom\";\r\nconst LinkItem = ({ link }) => {\r\n  const icon = `linkIcon icon-${link.icon}`;\r\n  return (\r\n      <NavLink  to={link.path} className=\"linkItem\" activeClassName=\"linkItemSelected\">\r\n      <div className=\"navIcon\">\r\n        <i className={icon} />\r\n      </div>\r\n      <div className=\"linkBody\">\r\n        <span className=\"linkText\">{link.name}</span>\r\n        <span className=\"linkTextDesc\">{link.desc}</span>\r\n      </div>\r\n      </NavLink>\r\n  );\r\n};\r\n\r\nexport default LinkItem;\r\n","import React from \"react\";\r\nimport \"./styles.scss\";\r\nimport LinkItem from \"./linkItem\";\r\nimport { languageManager } from \"./../../../../../../services\";\r\nconst NavLinks = props => {\r\n  function translate(key) {\r\n    return languageManager.translate(key);\r\n  }\r\n  const links = [\r\n    {\r\n      name: translate(\"HOME_SIDE_NAV_CONTENT_TYPE\"),\r\n      icon: \"item-type\",\r\n      path: \"/home/contentType\",\r\n      desc: translate(\"HOME_SIDE_NAV_CONTENT_TYPE_DEC\")\r\n    },\r\n    {\r\n      name: translate(\"HOME_SIDE_NAV_CATEGRIES\"),\r\n      icon: \"category\",\r\n      path: \"/home/categories\",\r\n      desc: translate(\"HOME_SIDE_NAV_CATEGORIES_DEC\")\r\n    },\r\n    {\r\n      name: translate(\"HOME_SIDE_NAV_PRODUCTS\"),\r\n      icon: \"product\",\r\n      path: \"/home/products\",\r\n      desc: translate(\"HOME_SIDE_NAV_PRODUCTS_DESC\")\r\n    },\r\n\r\n    {\r\n      name: translate(\"HOME_SIDE_NAV_REQUESTS\"),\r\n      icon: \"request\",\r\n      path: \"/home/requests\",\r\n      desc: translate(\"HOME_SIDE_NAV_REQUESTS_DESC\")\r\n    },\r\n    {\r\n      name: translate(\"HOME_SIDE_NAV_QUOTES\"),\r\n      icon: \"quote\",\r\n      path: \"/home/quotes\",\r\n      desc: translate(\"HOME_SIDE_NAV_QUOTES_DESC\")\r\n    },\r\n    {\r\n      name: translate(\"HOME_SIDE_NAV_MANAGET_USERS\"),\r\n      icon: \"users\",\r\n      path: \"/home/manageUsers\",\r\n      desc: translate(\"HOME_SIDE_NAV_MANAGE_USERS_DESC\")\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <div className=\"sideLinksTitle\">\r\n        {languageManager.translate(\"HOME_NAVS_TITLE\")}\r\n      </div>\r\n      <div className=\"sideLinks\">\r\n        {links.map(link => (\r\n          <LinkItem link={link} key={link.path} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavLinks;\r\n","import React from \"react\";\r\nimport \"./styles.scss\";\r\nimport ProfileWidget from \"./components/profileWidget\";\r\nimport SideLinks from \"./components/SideLinks\";\r\nimport { languageManager, useGlobalState } from \"./../../../../services\";\r\nconst SideBar = props => {\r\n  const [{ projectInfo }, dispatch] = useGlobalState();\r\n  return (\r\n    <div className=\"sideBar\">\r\n      <div className=\"top\">\r\n        <i className=\"icon-logo icon\" />\r\n        <span className=\"title\">{projectInfo.name}</span>\r\n      </div>\r\n      <ProfileWidget />\r\n      <SideLinks links={props.links} />\r\n      <div className=\"sideBar-info\">\r\n        <div className=\"sideBar-info-left\">\r\n          <a href=\"#about\">{languageManager.translate(\"HOME_SIDEAR_ABOUT\")}</a>\r\n          <a href=\"#about\">{languageManager.translate(\"HOME_SIDEBAR_BLOG\")}</a>\r\n        </div>\r\n        <div className=\"sideBar-info-right\">\r\n          <a href=\"#about\">\r\n            {languageManager.translate(\"HOME_SIDEBAR_DOCUMENT\")}\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <span className=\"copyRight\">\r\n        {languageManager.translate(\"HOME_COPY_RIGHT\")}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\nexport default SideBar;\r\n","import React from \"react\";\r\nimport SideBar from \"./components/SideBar\";\r\nimport \"./styles.scss\";\r\n\r\nconst Home = props => {\r\n  return (\r\n    <div className=\"page-wrapper\">\r\n      <SideBar links={[]} />\r\n      <main className=\"main\">\r\n        {props.routes}\r\n        {/* {links.map(link => (\r\n          <Route\r\n            exact\r\n            key={link.path}\r\n            path={link.path}\r\n            render={props => {\r\n              const Component = link.component;\r\n              const p = { ...props, component: link };\r\n              return (\r\n                <StateProvider>\r\n                  <Component {...p} />\r\n                </StateProvider>\r\n              );\r\n            }}\r\n          />\r\n        ))} */}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport { ListGroup, ListGroupItem, Collapse } from \"reactstrap\";\r\nimport { languageManager } from \"../../services\";\r\n\r\nclass Tree extends Component {\r\n  state = {\r\n    selected: {}\r\n  };\r\n  static getDerivedStateFromProps(props, current_state) {\r\n    if (!props.rightContent) {\r\n      return {\r\n        selected: {}\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  toggle = event => {\r\n    const id = event.target.getAttribute(\"id\");\r\n    this.setState(state => ({ [id]: !state[id] }));\r\n  };\r\n  mapper = (nodes, parentId, lvl) => {\r\n    return nodes.map((node, index) => {\r\n      const id = `${node.id}-${parentId ? parentId : \"top\"}`.replace(\r\n        /[^a-zA-Z0-9-_]/g,\r\n        \"\"\r\n      );\r\n      return (\r\n        <>\r\n          <ListGroupItem\r\n            key={index}\r\n            style={{\r\n              zIndex: 0,\r\n              padding: 10,\r\n              background:\r\n                this.state.selected.id === node.id ? \"lightgray\" : \"white\"\r\n            }}\r\n            className={`treeItemParent ${\r\n              parentId ? `rounded-0 ${lvl ? \"border-bottom-0\" : \"\"}` : \"\"\r\n            }`}\r\n          >\r\n            {\r\n              <div\r\n                className=\"treeItem\"\r\n                style={{\r\n                  paddingLeft: `${15 * lvl}px`\r\n                }}\r\n              >\r\n                {node.children && node.children.length > 0 ? (\r\n                  <button\r\n                    className=\"btnCategoryCollapse btn btn-primary btn-sm\"\r\n                    id={id}\r\n                    color=\"primary\"\r\n                    onClick={this.toggle}\r\n                  >\r\n                    {this.state[id] ? (\r\n                      <i className=\"icon-caret-down\" onClick={this.toggle} />\r\n                    ) : (\r\n                      <i className=\"icon-caret-right\" onClick={this.toggle} />\r\n                    )}\r\n                  </button>\r\n                ) : (\r\n                  <button className=\"btnCategoryLeaf btn btn-primary btn-sm\">\r\n                    <i className=\"icon-circle-o\" />\r\n                  </button>\r\n                )}\r\n                <div className=\"treeItem-text\">\r\n                  <span className=\"treeItem-name\">{node.name}</span>\r\n                  <span className=\"treeItem-desc\">\r\n                    {node.description ||\r\n                      \"Lorem ipsum dolor sit amet, consectetur\"}\r\n                  </span>\r\n                </div>\r\n                {(node.children === undefined ||\r\n                  node.children.length === 0) && (\r\n                  <button\r\n                    className=\"btn btn-light treeItem-action hoverAction\"\r\n                    size=\"xs\"\r\n                    onClick={() => this.props.handleDeleteCategory(node)}\r\n                  >\r\n                    <i className=\"icon-bin\" />\r\n                  </button>\r\n                )}\r\n                <button\r\n                  className=\"btn btn-light treeItem-action hoverAction\"\r\n                  size=\"xs\"\r\n                  onClick={() => this.props.handleEditCategory(node)}\r\n                >\r\n                  <i className=\"icon-pencil\" />\r\n                </button>\r\n                {(node.children === undefined ||\r\n                  node.children.length === 0) && (\r\n                  <button\r\n                    className=\"btn btn-light treeItem-action\"\r\n                    size=\"xs\"\r\n                    onClick={() => {\r\n                      this.setState(state => ({ selected: node }));\r\n                      this.props.handleItemTypes(node);\r\n                    }}\r\n                  >\r\n                    <span style={{ fontSize: 12 }}>\r\n                      {languageManager.translate(\"CATEGROES_CONTENT_TYPES\")}\r\n                    </span>\r\n                  </button>\r\n                )}\r\n\r\n                <button\r\n                  className=\"btn btn-light treeItem-action\"\r\n                  size=\"xs\"\r\n                  onClick={() => this.props.handleNewCategory(node)}\r\n                >\r\n                  <i className=\"icon-plus\" style={{ fontWeight: \"bold\" }} />\r\n                </button>\r\n              </div>\r\n            }\r\n          </ListGroupItem>\r\n          {node.children && (\r\n            <Collapse isOpen={this.state[id]}>\r\n              {this.mapper(node.children, id, (lvl || 0) + 1)}\r\n            </Collapse>\r\n          )}\r\n        </>\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return <ListGroup>{this.mapper(this.props.data)}</ListGroup>;\r\n  }\r\n}\r\n\r\nexport default Tree;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Modal, ModalBody, ModalHeader } from \"reactstrap\";\r\nimport { languageManager } from \"../../../../services\";\r\nimport \"./styles.scss\";\r\n\r\nconst AddNewField = props => {\r\n  const category = props.selectedCategory;\r\n  let items = props.itemTypes ? props.itemTypes : [];\r\n  let data = props.data;\r\n  const [allData, setData] = useState(makeData());\r\n  const [isOpen, toggleModal] = useState(true);\r\n  function makeData() {\r\n    let d = data.slice();\r\n    for (let j = 0; j < items.length; j++) {\r\n      for (let i = 0; i < d.length; i++) {\r\n        if (items[j].id === d[i].id) {\r\n          d[i].selected = true;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return d;\r\n  }\r\n  useEffect(() => {\r\n    return () => {\r\n      data.map(d => delete d.selected);\r\n      if (!props.isOpen) toggleModal(false);\r\n    };\r\n  });\r\n  function closeModal(params) {\r\n    props.onCloseModal(items);\r\n  }\r\n  function handleChooseItem(event, item) {\r\n    if (event.target.checked) {\r\n      items.push(item);\r\n    } else {\r\n      const arr = items.filter(i => i.id !== item.id);\r\n      items = arr;\r\n    }\r\n  }\r\n  return (\r\n    <Modal isOpen={isOpen} toggle={closeModal}>\r\n      <ModalHeader toggle={closeModal}>\r\n        {languageManager.translate(\"CATEGORY_ITEM_TYPE_MODAL_HEADER_TITLE\")}\r\n      </ModalHeader>\r\n      <ModalBody>\r\n        {allData.map(item => (\r\n          <label key={item.id} for={item.id} className=\"itemTypeModal\">\r\n            <div className=\"itemTypeModal-left\">\r\n              <div className=\"itemType-icon\">\r\n                <i className=\"icon-item-type\" />\r\n              </div>\r\n              <div className=\"itemType-center\">\r\n                <span className=\"itemType-title\">{item.title}</span>\r\n                <span className=\"itemType-description\">{item.description}</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"itemTypeModal-right\">\r\n              <label className=\"switch \">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"primary\"\r\n                  onChange={e => handleChooseItem(e, item)}\r\n                  checked={item.selected}\r\n                  id={item.id}\r\n                />\r\n                <span className=\"slider\" />\r\n              </label>\r\n              {/* <input\r\n                id={item.id}\r\n                type=\"checkbox\"\r\n                onChange={e => handleChooseItem(e, item)}\r\n                checked={item.selected}\r\n              /> */}\r\n            </div>\r\n          </label>\r\n        ))}\r\n      </ModalBody>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddNewField;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input\r\n} from \"reactstrap\";\r\nimport \"./styles.scss\";\r\nimport Tree from \"./tree\";\r\nimport AddNewItemType from \"./modals/AddItemType\";\r\nimport { languageManager, useGlobalState } from \"../../services\";\r\n\r\nfunction useInput(defaultValue = \"\") {\r\n  const [input, setInput] = useState(defaultValue);\r\n  function onChange(value) {\r\n    setInput(value);\r\n  }\r\n  return [input, onChange];\r\n}\r\n\r\nconst Categories = props => {\r\n  const [{ categories, contentTypes }, dispatch] = useGlobalState();\r\n\r\n  const { name: pageTitle, desc: pageDescription } = props.component;\r\n\r\n  // variables and handlers\r\n  const newCategoryNameInput = useRef(null);\r\n  const [upsertCategoryModal, setModal] = useState(false);\r\n  const [upsertItemTypeModal, toggleUpsertItemTypeModal] = useState(false);\r\n\r\n  const [name, handleNameChanged] = useInput(\"\");\r\n  const [description, handleDesciptionChanged] = useInput(\"\");\r\n\r\n  const [selectedCategory, setSelectedCategory] = useState();\r\n  const [itemTypes, setItemTypes] = useState([]);\r\n  const [updateMode, setUpdateMode] = useState();\r\n  const [modalHeaderTitle, setModalHeader] = useState(\"\");\r\n  const [modalUpsertBtn, setModalUpsertBtnText] = useState(\"\");\r\n  const [rightContent, toggleRightContent] = useState(false);\r\n  const [isManageCategory, setManageCategory] = useState(false);\r\n\r\n  function initModalForm() {\r\n    handleNameChanged(\"\");\r\n    handleDesciptionChanged(\"\");\r\n  }\r\n  function toggleModal() {\r\n    setModalHeader(\r\n      languageManager.translate(\"CATEGORIES_MODAL_HEADER_TITLE_NEW\")\r\n    );\r\n    setModalUpsertBtnText(\r\n      languageManager.translate(\"CATEGORIES_MODAL_FOOTER_UPSERT_BTN_NEW\")\r\n    );\r\n    setModal(prevModal => !prevModal);\r\n    initModalForm();\r\n  }\r\n\r\n  function closeAddCategoryModal() {\r\n    toggleModal();\r\n    setManageCategory(false);\r\n  }\r\n  function closeRightContent() {\r\n    toggleRightContent(false);\r\n  }\r\n  function updateNodeInList(list, node, newValue) {\r\n    for (let i = 0; i < list.length; i++) {\r\n      if (list[i].id === node.id) {\r\n        list[i] = newValue;\r\n      }\r\n      if (list[i].children) updateNodeInList(list[i].children, node, newValue);\r\n    }\r\n  }\r\n  function deleteNodeInList(list, node) {\r\n    for (let i = 0; i < list.length; i++) {\r\n      if (list[i].id === node.id) {\r\n        list.splice(i, 1);\r\n        return;\r\n      }\r\n      if (list[i].children) deleteNodeInList(list[i].children, node);\r\n    }\r\n  }\r\n  function newChildCategory(item) {\r\n    setModal(prevModal => !prevModal);\r\n    setSelectedCategory(item);\r\n    setUpdateMode(false);\r\n    setModalHeader(\r\n      languageManager.translate(\"CATEGORIES_MODAL_HEADER_TITLE_NEW\")\r\n    );\r\n    setModalUpsertBtnText(\r\n      languageManager.translate(\"CATEGORIES_MODAL_FOOTER_UPSERT_BTN_NEW\")\r\n    );\r\n    setTimeout(() => {\r\n      newCategoryNameInput.current.focus();\r\n    }, 1);\r\n    setManageCategory(true);\r\n  }\r\n  function editCategory(item) {\r\n    setModal(prevModal => !prevModal);\r\n    setSelectedCategory(item);\r\n    setUpdateMode(true);\r\n\r\n    handleNameChanged(item.name);\r\n    handleDesciptionChanged(item.description);\r\n\r\n    setModalHeader(\r\n      languageManager.translate(\"CATEGORIES_MODAL_HEADER_TITLE_EDIT\")\r\n    );\r\n    setModalUpsertBtnText(\r\n      languageManager.translate(\"CATEGORIES_MODAL_FOOTER_UPSERT_BTN_EDIT\")\r\n    );\r\n    setManageCategory(true);\r\n  }\r\n  function upsertCategory() {\r\n    if (isManageCategory) {\r\n      if (!updateMode) {\r\n        const obj = {\r\n          parentId: selectedCategory.id,\r\n          id: Math.random().toString(),\r\n          name: name,\r\n          description: description,\r\n          type: \"category\"\r\n        };\r\n\r\n        if (!selectedCategory.children) selectedCategory.children = [];\r\n        selectedCategory.children.push(obj);\r\n        const d = [...categories];\r\n        dispatch({\r\n          type: \"SET_CATEGORIES\",\r\n          value: d\r\n        });\r\n\r\n        handleNameChanged(\"\");\r\n        handleDesciptionChanged(\"\");\r\n      } else {\r\n        let newCategory = {};\r\n        for (const key in selectedCategory) {\r\n          newCategory[key] = selectedCategory[key];\r\n        }\r\n        newCategory[\"name\"] = name;\r\n        newCategory[\"description\"] = description;\r\n        updateNodeInList(categories, selectedCategory, newCategory);\r\n        dispatch({\r\n          type: \"SET_CATEGORIES\",\r\n          value: categories\r\n        });\r\n        closeAddCategoryModal();\r\n      }\r\n    } else {\r\n      const obj = {\r\n        id: Math.random(),\r\n        name: name,\r\n        description: description,\r\n        type: \"category\"\r\n      };\r\n      let data = [...categories];\r\n      data.push(obj);\r\n      dispatch({\r\n        type: \"SET_CATEGORIES\",\r\n        value: data\r\n      });\r\n      initModalForm();\r\n    }\r\n  }\r\n\r\n  function removeCategoryItem(selected) {\r\n    deleteNodeInList(categories, selected);\r\n    const data = [...categories];\r\n    dispatch({\r\n      type: \"SET_CATEGORIES\",\r\n      value: data\r\n    });\r\n  }\r\n\r\n  // field\r\n  function showItemTypes(category) {\r\n    if (!rightContent) toggleRightContent(true);\r\n    setSelectedCategory(category);\r\n    let m = [];\r\n    if (category.itemTypes !== undefined) m = category.itemTypes;\r\n    setItemTypes(m);\r\n    setManageCategory(false);\r\n  }\r\n  function closeAddItemTypeModal(items) {\r\n    toggleUpsertItemTypeModal(false);\r\n    updateCategoryItemTypes(items);\r\n  }\r\n  function addNewItemType() {\r\n    toggleUpsertItemTypeModal(prevModal => !prevModal);\r\n  }\r\n  function updateCategoryItemTypes(items) {\r\n    setItemTypes(items);\r\n    if (selectedCategory.itemTypes === undefined)\r\n      selectedCategory.itemTypes = [];\r\n    selectedCategory.itemTypes = items;\r\n    updateNodeInList(categories, selectedCategory, selectedCategory); //\r\n    dispatch({\r\n      type: \"SET_CATEGORIES\",\r\n      value: categories\r\n    });\r\n  }\r\n  function handleRemoveItemType(itemType) {\r\n    const m = itemTypes.filter(item => item.id !== itemType.id);\r\n    setItemTypes(m);\r\n    selectedCategory.itemTypes = m;\r\n    updateNodeInList(categories, selectedCategory, selectedCategory); //\r\n    dispatch({\r\n      type: \"SET_CATEGORIES\",\r\n      value: categories\r\n    });\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"c-wrapper\">\r\n        <div className=\"c-header\">\r\n          <div className=\"c-header-left\">\r\n            <span className=\"c-header-title\">{pageTitle}</span>\r\n            <span className=\"c-header-description\">{pageDescription}</span>\r\n          </div>\r\n          <div className=\"c-header-right\">\r\n            <button className=\"btn btn-primary\" onClick={toggleModal}>\r\n              {languageManager.translate(\"CATEGORIES_NEW_CATEGORY_BTN\")}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"c-content\">\r\n          <div className=\"c-content-left\">\r\n            <Tree\r\n              rightContent={rightContent}\r\n              data={categories}\r\n              handleNewCategory={selected => newChildCategory(selected)}\r\n              handleEditCategory={selected => editCategory(selected)}\r\n              handleDeleteCategory={selected => removeCategoryItem(selected)}\r\n              handleItemTypes={selected => showItemTypes(selected)}\r\n            />\r\n          </div>\r\n          {rightContent && (\r\n            <div className=\"c-content-right animated slideInRight faster\">\r\n              <div className=\"c-content-right-header\">\r\n                <span className=\"c-right-header-title\">\r\n                  {languageManager.translate(\r\n                    \"CATEGORIES_ITEM_TYPES_HEADER_TITLE\"\r\n                  )}\r\n                </span>\r\n                <span className=\"c-right-header-description\">\r\n                  {languageManager.translate(\r\n                    \"CATEGORIES_ITEM_TYPES_HEADER_DESC\"\r\n                  )}\r\n                </span>\r\n                <span\r\n                  className=\"icon-cross closeIcon\"\r\n                  onClick={closeRightContent}\r\n                />\r\n              </div>\r\n              <div className=\"c-content-right-body\">\r\n                <div className=\"fieldsContent\">\r\n                  {itemTypes &&\r\n                    itemTypes.map(item => (\r\n                      <div className=\"fieldItem\" key={item.id}>\r\n                        <div className=\"fieldItem-icon\">\r\n                          <i className=\"icon-more-h\" />\r\n                        </div>\r\n                        <div className=\"fieldItem-type\">\r\n                          <i className=\"icon-item-type\" />\r\n                        </div>\r\n                        <div className=\"fieldItem-name\">{item.name}</div>\r\n                        <div className=\"fieldItem-title\">\r\n                          {item.description}\r\n                        </div>\r\n                        <div\r\n                          className=\"fieldItem-actions\"\r\n                          onClick={() => handleRemoveItemType(item)}\r\n                        >\r\n                          <button className=\"btn btn-link\" size=\"xs\">\r\n                            <i className=\"icon-bin\" />\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"btnNewFieldContent\">\r\n                  <button className=\"btn btn-primary\" onClick={addNewItemType}>\r\n                    <i className=\"icon-plus\" />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <Modal isOpen={upsertCategoryModal} toggle={closeAddCategoryModal}>\r\n        <ModalHeader toggle={closeAddCategoryModal}>\r\n          {modalHeaderTitle}\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <div className=\"c-category-modal-body\">\r\n            <Form>\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  {languageManager.translate(\"CATEGORIES_MODAL_NAME\")}\r\n                </label>\r\n                <input\r\n                  ref={newCategoryNameInput}\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder={languageManager.translate(\r\n                    \"CATEGORIES_MODAL_NAME_PLACEHOLDER\"\r\n                  )}\r\n                  value={name}\r\n                  required\r\n                  onChange={e => handleNameChanged(e.target.value)}\r\n                />\r\n                <small className=\"form-text text-muted\">\r\n                  {languageManager.translate(\r\n                    \"CATEGORIES_MODAL_NAME_DESCRIPTION\"\r\n                  )}\r\n                </small>\r\n              </div>\r\n              <FormGroup>\r\n                <Label for=\"exampleEmail\">\r\n                  {languageManager.translate(\"CATEGORIES_MODAL_DESCRIPTION\")}\r\n                </Label>\r\n                <Input\r\n                  type=\"string\"\r\n                  placeholder={languageManager.translate(\r\n                    \"CATEGORIES_MODAL_DESCRIPTION_PLACEHOLDER\"\r\n                  )}\r\n                  value={description}\r\n                  onChange={e => handleDesciptionChanged(e.target.value)}\r\n                />\r\n                {/* <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                  {languageManager.translate(\r\n                    \"CATEGORIES_MODAL_DESCRIPTION_DESC\"\r\n                  )}\r\n                </small> */}\r\n              </FormGroup>\r\n            </Form>\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            onClick={() => upsertCategory(selectedCategory)}\r\n            disabled={name.length > 0 ? false : true}\r\n          >\r\n            {modalUpsertBtn}\r\n          </Button>\r\n          <Button color=\"secondary\" onClick={closeAddCategoryModal}>\r\n            {languageManager.translate(\"CANCEL\")}\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n      {upsertItemTypeModal && (\r\n        <AddNewItemType\r\n          data={contentTypes}\r\n          itemTypes={itemTypes}\r\n          selectedCategory={selectedCategory}\r\n          isOpen={upsertItemTypeModal}\r\n          onCloseModal={items => closeAddItemTypeModal(items)}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { ListGroup, ListGroupItem } from \"reactstrap\";\r\nimport { languageManager } from \"../../../services\";\r\n\r\nconst List = props => {\r\n  console.log('list')\r\n  const [selected, setSelected] = useState({});\r\n  useEffect(() => {\r\n    if (!props.rightContent) {\r\n      setSelected({});\r\n    }\r\n  }, [props.rightContent]);\r\n  return (\r\n    <ListGroup>\r\n      {props.data &&\r\n        props.data.map(listItem => (\r\n          <ListGroupItem\r\n            key={listItem.id}\r\n            className=\"listGroupItem\"\r\n            style={{\r\n              backgroundColor:\r\n                selected.id === listItem.id ? \"lightgray\" : \"white\"\r\n            }}\r\n          >\r\n            <div className=\"treeItem\">\r\n              <button\r\n                className=\"btn btn-primary btn-sm\"\r\n                color=\"primary\"\r\n                style={{ marginRight: 15 }}\r\n              >\r\n                <i className=\"icon-item-type\" />\r\n              </button>\r\n              <div className=\"treeItem-text\">\r\n                <span className=\"treeItem-name\">{listItem.title}</span>\r\n                <span className=\"treeItem-desc\">\r\n                  {listItem.description ||\r\n                    \"Lorem ipsum dolor sit amet, consectetur\"}\r\n                </span>\r\n              </div>\r\n              {listItem.template !== \"generic\" && (\r\n                <>\r\n                  <button\r\n                    className=\"btn btn-light treeItem-action\"\r\n                    size=\"xs\"\r\n                    onClick={() => props.handleDeleteType(listItem)}\r\n                  >\r\n                    <i className=\"icon-bin\" />\r\n                  </button>\r\n                  <button\r\n                    className=\"btn btn-light treeItem-action\"\r\n                    size=\"xs\"\r\n                    onClick={() => props.handleEditType(listItem)}\r\n                  >\r\n                    <i className=\"icon-pencil\" />\r\n                  </button>\r\n                </>\r\n              )}\r\n              <button\r\n                className=\"btn btn-light treeItem-action\"\r\n                size=\"xs\"\r\n                onClick={() => {\r\n                  setSelected(listItem);\r\n                  props.handleShowFields(listItem);\r\n                }}\r\n              >\r\n                <span style={{ fontSize: 12 }}>\r\n                  {languageManager.translate(\"ITEM_TYPES_FIELDS\")}\r\n                </span>\r\n              </button>\r\n            </div>\r\n          </ListGroupItem>\r\n        ))}\r\n    </ListGroup>\r\n  );\r\n};\r\nexport default List;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input\r\n} from \"reactstrap\";\r\nimport { languageManager } from \"../../../../services\";\r\nimport \"./styles.scss\";\r\nconst fields = [\r\n  {\r\n    name: \"string\",\r\n    title: languageManager.translate(\"FIELD_TYPE_TEXT\"),\r\n    description: languageManager.translate(\"FIELD_TYPE_TEXT_INFO\"),\r\n    icon: \"icon-file-text\"\r\n  },\r\n  {\r\n    name: \"number\",\r\n    title: languageManager.translate(\"FIELD_TYPE_NUMBER\"),\r\n    description: languageManager.translate(\"FIELD_TYPE_NUMBER_INFO\"),\r\n    icon: \"icon-number\"\r\n  },\r\n  {\r\n    name: \"dateTime\",\r\n    title: languageManager.translate(\"FIELD_TYPE_DATE_TIME\"),\r\n    description: languageManager.translate(\"FIELD_TYPE_DATE_TIME_INFO\"),\r\n    icon: \"icon-calendar\"\r\n  },\r\n  {\r\n    name: \"location\",\r\n    title: languageManager.translate(\"FIELD_TYPE_LOCATION\"),\r\n    description: languageManager.translate(\"FIELD_TYPE_LOCATION_INFO\"),\r\n    icon: \"icon-location\"\r\n  },\r\n  {\r\n    name: \"media\",\r\n    title: languageManager.translate(\"FIELD_TYPE_MEDIA\"),\r\n    description: languageManager.translate(\"FIELD_TYPE_MEDIA_INFO\"),\r\n    icon: \"icon-images\"\r\n  },\r\n  {\r\n    name: \"boolean\",\r\n    title: languageManager.translate(\"FIELD_TYPE_BOOLEAN\"),\r\n    description: languageManager.translate(\"FIELD_TYPE_BOOLEAN_INFO\"),\r\n    icon: \"icon-boolean\"\r\n  },\r\n  {\r\n    name: \"keyValue\",\r\n    title: languageManager.translate(\"FIELD_TYPE_KEY_VALUE\"),\r\n    description: languageManager.translate(\"FIELD_TYPE_KEY_VALUE_INFO\"),\r\n    icon: \"icon-combo-box\"\r\n  },\r\n  {\r\n    name: \"richText\",\r\n    title: languageManager.translate(\"FIELD_TYPE_RICH_TEXT\"),\r\n    description: languageManager.translate(\"FIELD_TYPE_RICH_TEXT_INFO\"),\r\n    icon: \"icon-file-text\"\r\n  }\r\n  // {\r\n  //   name: \"jsonObject\",\r\n  //   title: languageManager.translate(\"FIELD_TYPE_OBJECT\"),\r\n  //   description: languageManager.translate(\"FIELD_TYPE_OBJECT_INFO\"),\r\n  //   icon: \"icon-json-file\"\r\n  // },\r\n  // {\r\n  //   name: \"reference\",\r\n  //   title: languageManager.translate(\"FIELD_TYPE_REFERENCE\"),\r\n  //   description: languageManager.translate(\"FIELD_TYPE_REFERENCE_INFO\"),\r\n  //   icon: \"icon-reference\"\r\n  // }\r\n];\r\n\r\nconst AddNewField = props => {\r\n  console.log('list')\r\n  const category = props.selectedCategory;\r\n\r\n  const [isOpen, toggleModal] = useState(true);\r\n  const nameInput = useRef(null); //  ref is defined here\r\n  const [tab, changeTab] = useState(1);\r\n  const [newFieldHeaderTitle, setAddFieldHeaderTitle] = useState(\r\n    languageManager.translate(\"CONTENT_TYPE_ADD_FIELD_TITLE\")\r\n  );\r\n  const [selectedField, setField] = useState({});\r\n  const [name, setName] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (!props.isOpen) toggleModal(false);\r\n    };\r\n  });\r\n  function closeAddFieldModal(params) {\r\n    props.onCloseModal();\r\n  }\r\n  function handleChooseField(field) {\r\n    changeTab(2);\r\n    setField(field);\r\n    const title =\r\n      languageManager.translate(\"CONTENT_TYPE_ADD_FIELD_CHOOSEN\") +\r\n      \" \" +\r\n      field.title;\r\n    setAddFieldHeaderTitle(title);\r\n    //nameInput.current.focus(); // focus after changing tab on first input\r\n  }\r\n  function backToFields(params) {\r\n    const title = languageManager.translate(\"CONTENT_TYPE_ADD_FIELD_CHOOSEN\");\r\n    setAddFieldHeaderTitle(title);\r\n    changeTab(1);\r\n  }\r\n  function handleNameChanged(e) {\r\n    setName(e.target.value);\r\n  }\r\n  function handleTitleChanged(e) {\r\n    setTitle(e.target.value);\r\n  }\r\n  function handleDescriptionChanged(e) {\r\n    setDescription(e.target.value);\r\n  }\r\n  function resetForm() {\r\n    setName(\"\");\r\n    setTitle(\"\");\r\n    setDescription(\"\");\r\n  }\r\n  function addField() {\r\n    const obj = {\r\n      id: Math.random().toString(),\r\n      name: name,\r\n      title: title,\r\n      description: description,\r\n      type: selectedField.name\r\n    };\r\n    props.onAddField(obj);\r\n    resetForm();\r\n  }\r\n  function addField_configure() {}\r\n  return (\r\n    <Modal isOpen={isOpen} toggle={closeAddFieldModal} size=\"lg\">\r\n      <ModalHeader toggle={closeAddFieldModal}>\r\n        {newFieldHeaderTitle}\r\n      </ModalHeader>\r\n      <ModalBody>\r\n        <div className=\"c-category-addField-body\">\r\n          {tab === 1 ? (\r\n            <div className=\"fieldsTab\">\r\n              {fields.map(field => (\r\n                <div\r\n                  key={field.icon}\r\n                  className=\"add-field-types\"\r\n                  onClick={() => handleChooseField(field)}\r\n                >\r\n                  <div className=\"add-field-icon\">\r\n                    <i className={field.icon} />\r\n                  </div>\r\n                  <span className=\"title\">{field.title}</span>\r\n                  <span className=\"description\">{field.description}</span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <Form className=\"formTab\">\r\n              <div className=\"row\">\r\n                <div className=\"form-group col\">\r\n                  <label>\r\n                    {languageManager.translate(\r\n                      \"CONTENT_TYPE_ADD_FIELD_MODAL_NAME\"\r\n                    )}\r\n                  </label>\r\n                  <input\r\n                    ref={nameInput} // using ref\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder={languageManager.translate(\r\n                      \"CONTENT_TYPE_ADD_FIELD_MODAL_NAME_PLACEHOLDER\"\r\n                    )}\r\n                    value={name}\r\n                    required\r\n                    onChange={handleNameChanged}\r\n                  />\r\n                  <small className=\"form-text text-muted\">\r\n                    {languageManager.translate(\r\n                      \"CONTENT_TYPE_ADD_FIELD_MODAL_NAME_INFO\"\r\n                    )}\r\n                  </small>\r\n                </div>\r\n\r\n                <FormGroup className=\"col\">\r\n                  <Label>\r\n                    {languageManager.translate(\r\n                      \"CONTENT_TYPE_ADD_FIELD_MODAL_TITLE\"\r\n                    )}\r\n                  </Label>\r\n                  <Input\r\n                    type=\"string\"\r\n                    value={title}\r\n                    placeholder={languageManager.translate(\r\n                      \"CONTENT_TYPE_ADD_FIELD_MODAL_TITLE_PLACEHOLDER\"\r\n                    )}\r\n                    onChange={handleTitleChanged}\r\n                  />\r\n                  <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                    {languageManager.translate(\r\n                      \"CONTENT_TYPE_ADD_FIELD_MODAL_TITLE_INFO\"\r\n                    )}\r\n                  </small>\r\n                </FormGroup>\r\n            \r\n              </div>\r\n              <div className=\"formTab-row\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    {languageManager.translate(\r\n                      \"CONTENT_TYPE_ADD_FIELD_MODAL_DESCRIPTION\"\r\n                    )}\r\n                  </Label>\r\n                  <Input\r\n                    type=\"string\"\r\n                    value={description}\r\n                    placeholder={languageManager.translate(\r\n                      \"CONTENT_TYPE_ADD_FIELD_MODAL_DESCRIPTION_PLACEHOLDER\"\r\n                    )}\r\n                    onChange={handleDescriptionChanged}\r\n                  />\r\n                  <small className=\"form-text text-muted\">\r\n                    {languageManager.translate(\r\n                      \"CONTENT_TYPE_ADD_FIELD_MODAL_DESCRIPTION_INFO\"\r\n                    )}\r\n                  </small>\r\n                </FormGroup>\r\n              </div>\r\n            </Form>\r\n          )}\r\n        </div>\r\n      </ModalBody>\r\n      {tab !== 1 ? (\r\n        <ModalFooter>\r\n          <Button\r\n            color=\"primary\"\r\n            onClick={addField}\r\n            disabled={\r\n              name.length > 0 && title.length > 0 && !name.includes(\" \")\r\n                ? false\r\n                : true\r\n            }\r\n          >\r\n            {languageManager.translate(\r\n              \"CONTENT_TYPE_ADD_FIELD_MODAL_CREATE_BTN\"\r\n            )}\r\n          </Button>\r\n          {/* <Button\r\n            color=\"primary\"\r\n            onClick={addField_configure}\r\n            disabled={\r\n              name.length > 0 && title.length > 0 && !name.includes(\" \")\r\n                ? false\r\n                : true\r\n            }\r\n          >\r\n            {languageManager.translate(\r\n              \"CONTENT_TYPE_ADD_FIELD_MODAL_CREATE_CONFIG_BTN\"\r\n            )}\r\n          </Button> */}\r\n          <Button color=\"secondary\" onClick={backToFields}>\r\n            {languageManager.translate(\r\n              \"CONTENT_TYPE_ADD_FIELD_MODAL_CHNAGE_FIELD_BTN\"\r\n            )}\r\n          </Button>\r\n        </ModalFooter>\r\n      ) : (\r\n        undefined\r\n      )}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddNewField;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input\r\n} from \"reactstrap\";\r\nimport { languageManager } from \"../../../../services\";\r\nimport \"./styles.scss\";\r\nconst templates = [\r\n  {\r\n    id: \"1\",\r\n    name: \"dataCollection\",\r\n    title: \"Data Collection\",\r\n    description: \"Create an item type with custom fields\",\r\n    icon: \"\",\r\n    fields: [],\r\n    allowCustomFields: true\r\n  },\r\n  {\r\n    id: \"2\",\r\n    name: \"content\",\r\n    title: \"Content\",\r\n    description: \"it does not allow you to have custom fields\",\r\n    icon: \"\",\r\n    fields: [\r\n      {\r\n        id: Math.random(),\r\n        name: \"body\",\r\n        title: \"Body\",\r\n        description: \"\",\r\n        type: \"richText\",\r\n        isBase: true\r\n      }\r\n    ],\r\n    allowCustomFields: true\r\n  },\r\n  {\r\n    id: \"3\",\r\n    name: \"gallery\",\r\n    title: \"Gallery\",\r\n    description: \"Making custom gallery data\",\r\n    icon: \"icon-images\",\r\n    fields: [\r\n      {\r\n        id: Math.random(),\r\n        name: \"images\",\r\n        title: \"Images\",\r\n        description: \"\",\r\n        type: \"media\",\r\n        isList: true,\r\n        isBase: true\r\n      }\r\n    ],\r\n    allowCustomFields: true\r\n  }\r\n];\r\nconst UpsertTemplate = props => {\r\n  const { updateMode } = props;\r\n  const submitBtnText = !updateMode\r\n    ? languageManager.translate(\"CONTENT_TYPE_MODAL_FOOTER_UPSERT_BTN_NEW\")\r\n    : languageManager.translate(\"CONTENT_TYPE_MODAL_FOOTER_UPSERT_BTN_EDIT\");\r\n  const selectedItemType = updateMode ? props.selectedItemType : undefined;\r\n\r\n  const [isOpen, toggleModal] = useState(true);\r\n\r\n  const [modalHeaderTitle, setModalHeader] = useState(\r\n    !updateMode\r\n      ? languageManager.translate(\"CONTENT_TYPE_MODAL_HEADER_TITLE_NEW\")\r\n      : languageManager.translate(\"CONTENT_TYPE_MODAL_HEADER_TITLE_EDIT\")\r\n  );\r\n\r\n  const [tab, changeTab] = useState(updateMode ? 2 : 1);\r\n  const [newFieldHeaderTitle, setAddFieldHeaderTitle] = useState(\r\n    languageManager.translate(\"CONTENT_TYPE_ADD_FIELD_TITLE\")\r\n  );\r\n  const [selectedTemplate, setTemplate] = useState(\r\n    updateMode ? props.selectedTemplate : {}\r\n  );\r\n  const [name, setName] = useState(\r\n    selectedItemType ? selectedItemType.name : \"\"\r\n  );\r\n  const [title, setTitle] = useState(\r\n    selectedItemType ? selectedItemType.title : \"\"\r\n  );\r\n  const [description, setDescription] = useState(\r\n    selectedItemType ? selectedItemType.description : \"\"\r\n  );\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (!props.isOpen) toggleModal(false);\r\n    };\r\n  }, []);\r\n\r\n  function closeModal() {\r\n    props.onCloseModal();\r\n  }\r\n  function handleChooseTemplate(tmp) {\r\n    changeTab(2);\r\n    setTemplate(tmp);\r\n    const title =\r\n      languageManager.translate(\"CONTENT_TYPE_ADD_FIELD_CHOOSEN\") +\r\n      \" \" +\r\n      tmp.name;\r\n    setAddFieldHeaderTitle(title);\r\n  }\r\n  function backToTemplates() {\r\n    const title = languageManager.translate(\"CONTENT_TYPE_ADD_FIELD_CHOOSEN\");\r\n    setAddFieldHeaderTitle(title);\r\n    changeTab(1);\r\n  }\r\n  function handleNameChanged(e) {\r\n    setName(e.target.value);\r\n  }\r\n  function handleTitleChanged(e) {\r\n    setTitle(e.target.value);\r\n  }\r\n  function handleDescriptionChanged(e) {\r\n    setDescription(e.target.value);\r\n  }\r\n  function upsertItemType() {\r\n    const obj = {\r\n      selectedTemplate: selectedTemplate,\r\n      name: name,\r\n      title: title,\r\n      description: description\r\n    };\r\n    props.onCloseModal(obj);\r\n  }\r\n  return (\r\n    <Modal isOpen={isOpen} toggle={closeModal} size=\"lg\">\r\n      <ModalHeader toggle={closeModal}>{modalHeaderTitle}</ModalHeader>\r\n      <ModalBody>\r\n        <div className=\"c-category-templates-body\">\r\n          {tab === 1 ? (\r\n            <div className=\"fieldsTab\">\r\n              {templates.map(tmp => (\r\n                <div\r\n                  key={tmp.id}\r\n                  className=\"add-field-types\"\r\n                  onClick={() => handleChooseTemplate(tmp)}\r\n                >\r\n                  <div\r\n                    className=\"add-field-icon\"\r\n                    style={{\r\n                      backgroundColor:\r\n                        selectedItemType &&\r\n                        selectedItemType.template === tmp.name\r\n                          ? \"lightgray\"\r\n                          : \"whitesmoke\"\r\n                    }}\r\n                  >\r\n                    <i className={tmp.icon || \"icon-item-type\"} />\r\n                  </div>\r\n                  <span className=\"title\">{tmp.title}</span>\r\n                  <span className=\"description\">{tmp.description}</span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <Form>\r\n              <div className=\"row\">\r\n                <div className=\"form-group col\">\r\n                  <label>\r\n                    {languageManager.translate(\"CONTENT_TYPE_MODAL_NAME\")}\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder={languageManager.translate(\r\n                      \"CONTENT_TYPE_MODAL_NAME_PLACEHOLDER\"\r\n                    )}\r\n                    value={name}\r\n                    required\r\n                    onChange={handleNameChanged}\r\n                  />\r\n                  <small className=\"form-text text-muted\">\r\n                    {languageManager.translate(\r\n                      \"CONTENT_TYPE_MODAL_NAME_DESCRIPTION\"\r\n                    )}\r\n                  </small>\r\n                </div>\r\n\r\n                <FormGroup className=\"col\">\r\n                  <Label>\r\n                    {languageManager.translate(\r\n                      \"CONTENT_TYPE_ADD_FIELD_MODAL_TITLE\"\r\n                    )}\r\n                  </Label>\r\n                  <Input\r\n                    type=\"string\"\r\n                    value={title}\r\n                    placeholder={languageManager.translate(\r\n                      \"CONTENT_TYPE_ADD_FIELD_MODAL_TITLE_PLACEHOLDER\"\r\n                    )}\r\n                    onChange={handleTitleChanged}\r\n                  />\r\n                  <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                    {languageManager.translate(\r\n                      \"CONTENT_TYPE_ADD_FIELD_MODAL_TITLE_INFO\"\r\n                    )}\r\n                  </small>\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <FormGroup>\r\n                <Label>\r\n                  {languageManager.translate(\"CONTENT_TYPE_MODAL_DESCRIPTION\")}\r\n                </Label>\r\n                <Input\r\n                  type=\"string\"\r\n                  placeholder={languageManager.translate(\r\n                    \"CONTENT_TYPE_MODAL_DESCRIPTION_PLACEHOLDER\"\r\n                  )}\r\n                  value={description}\r\n                  onChange={handleDescriptionChanged}\r\n                />\r\n              </FormGroup>\r\n            </Form>\r\n          )}\r\n        </div>\r\n      </ModalBody>\r\n      {tab !== 1 ? (\r\n        <ModalFooter>\r\n          <Button\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            onClick={upsertItemType}\r\n            disabled={\r\n              name.length > 0 && title.length > 0 && !name.includes(\" \")\r\n                ? false\r\n                : true\r\n            }\r\n          >\r\n            {submitBtnText}\r\n          </Button>\r\n          {!updateMode && (\r\n            <Button color=\"secondary\" onClick={backToTemplates}>\r\n              Templates\r\n            </Button>\r\n          )}\r\n        </ModalFooter>\r\n      ) : (\r\n        undefined\r\n      )}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default UpsertTemplate;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./styles.scss\";\r\nimport List from \"./list\";\r\nimport AddNewField from \"./modals/AddNewField\";\r\nimport AddNewItemType from \"./modals/AddNewItemType\";\r\nimport { languageManager, useGlobalState } from \"../../services\";\r\n\r\nlet baseFields = [\r\n  {\r\n    id: Math.random().toString(),\r\n    name: \"name\",\r\n    title: \"Name\",\r\n    description: \"name of each product\",\r\n    type: \"string\",\r\n    isBase: true\r\n  },\r\n  {\r\n    id: Math.random().toString(),\r\n    name: \"shortDesc\",\r\n    title: \"Short Description\",\r\n    description: \"\",\r\n    type: \"string\",\r\n    isBase: true\r\n  },\r\n  {\r\n    id: Math.random().toString(),\r\n    name: \"thumbnail\",\r\n    title: \"Thumbnail\",\r\n    description: \"\",\r\n    type: \"media\",\r\n    isBase: true\r\n  }\r\n  // {\r\n  //   id: Math.random().toString(),\r\n  //   name: \"code\",\r\n  //   title: \"Code\",\r\n  //   description: \"\",\r\n  //   type: \"number\",\r\n  //   isBase: true\r\n  // },\r\n  // {\r\n  //   id: Math.random().toString(),\r\n  //   name: \"images\",\r\n  //   title: \"Images\",\r\n  //   description: \"\",\r\n  //   type: \"media\",\r\n  //   isBase: true,\r\n  //   isList: true\r\n  // },\r\n  // {\r\n  //   id: Math.random().toString(),\r\n  //   name: \"longDesc\",\r\n  //   title: \"Long Description\",\r\n  //   description: \"\",\r\n  //   type: \"richText\",\r\n  //   isBase: true\r\n  // }\r\n];\r\n\r\nconst ItemTypes = props => {\r\n  const [{ contentTypes }, dispatch] = useGlobalState();\r\n\r\n  const { name: pageTitle, desc: pageDescription } = props.component;\r\n  // variables and handlers\r\n  const [upsertFieldModal, toggleUpsertFieldModal] = useState(false);\r\n  const [upsertItemTypeModal, toggleUpserItemTypeModal] = useState(false);\r\n  const [selectedItemType, setItemType] = useState({});\r\n  const [fields, setFields] = useState([]);\r\n  const [updateMode, setUpdateMode] = useState();\r\n\r\n  const [rightContent, toggleRightContent] = useState(false);\r\n\r\n  function openAddItemTypeModal() {\r\n    setUpdateMode(false);\r\n    toggleUpserItemTypeModal(true);\r\n  }\r\n\r\n  function closeAddItemTypeModal(item) {\r\n    if (item === undefined) toggleUpserItemTypeModal(false);\r\n    else upsertItemType(item);\r\n  }\r\n\r\n  function updateNodeInList(list, node, newValue) {\r\n    for (let i = 0; i < list.length; i++) {\r\n      if (list[i].id === node.id) {\r\n        list[i] = newValue;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  function deleteNodeInList(list, node) {\r\n    for (let i = 0; i < list.length; i++) {\r\n      if (list[i].id === node.id) {\r\n        list.splice(i, 1);\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  function editItemType(item) {\r\n    setItemType(item);\r\n    setUpdateMode(true);\r\n    toggleUpserItemTypeModal(true);\r\n  }\r\n\r\n  function upsertItemType(item) {\r\n    if (updateMode) {\r\n      let obj = {};\r\n      for (const key in selectedItemType) {\r\n        obj[key] = selectedItemType[key];\r\n      }\r\n      obj[\"name\"] = item.name;\r\n      obj[\"title\"] = item.title;\r\n      obj[\"description\"] = item.description;\r\n      updateNodeInList(contentTypes, selectedItemType, obj);\r\n      dispatch({\r\n        type: \"SET_CONTENT_TYPES\",\r\n        value: contentTypes\r\n      });\r\n      toggleUpserItemTypeModal(false);\r\n    } else {\r\n      let obj = {\r\n        id: Math.random(),\r\n        name: item.name,\r\n        title: item.title,\r\n        description: item.description,\r\n        fields: [...baseFields, ...item.selectedTemplate.fields],\r\n        type: \"contentType\",\r\n        template: item.selectedTemplate.name,\r\n        allowCustomFields: item.selectedTemplate.allowCustomFields\r\n      };\r\n      let data = [...contentTypes];\r\n      data.push(obj);\r\n      dispatch({\r\n        type: \"SET_CONTENT_TYPES\",\r\n        value: data\r\n      });\r\n      toggleUpserItemTypeModal(false);\r\n      console.log(contentTypes);\r\n    }\r\n  }\r\n  function removeItemType(selected) {\r\n    deleteNodeInList(contentTypes, selected);\r\n    const data = [...contentTypes];\r\n    dispatch({\r\n      type: \"SET_CONTENT_TYPES\",\r\n      value: data\r\n    });\r\n    toggleRightContent(false);\r\n  }\r\n  function closeRightContent() {\r\n    toggleRightContent();\r\n  }\r\n\r\n  // field\r\n  function showFields(item) {\r\n    if (!rightContent) toggleRightContent(true);\r\n    setItemType(item);\r\n    setFields(item.fields);\r\n  }\r\n  function closeAddFieldModal() {\r\n    toggleUpsertFieldModal(false);\r\n  }\r\n  function addNewField() {\r\n    toggleUpsertFieldModal(prevModal => !prevModal);\r\n  }\r\n  function handleAddField(field) {\r\n    if (selectedItemType.fields === undefined) selectedItemType.fields = [];\r\n    const m = [...fields];\r\n    m.push(field);\r\n    setFields(m);\r\n    selectedItemType.fields.push(field);\r\n    updateNodeInList(contentTypes, selectedItemType, selectedItemType); //\r\n    dispatch({\r\n      type: \"SET_CONTENT_TYPES\",\r\n      value: contentTypes\r\n    });\r\n  }\r\n  function handleRemoveField(field) {\r\n    const m = fields.filter(item => item.id !== field.id);\r\n    setFields(m);\r\n    selectedItemType.fields = m;\r\n    updateNodeInList(contentTypes, selectedItemType, selectedItemType); //\r\n    dispatch({\r\n      type: \"SET_CONTENT_TYPES\",\r\n      value: contentTypes\r\n    });\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"ct-wrapper\">\r\n        <div className=\"ct-header\">\r\n          <div className=\"ct-header-left\">\r\n            <span className=\"ct-header-title\">{pageTitle}</span>\r\n            <span className=\"ct-header-description\">{pageDescription}</span>\r\n          </div>\r\n          <div className=\"ct-header-right\">\r\n            <button className=\"btn btn-primary\" onClick={openAddItemTypeModal}>\r\n              {languageManager.translate(\"CONTENT_TYPE_NEW_ITEM_BTN\")}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"ct-content\">\r\n          <div className=\"ct-content-left\">\r\n            <List\r\n              rightContent={rightContent}\r\n              data={contentTypes}\r\n              handleEditType={selected => editItemType(selected)}\r\n              handleDeleteType={selected => removeItemType(selected)}\r\n              handleShowFields={selected => showFields(selected)}\r\n            />\r\n          </div>\r\n          {rightContent && (\r\n            <div className=\"ct-content-right animated slideInRight faster\">\r\n              <div className=\"ct-content-right-header\">\r\n                <span className=\"ct-right-header-title\">\r\n                  {languageManager.translate(\"CONTENT_TYPE_MODEL_HEADER_TITLE\")}\r\n                </span>\r\n                <span className=\"ct-right-header-description\">\r\n                  {languageManager.translate(\"CONTENT_TYPE_MODEL_HEADER_DESC\")}\r\n                </span>\r\n                <span\r\n                  className=\"icon-cross closeIcon\"\r\n                  onClick={closeRightContent}\r\n                />\r\n              </div>\r\n              <div className=\"ct-content-right-body\">\r\n                <div className=\"fieldsContent\">\r\n                  {/* <SortableContainer onSortEnd={onSortEnd}>\r\n                    {fields.map((value, index) => (\r\n                      <SortableItem\r\n                        key={`item-${index}`}\r\n                        index={index}\r\n                        field={value}\r\n                      />\r\n                    ))}\r\n                  </SortableContainer> */}\r\n                  {fields &&\r\n                    fields.map(field => (\r\n                      <div\r\n                        className=\"fieldItem\"\r\n                        key={field.id}\r\n                        // style={{\r\n                        //   display: !selectedItemType.allowCustomFields\r\n                        //     ? field.isBase\r\n                        //       ? \"none\"\r\n                        //       : \"flex\"\r\n                        //     : \"flex\"\r\n                        // }}\r\n                      >\r\n                        <div className=\"fieldItem-icon\">\r\n                          <i className=\"icon-more-h\" />\r\n                        </div>\r\n                        <div className=\"fieldItem-type\">\r\n                          <i\r\n                            className={\r\n                              field.type === \"string\"\r\n                                ? \"icon-file-text\"\r\n                                : field.type === \"number\"\r\n                                ? \"icon-number\"\r\n                                : field.type === \"dateTime\"\r\n                                ? \"icon-calendar\"\r\n                                : field.type === \"location\"\r\n                                ? \"icon-location\"\r\n                                : field.type === \"media\"\r\n                                ? \"icon-images\"\r\n                                : field.type === \"jsonObject\"\r\n                                ? \"icon-json-file\"\r\n                                : field.type === \"reference\"\r\n                                ? \"icon-reference\"\r\n                                : field.type === \"boolean\"\r\n                                ? \"icon-boolean\"\r\n                                : \"icon-file-text\"\r\n                            }\r\n                          />\r\n                        </div>\r\n                        <div className=\"fieldItem-name\">{field.name}</div>\r\n                        <div className=\"fieldItem-title\">{field.title}</div>\r\n\r\n                        <div className=\"fieldItem-actions\">\r\n                          {field.isBase === undefined || !field.isBase ? (\r\n                            <>\r\n                              <button\r\n                                className=\"btn btn-link\"\r\n                                size=\"xs\"\r\n                                onClick={() => handleRemoveField(field)}\r\n                              >\r\n                                <i className=\"icon-bin\" />\r\n                              </button>\r\n                              <button className=\"btn btn-link\" size=\"xs\">\r\n                                Settings\r\n                              </button>\r\n                            </>\r\n                          ) : (\r\n                            // <span className=\"badge badge-danger label-nonEditable\">\r\n                            //   Non-editable\r\n                            // </span>\r\n                            <div />\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"btnNewFieldContent\">\r\n                  {selectedItemType.allowCustomFields && (\r\n                    <button className=\"btn btn-primary\" onClick={addNewField}>\r\n                      <i className=\"icon-plus\" />\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {upsertItemTypeModal && (\r\n        <AddNewItemType\r\n          selectedItemType={selectedItemType}\r\n          updateMode={updateMode}\r\n          isOpen={upsertFieldModal}\r\n          onCloseModal={closeAddItemTypeModal}\r\n        />\r\n      )}\r\n      {upsertFieldModal && (\r\n        <AddNewField\r\n          selectedItemType={selectedItemType}\r\n          isOpen={upsertFieldModal}\r\n          onCloseModal={closeAddFieldModal}\r\n          onAddField={field => handleAddField(field)}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ItemTypes;\r\n","import React from \"react\";\r\nimport \"./styles.scss\";\r\nconst ManageUsers = props => {\r\n  const { name: pageTitle, desc: pageDescription } = props.component;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"c-wrapper\">\r\n        <div className=\"c-header\">\r\n          <div className=\"c-header-left\">\r\n            <span className=\"c-header-title\">{pageTitle}</span>\r\n            <span className=\"c-header-description\">{pageDescription}</span>\r\n          </div>\r\n          <div className=\"c-header-right\" />\r\n        </div>\r\n        <div className=\"c-content\">\r\n          <div className=\"c-content-left\">\r\n          </div>\r\n          <div className=\"c-content-right\" />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ManageUsers;\r\n","import React, { Component } from \"react\";\r\nimport { ListGroup, ListGroupItem, Collapse } from \"reactstrap\";\r\nimport { languageManager } from \"../../../services\";\r\n\r\nclass Tree extends Component {\r\n  state = {\r\n    selected: {},\r\n    hasContentType: false\r\n  };\r\n  static getDerivedStateFromProps(props, current_state) {\r\n    if (!props.leftContent) {\r\n      return {\r\n        selected: {}\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n  toggle = event => {\r\n    const id = event.target.getAttribute(\"id\");\r\n    this.setState(state => ({ [id]: !state[id] }));\r\n  };\r\n  mapper = (nodes, parentId, lvl) => {\r\n    return nodes.map((node, index) => {\r\n      const id = `${node.id}-${parentId ? parentId : \"top\"}`.replace(\r\n        /[^a-zA-Z0-9-_]/g,\r\n        \"\"\r\n      );\r\n      return (\r\n        <>\r\n          <ListGroupItem\r\n            key={index}\r\n            style={{\r\n              zIndex: 0,\r\n              padding: 10,\r\n              background:\r\n                this.state.selected.id === node.id ? \"lightgray\" : \"white\"\r\n            }}\r\n            className={`treeItemParent ${\r\n              parentId ? `rounded-0 ${lvl ? \"border-bottom-0\" : \"\"}` : \"\"\r\n            }`}\r\n          >\r\n            {\r\n              <div\r\n                className=\"treeItem\"\r\n                style={{\r\n                  paddingLeft: `${15 * lvl}px`\r\n                }}\r\n              >\r\n                {(node.children && node.children.length > 0) ||\r\n                (node.itemTypes && node.itemTypes.length > 0) ? (\r\n                  <button\r\n                    className=\"btnCategoryCollapse btn btn-primary btn-sm\"\r\n                    id={id}\r\n                    color=\"primary\"\r\n                    onClick={this.toggle}\r\n                  >\r\n                    {this.state[id] ? (\r\n                      <i className=\"icon-caret-down\" onClick={this.toggle} />\r\n                    ) : (\r\n                      <i className=\"icon-caret-right\" onClick={this.toggle} />\r\n                    )}\r\n                  </button>\r\n                ) : node.type === \"category\" ? (\r\n                  <button className=\"btnCategoryLeaf btn btn-primary btn-sm\">\r\n                    <i className=\"icon-circle-o\" />\r\n                  </button>\r\n                ) : (\r\n                  <button className=\"btnCategoryLeaf btn btn-dark btn-sm\">\r\n                    <i className=\"icon-circle-o\" />\r\n                  </button>\r\n                )}\r\n                <div className=\"treeItem-text\">\r\n                  <span className=\"treeItem-name\">{node.title}</span>\r\n                  <span className=\"treeItem-desc\">\r\n                    {node.description ||\r\n                      \"Lorem ipsum dolor sit amet, consectetur\"}\r\n                  </span>\r\n                </div>\r\n                {this.props.hasContentType\r\n                  ? node.type === \"contentType\" && (\r\n                      <button\r\n                        className=\"btn btn-light treeItem-action\"\r\n                        size=\"xs\"\r\n                        onClick={() => {\r\n                          this.setState(state => ({ selected: node }));\r\n                          this.props.onContentSelect(node);\r\n                        }}\r\n                      >\r\n                        <span style={{ fontSize: 12 }}>\r\n                          {languageManager.translate(\r\n                            \"ITEMS_CATEGORIES_CONTENT\"\r\n                          )}\r\n                        </span>\r\n                      </button>\r\n                    )\r\n                  : (node.children === undefined ||\r\n                      node.children.length === 0 ||\r\n                      (node.itemTypes === undefined ||\r\n                        node.itemTypes.length === 0)) && (\r\n                      <button\r\n                        className=\"btn btn-light treeItem-action\"\r\n                        size=\"xs\"\r\n                        onClick={() => {\r\n                          this.setState(state => ({ selected: node }));\r\n                          this.props.onContentSelect(node);\r\n                        }}\r\n                      >\r\n                        <span style={{ fontSize: 12 }}>\r\n                          {languageManager.translate(\r\n                            \"ITEMS_CATEGORIES_CONTENT\"\r\n                          )}\r\n                        </span>\r\n                      </button>\r\n                    )}\r\n              </div>\r\n            }\r\n          </ListGroupItem>\r\n          {(node.children || node.itemTypes) && (\r\n            <Collapse isOpen={this.state[id]}>\r\n              {this.mapper(node.children || node.itemTypes, id, (lvl || 0) + 1)}\r\n            </Collapse>\r\n          )}\r\n        </>\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return <ListGroup>{this.mapper(this.props.data)}</ListGroup>;\r\n  }\r\n}\r\n\r\nexport default Tree;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\nimport { useGlobalState } from \"./../../services\";\r\nimport \"./styles.scss\";\r\nimport Tree from \"./Categories\";\r\n\r\nconst table_data = [\r\n  {\r\n    thumbnail:\r\n      \"https://myresources1195.blob.core.windows.net/images/banana.jpg\",\r\n    name: \"موز ممتاز\",\r\n    description: \"محصولات وارداتی از افریقا\",\r\n    price: \"2500 $\",\r\n    brand: \"Banana\"\r\n  },\r\n  {\r\n    thumbnail:\r\n      \"https://myresources1195.blob.core.windows.net/images/banana.jpg\",\r\n    name: \"موز ممتاز\",\r\n    description: \"محصولات وارداتی از افریقا\",\r\n    price: \"2500 $\",\r\n    brand: \"Banana\"\r\n  },\r\n  {\r\n    thumbnail:\r\n      \"https://myresources1195.blob.core.windows.net/images/banana.jpg\",\r\n    name: \"موز ممتاز\",\r\n    description: \"محصولات وارداتی از افریقا\",\r\n    price: \"2500 $\",\r\n    brand: \"Banana\"\r\n  },\r\n  {\r\n    thumbnail:\r\n      \"https://myresources1195.blob.core.windows.net/images/banana.jpg\",\r\n    name: \"موز ممتاز\",\r\n    description: \"محصولات وارداتی از افریقا\",\r\n    price: \"2500 $\",\r\n    brand: \"Banana\"\r\n  },\r\n  {\r\n    thumbnail:\r\n      \"https://myresources1195.blob.core.windows.net/images/banana.jpg\",\r\n    name: \"موز ممتاز\",\r\n    description: \"محصولات وارداتی از افریقا\",\r\n    price: \"2500 $\",\r\n    brand: \"Banana\"\r\n  },\r\n  {\r\n    thumbnail:\r\n      \"https://myresources1195.blob.core.windows.net/images/banana.jpg\",\r\n    name: \"موز ممتاز\",\r\n    description: \"محصولات وارداتی از افریقا\",\r\n    price: \"2500 $\",\r\n    brand: \"Banana\"\r\n  },\r\n  {\r\n    thumbnail:\r\n      \"https://myresources1195.blob.core.windows.net/images/banana.jpg\",\r\n    name: \"موز ممتاز\",\r\n    description: \"محصولات وارداتی از افریقا\",\r\n    price: \"2500 $\",\r\n    brand: \"Banana\"\r\n  },\r\n  {\r\n    thumbnail:\r\n      \"https://myresources1195.blob.core.windows.net/images/banana.jpg\",\r\n    name: \"موز ممتاز\",\r\n    description: \"محصولات وارداتی از افریقا\",\r\n    price: \"2500 $\",\r\n    brand: \"Banana\"\r\n  },\r\n  {\r\n    thumbnail:\r\n      \"https://myresources1195.blob.core.windows.net/images/banana.jpg\",\r\n    name: \"موز ممتاز\",\r\n    description: \"محصولات وارداتی از افریقا\",\r\n    price: \"2500 $\",\r\n    brand: \"Banana\"\r\n  },\r\n  {\r\n    thumbnail:\r\n      \"https://myresources1195.blob.core.windows.net/images/banana.jpg\",\r\n    name: \"موز ممتاز\",\r\n    description: \"محصولات وارداتی از افریقا\",\r\n    price: \"2500 $\",\r\n    brand: \"Banana\"\r\n  }\r\n];\r\nconst Products = props => {\r\n  let baseFieldColumnsConfig = [\r\n    {\r\n      Header: \"#\",\r\n      //show: false,\r\n      width: 70,\r\n      headerStyle: {\r\n        display: \"none\"\r\n      },\r\n      Cell: props => {\r\n        return (\r\n          <div className=\"p-number\">\r\n            <div className=\"p-number-value\">{props.index + 1}</div>\r\n          </div>\r\n        );\r\n      }\r\n    },\r\n    {\r\n      width: 100,\r\n      Header: \"Image\",\r\n      //show: false,\r\n      headerStyle: {\r\n        display: \"none\"\r\n      },\r\n      accessor: \"thumbnail\",\r\n      Cell: props => (\r\n        <div className=\"p-image\">\r\n          <img className=\"p-image-value\" src={props.value} alt=\"\" />\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      Header: \"Name\",\r\n      //show: false,\r\n      headerStyle: {\r\n        display: \"none\"\r\n      },\r\n      accessor: \"name\",\r\n      Cell: props => <div className=\"p-name\">{props.value}</div>\r\n    },\r\n    {\r\n      Header: \"Description\",\r\n      //show: false,\r\n      headerStyle: {\r\n        display: \"none\"\r\n      },\r\n      accessor: \"description\",\r\n      Cell: props => <div className=\"p-description\">{props.value}</div>\r\n    },\r\n\r\n    {\r\n      Header: \"Actions\",\r\n      //show: false,\r\n      headerStyle: {\r\n        display: \"none\"\r\n      },\r\n      Cell: props => (\r\n        <div className=\"p-actions\">\r\n          <button\r\n            className=\"btn btn-light\"\r\n            onClick={() => handleDeleteRow(props)}\r\n          >\r\n            Edit\r\n          </button>\r\n          <button\r\n            className=\"btn btn-light\"\r\n            onClick={() => handleEditRow(props)}\r\n          >\r\n            <i className=\"icon-bin\" />\r\n          </button>\r\n        </div>\r\n      )\r\n    }\r\n  ];\r\n\r\n  // variables\r\n  const [{ categories: categories_data }, disptch] = useGlobalState();\r\n\r\n  const tableBox = useRef(null);\r\n  const { name: pageTitle, desc: pageDescription } = props.component;\r\n  const [treeData, setTreeData] = useState(categories_data);\r\n  const [hasContentType, setCategoryContentTypeStatus] = useState(\r\n    checkContentType(categories_data)\r\n  );\r\n  const [gridData, setGridData] = useState(table_data);\r\n\r\n  const [listContent, toggleListContent] = useState(true);\r\n  const [leftContent, toggleLeftContent] = useState(false);\r\n  const [tableHeaderTitle, setTableHeaderTitle] = useState(false);\r\n\r\n  const [selectedNode, setSelectedNode] = useState();\r\n  const [columnsVisibility, toggleColumns] = useState(false);\r\n\r\n  const [columns, setColumns] = useState(baseFieldColumnsConfig.slice());\r\n\r\n  // methods\r\n\r\n  function checkContentType(data) {\r\n    for (let i = 0; i < data.length; i++) {\r\n      if (data[i].type === \"contentType\") {\r\n        return true;\r\n      }\r\n      if (data[i].children) return checkContentType(data[i].children);\r\n    }\r\n  }\r\n  function initColumns() {\r\n    if (columnsVisibility) {\r\n      const cols = baseFieldColumnsConfig.map(col => {\r\n        let item = col;\r\n        item.headerStyle.display = \"none\";\r\n        return item;\r\n      });\r\n      setColumns(cols);\r\n      toggleColumns(true);\r\n    }\r\n  }\r\n\r\n  function toggleFilterBox() {\r\n    toggleLeftContent(prevState => !prevState);\r\n  }\r\n  function openNewItemBox() {\r\n    props.history.push({\r\n      pathname: \"/addNew\",\r\n      // search: \"?sort=name\",\r\n      //hash: \"#the-hash\",\r\n      params: { selectedNode, hasContentType }\r\n    });\r\n  }\r\n  function makeTableFieldView(type, props) {\r\n    switch (type) {\r\n      case \"string\":\r\n        return <div className=\"p-string\">{props.value}</div>;\r\n      default:\r\n        return <div className=\"p-string\">{props.value}</div>;\r\n    }\r\n  }\r\n  function handleClickCategoryContent(selected) {\r\n    setSelectedNode(selected);\r\n    setTableHeaderTitle(selected.name);\r\n    // if (selected.type === \"category\") {\r\n    //   initColumns();\r\n    // } else {\r\n    //   if (selected.fields) {\r\n    //     toggleColumns(true); // columns are visible or not\r\n\r\n    //     const cols = columns.slice();\r\n    //     let c_arr = cols.map(col => {\r\n    //       let item = col;\r\n    //       item.headerStyle.display = \"flex\";\r\n    //       return item;\r\n    //     });\r\n    //     const fields = selected.fields;\r\n    //     for (let i = 0; i < fields.length; i++) {\r\n    //       const field = selected.fields[i];\r\n    //       const obj = {\r\n    //         Header: field.title,\r\n    //         //show: false,\r\n    //         headerStyle: {\r\n    //           display: \"block\"\r\n    //         },\r\n    //         accessor: field.name,\r\n    //         Cell: props => {\r\n    //           return makeTableFieldView(field.type, props);\r\n    //         }\r\n    //       };\r\n    //       c_arr.push(obj);\r\n    //     }\r\n    //     setColumns(c_arr);\r\n    //   } else {\r\n    //     initColumns();\r\n    //   }\r\n    // }\r\n  }\r\n  function handleDeleteRow(row) {\r\n    console.log(row);\r\n  }\r\n  function handleEditRow(row) {\r\n    console.log(row);\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"p-wrapper\">\r\n        <div className=\"p-header\">\r\n          <div className=\"p-header-left\">\r\n            <span className=\"p-header-title\">{pageTitle}</span>\r\n            <span className=\"p-header-description\">{pageDescription}</span>\r\n          </div>\r\n          <div className=\"p-header-right\">\r\n            <div className=\"input-group\">\r\n              <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\">@</span>\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Search in all data\"\r\n              />\r\n            </div>\r\n            <button className=\"btn btn-primary\">\r\n              <i className=\"icon-folder\" />\r\n            </button>\r\n            <button className=\"btn btn-primary\">\r\n              <i className=\"icon-list\" />\r\n            </button>\r\n            <button className=\"btn btn-primary\" onClick={toggleFilterBox}>\r\n              <i className=\"icon-filter\" />\r\n            </button>\r\n            <button className=\"btn btn-primary\" onClick={openNewItemBox}>\r\n              New Item\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"p-content\">\r\n          {listContent && (\r\n            <>\r\n              {leftContent && (\r\n                <div className=\"p-content-left animated zoomIn faster\">\r\n                  <Tree\r\n                    leftContent={leftContent}\r\n                    data={treeData}\r\n                    hasContentType={hasContentType}\r\n                    onContentSelect={selected =>\r\n                      handleClickCategoryContent(selected)\r\n                    }\r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"p-content-right\" ref={tableBox}>\r\n                <div className=\"p-content-right-header\">\r\n                  <div className=\"p-content-header-title\">\r\n                    All Data\r\n                    {tableHeaderTitle.length > 0 ? (\r\n                      <span>({tableHeaderTitle})</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div className=\"p-content-right-body\">\r\n                  <ReactTable\r\n                    data={gridData}\r\n                    defaultPageSize={10}\r\n                    minRows={3}\r\n                    columns={columns}\r\n                    showPaginationTop={false}\r\n                    showPaginationBottom={false}\r\n                    style={{\r\n                      overflowX: \"auto\",\r\n                      height: \"100%\" // This will force the table body to overflow and scroll, since there is not enough room\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n","import React from \"react\";\r\nimport \"./styles.scss\";\r\nconst Requests = props => {\r\n  const { name: pageTitle, desc: pageDescription } = props.component;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"c-wrapper\">\r\n        <div className=\"c-header\">\r\n          <div className=\"c-header-left\">\r\n            <span className=\"c-header-title\">{pageTitle}</span>\r\n            <span className=\"c-header-description\">{pageDescription}</span>\r\n          </div>\r\n          <div className=\"c-header-right\" />\r\n        </div>\r\n        <div className=\"c-content\">\r\n          <div className=\"c-content-left\" />\r\n          <div className=\"c-content-right\" />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Requests;\r\n","import React from \"react\";\r\nimport \"./styles.scss\";\r\nconst Quotes = props => {\r\n  const { name: pageTitle, desc: pageDescription } = props.component;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"c-wrapper\">\r\n        <div className=\"c-header\">\r\n          <div className=\"c-header-left\">\r\n            <span className=\"c-header-title\">{pageTitle}</span>\r\n            <span className=\"c-header-description\">{pageDescription}</span>\r\n          </div>\r\n          <div className=\"c-header-right\" />\r\n        </div>\r\n        <div className=\"c-content\">\r\n          <div className=\"c-content-left\">\r\n          </div>\r\n          <div className=\"c-content-right\" />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Quotes;\r\n","import React, { Component } from \"react\";\r\nimport { ListGroup, ListGroupItem, Collapse } from \"reactstrap\";\r\nimport { languageManager } from \"../../../services\";\r\n\r\nclass Tree extends Component {\r\n  state = {\r\n    selected: {},\r\n    hasContentType: false\r\n  };\r\n  static getDerivedStateFromProps(props, current_state) {\r\n    if (!props.leftContent) {\r\n      return {\r\n        selected: {}\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n  toggle = event => {\r\n    const id = event.target.getAttribute(\"id\");\r\n    this.setState(state => ({ [id]: !state[id] }));\r\n  };\r\n  mapper = (nodes, parentId, lvl) => {\r\n    return nodes.map((node, index) => {\r\n      const id = `${node.id}-${parentId ? parentId : \"top\"}`.replace(\r\n        /[^a-zA-Z0-9-_]/g,\r\n        \"\"\r\n      );\r\n      return (\r\n        <>\r\n          <ListGroupItem\r\n            key={index}\r\n            style={{\r\n              zIndex: 0,\r\n              padding: 10,\r\n              background:\r\n                this.state.selected.id === node.id ? \"lightgray\" : \"white\"\r\n            }}\r\n            className={`treeItemParent ${\r\n              parentId ? `rounded-0 ${lvl ? \"border-bottom-0\" : \"\"}` : \"\"\r\n              }`}\r\n          >\r\n            {\r\n              <div\r\n                className=\"treeItem\"\r\n                style={{\r\n                  paddingLeft: `${15 * lvl}px`\r\n                }}\r\n              >\r\n                {node.children && node.children.length > 0 ? (\r\n                  <button\r\n                    className=\"btnCategoryCollapse btn btn-primary btn-sm\"\r\n                    id={id}\r\n                    color=\"primary\"\r\n                    onClick={this.toggle}\r\n                  >\r\n                    {this.state[id] ? (\r\n                      <i className=\"icon-caret-down\" onClick={this.toggle} />\r\n                    ) : (\r\n                        <i className=\"icon-caret-right\" onClick={this.toggle} />\r\n                      )}\r\n                  </button>\r\n                ) : node.type === \"category\" ? (\r\n                  <button className=\"btnCategoryLeaf btn btn-primary btn-sm\">\r\n                    <i className=\"icon-circle-o\" />\r\n                  </button>\r\n                ) : (\r\n                      <button className=\"btnCategoryLeaf btn btn-dark btn-sm\">\r\n                        <i className=\"icon-circle-o\" />\r\n                      </button>\r\n                    )}\r\n                <div className=\"treeItem-text\">\r\n                  <span className=\"treeItem-name\">{node.name}</span>\r\n                  <span className=\"treeItem-desc\">\r\n                    {node.description ||\r\n                      \"Lorem ipsum dolor sit amet, consectetur\"}\r\n                  </span>\r\n                </div>\r\n                {this.props.hasContentType\r\n                  ? node.type === \"contentType\" && (\r\n                    <button\r\n                      className=\"btn btn-light treeItem-action\"\r\n                      size=\"xs\"\r\n                      onClick={() => {\r\n                        this.setState(state => ({ selected: node }));\r\n                        this.props.onRowSelect(node);\r\n                      }}\r\n                    >\r\n                      <span style={{ fontSize: 12 }}>\r\n                        {languageManager.translate(\r\n                          \"ITEMS_CATEGORIES_CONTENT\"\r\n                        )}\r\n                      </span>\r\n                    </button>\r\n                  )\r\n                  : (node.children === undefined ||\r\n                    node.children.length === 0) && (\r\n                    <button\r\n                      className=\"btn btn-light treeItem-action\"\r\n                      size=\"xs\"\r\n                      onClick={() => {\r\n                        this.setState(state => ({ selected: node }));\r\n                        this.props.onRowSelect(node);\r\n                      }}\r\n                    >\r\n                      <span style={{ fontSize: 12 }}>\r\n                        {languageManager.translate(\r\n                          \"Select\"\r\n                        )}\r\n                      </span>\r\n                    </button>\r\n                  )}\r\n              </div>\r\n            }\r\n          </ListGroupItem>\r\n          {node.children && (\r\n            <Collapse isOpen={this.state[id]}>\r\n              {this.mapper(node.children, id, (lvl || 0) + 1)}\r\n            </Collapse>\r\n          )}\r\n        </>\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return <ListGroup>{this.mapper(this.props.data)}</ListGroup>;\r\n  }\r\n}\r\n\r\nexport default Tree;\r\n","import React, { useState } from \"react\";\r\nimport \"./styles.scss\";\r\nimport { Modal, ModalHeader, ModalBody } from \"reactstrap\";\r\nimport Tree from \"./tree\";\r\n\r\nconst Categories = props => {\r\n  function handleRowSelect(selected) {\r\n    props.onCloseModal(selected);\r\n  }\r\n\r\n  function closeModal(params) {\r\n    props.onCloseModal(undefined);\r\n  }\r\n  return (\r\n    <Modal isOpen={true} toggle={closeModal}>\r\n      <ModalHeader toggle={closeModal}>Choose a category</ModalHeader>\r\n      <ModalBody className=\"up-categories\">\r\n        <Tree\r\n          data={props.categoriesData}\r\n          hasContentType={props.hasContentType}\r\n          onRowSelect={selected => handleRowSelect(selected)}\r\n        />\r\n      </ModalBody>\r\n    </Modal>\r\n  );\r\n};\r\nexport default Categories;\r\n","import React, { useState } from \"react\";\r\nimport \"./styles.scss\";\r\n\r\nconst BooleanComponent = props => {\r\n  const { field } = props;\r\n  if (field.appearance === \"checkbox\") {\r\n    return (\r\n      <div className=\"form-check\">\r\n        <input\r\n                className=\"form-check-input\"\r\n          type=\"checkbox\"\r\n          value=\"\"\r\n          id={\"chk\" + field.id}\r\n        />\r\n            <label className=\"form-check-label\" for={\"chk\" + field.id}>\r\n          {field.title}\r\n        </label>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n        <div className=\"form-check\">\r\n        <input\r\n                className=\"form-check-input\"\r\n          type=\"checkbox\"\r\n          value=\"\"\r\n          id={\"chk\" + field.id}\r\n        />\r\n            <label className=\"form-check-label\" for={\"chk\" + field.id}>\r\n          {field.title}\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default BooleanComponent;\r\n","import React, { useState } from \"react\";\r\nimport \"./styles.scss\";\r\n\r\nconst DateTimeInput = props => {\r\n  const { field } = props;\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label>{field.title}</label>\r\n      <textarea\r\n        type=\"datetime\"\r\n        className=\"form-control up-form-stringInput-textArea\"\r\n        placeholder={field.title}\r\n\r\n      />\r\n      <small className=\"form-text text-muted\">{field.description}</small>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DateTimeInput;\r\n","import React, { useState } from \"react\";\r\nimport \"./styles.scss\";\r\n\r\nconst KeyValueInput = props => {\r\n  const { field } = props;\r\n  if (field.appearance === \"combo\") {\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label>{field.title}</label>\r\n        <select className=\"form-control\">\r\n          {field.options &&\r\n            field.options.map(option => (\r\n              <option value={option.key}>{option.value}</option>\r\n            ))}\r\n        </select>\r\n        <small className=\"form-text text-muted\">{field.description}</small>\r\n      </div>\r\n    );\r\n  } else if (field.appearance === \"radioGroup\") {\r\n    return (\r\n      <>\r\n        <label>{field.title}</label>\r\n        <div className=\"up-form-keyvalue-radio\">\r\n          {field.options.map(option => (\r\n            <div class=\"form-check\">\r\n              <input\r\n                class=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"exampleRadios\"\r\n                id={\"radio\" + option.key}\r\n                value={option.key}\r\n              />\r\n              <label class=\"form-check-label\" for={\"radio\" + option.key}>\r\n                {option.value}\r\n              </label>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label>{field.title}</label>\r\n        <select className=\"form-control\">\r\n          {field.options &&\r\n            field.options.map(option => (\r\n              <option value={option.key}>{option.value}</option>\r\n            ))}\r\n        </select>\r\n        <small className=\"form-text text-muted\">{field.description}</small>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default KeyValueInput;\r\n","import React, { useState } from \"react\";\r\nimport \"./styles.scss\";\r\n\r\nconst LocationInput = props => {\r\n    return <div />;\r\n}\r\n\r\nexport default LocationInput;","import React, { useState } from \"react\";\r\nimport \"./styles.scss\";\r\n\r\nconst MediaInput = props => {\r\n  const { field } = props;\r\n  const [images, setImages] = useState([]);\r\n  function handleChange(event) {\r\n    const obj = {\r\n      id: Math.random(),\r\n      url: URL.createObjectURL(event.target.files[0])\r\n    };\r\n    if (field.isList !== undefined && field.isList) {\r\n      let imgs = [...images];\r\n      imgs.push(obj);\r\n      setImages(imgs);\r\n    } else {\r\n      let imgs = [...images];\r\n      imgs[0] = obj;\r\n      setImages(imgs);\r\n    }\r\n  }\r\n\r\n  function removeImage(image) {\r\n    const imgs = images.filter(img => img.id !== image.id);\r\n    setImages(imgs);\r\n  }\r\n  return (\r\n    <div className=\"up-uploader\">\r\n      <span className=\"title\">{field.title}</span>\r\n      <span className=\"description\">{field.description}</span>\r\n\r\n      <div className=\"files\">\r\n        {images.map(image => (\r\n          <div className=\"files-uploaded\">\r\n            <div\r\n              className=\"files-uploaded-icon\"\r\n              onClick={() => removeImage(image)}\r\n            >\r\n              <i className=\"icon-bin\" />\r\n            </div>\r\n            <img src={image.url} alt=\"\" />\r\n          </div>\r\n        ))}\r\n        <div className=\"files-input\">\r\n          <input type=\"file\" className=\"btn\" onChange={handleChange} />\r\n          <i className=\"icon-camera\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MediaInput;\r\n","import React, { useState } from \"react\";\r\nimport \"./styles.scss\";\r\n\r\nconst NumberInput = props => {\r\n  const { field } = props;\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label>{field.title}</label>\r\n      <input\r\n        type=\"number\"\r\n        className=\"form-control\"\r\n        placeholder={field.title}\r\n      />\r\n      <small className=\"form-text text-muted\">{field.description}</small>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NumberInput;\r\n","import React, { useState } from \"react\";\r\nimport \"./styles.scss\";\r\n\r\nconst RichTextInput = props => {\r\n  const { field } = props;\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label>{field.title}</label>\r\n      <textarea\r\n        type=\"text\"\r\n        className=\"form-control up-form-richtext-textArea\"\r\n        placeholder={field.title}\r\n      />\r\n      <small className=\"form-text text-muted\">{field.description}</small>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RichTextInput;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./styles.scss\";\r\n\r\nconst StringInput = props => {\r\n  const { field } = props;\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (props.init && field.isRequired !== undefined && field.isRequired) {\r\n      props.init(field.name);\r\n    }\r\n  }, []);\r\n  function handleOnChange(e) {\r\n    setInput(e.target.value);\r\n    if (field.isRequired) {\r\n      let isValid = false;\r\n      if (e.target.value.length > 0) {\r\n        isValid = true;\r\n      }\r\n      props.onChangeValue(field.name, e.target.value, isValid);\r\n    } else props.onChangeValue(field.name, e.target.value, true);\r\n  }\r\n  if (field.isMultiLine !== undefined && field.isMultiLine) {\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label>{field.title}</label>\r\n        <textarea\r\n          type=\"text\"\r\n          className=\"form-control up-form-stringInput-textArea\"\r\n          placeholder={field.title}\r\n          value={input}\r\n          onChange={handleOnChange}\r\n        />\r\n        <small className=\"form-text text-muted\">{field.description}</small>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label>{field.title}</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder={field.title}\r\n          value={input}\r\n          onChange={handleOnChange}\r\n        />\r\n        <small className=\"form-text text-muted\">{field.description}</small>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default StringInput;\r\n","import React, { useState } from \"react\";\r\nimport \"./styles.scss\";\r\nimport { useGlobalState } from \"./../../services\";\r\nimport CategoriesModal from \"./Categories\";\r\nimport {\r\n  String,\r\n  Number,\r\n  DateTime,\r\n  Location,\r\n  Media,\r\n  Boolean,\r\n  KeyValue,\r\n  RichText\r\n} from \"./Inputs\";\r\n\r\nconst baseFields = [\r\n  {\r\n    id: \"3333\",\r\n    index: 1,\r\n    name: \"name\",\r\n    title: \"Name\",\r\n    description: \"Name of product\",\r\n    type: \"string\",\r\n    isBase: true,\r\n    isRequired: true\r\n  },\r\n  {\r\n    id: \"6666\",\r\n    name: \"shortDesc\",\r\n    title: \"Short Description\",\r\n    description: \"\",\r\n    type: \"string\",\r\n    isBase: true,\r\n    index: 2,\r\n    isMultiLine: true\r\n  },\r\n  {\r\n    id: \"4444\",\r\n    name: \"thumbnail\",\r\n    title: \"Thumbnail\",\r\n    description: \"Lorem ipsum dolor sit amet, consectetur\",\r\n    type: \"media\",\r\n    mediaType: \"image\",\r\n    isList: false,\r\n    isBase: true,\r\n    index: 3\r\n  }\r\n  //   {\r\n  //     id: \"5555\",\r\n  //     name: \"images\",\r\n  //     title: \"Images\",\r\n  //     description: \"Lorem ipsum dolor sit amet, consectetur\",\r\n  //     type: \"media\",\r\n  //     isBase: true,\r\n  //     isList: true,\r\n  //     mediaType: \"image\",\r\n  //     index: 4\r\n  //   },\r\n\r\n  //   {\r\n  //     id: \"7777\",\r\n  //     name: \"longDesc\",\r\n  //     title: \"Long Description\",\r\n  //     description: \"Lorem ipsum dolor sit amet, consectetur\",\r\n  //     type: \"richText\",\r\n  //     isBase: true,\r\n  //     index: 5\r\n  //   }\r\n];\r\n\r\nconst UpsertProduct = props => {\r\n  const [{ categories: categories_data }, dispatch] = useGlobalState();\r\n\r\n  let hasContentType = props.location.params\r\n    ? props.location.params.hasContentType\r\n    : checkCategoryHasContentType(categories_data);\r\n\r\n  // variables\r\n  const [categoryModal, toggleCategoryModal] = useState(false);\r\n  const [categoryBoxTitle, setCategoryBoxTitle] = useState(\r\n    checkPropsToSetCategoryBoxTitle()\r\n  );\r\n  const [selectedNode, setSelectedNode] = useState(\r\n    props.location.params ? props.location.params.selectedNode : undefined\r\n  );\r\n  const f = selectedNode ? selectedNode.fields : undefined;\r\n  const [fields, setFields] = f\r\n    ? useState(f.sort((a, b) => a.index - b.index))\r\n    : useState(baseFields);\r\n\r\n  const [form, setForm] = useState({});\r\n  const [formValidation, setFormValidation] = useState({});\r\n  function setNameToFormValidation(name) {\r\n    setFormValidation(prevFormValidation => ({\r\n      [name]: null,\r\n      ...prevFormValidation\r\n    }));\r\n  }\r\n  function handleOnChangeValue(key, value, isValid) {\r\n    // add value to form\r\n    let f = { ...form };\r\n    f[key] = value;\r\n    setForm(f);\r\n    // check validation\r\n    let obj = { ...formValidation };\r\n    if (isValid && obj) {\r\n      delete obj[key];\r\n      if (Object.keys(obj).length === 0) {\r\n        setFormValidation(undefined);\r\n      } else {\r\n        setFormValidation(obj);\r\n      }\r\n    } else {\r\n      if (obj === undefined) {\r\n        obj = {};\r\n      }\r\n      obj[key] = null;\r\n      setFormValidation(obj);\r\n    }\r\n  }\r\n  function checkPropsToSetCategoryBoxTitle() {\r\n    const selectedNode =\r\n      props !== undefined\r\n        ? props.location !== undefined\r\n          ? props.location.params !== undefined\r\n            ? props.location.params.selectedNode\r\n            : undefined\r\n          : undefined\r\n        : undefined;\r\n    if (selectedNode === undefined) {\r\n      if (hasContentType !== undefined && hasContentType)\r\n        return \"Choose an item type\";\r\n      return \"Choose a category\";\r\n    } else {\r\n      if (selectedNode.itemType) return selectedNode.itemType.name;\r\n      return selectedNode.name;\r\n    }\r\n  }\r\n  function checkCategoryHasContentType(data) {\r\n    for (let i = 0; i < data.length; i++) {\r\n      if (data[i].type === \"contentType\") {\r\n        return true;\r\n      }\r\n      if (data[i].children)\r\n        return checkCategoryHasContentType(data[i].children);\r\n    }\r\n  }\r\n  // methods\r\n  function showCatgoryModal() {\r\n    toggleCategoryModal(true);\r\n  }\r\n  function onCloseModel(selected) {\r\n    if (selected !== undefined) {\r\n      setSelectedNode(selected);\r\n      setCategoryBoxTitle(selected.name);\r\n      const f = selected ? selected.fields : undefined;\r\n      setFields(f ? f.sort((a, b) => a.index - b.index) : [...baseFields]);\r\n    }\r\n    toggleCategoryModal(false);\r\n  }\r\n\r\n  function getFieldItem(field) {\r\n    switch (field.type.toLowerCase()) {\r\n      case \"string\":\r\n        return (\r\n          <String\r\n            field={field}\r\n            init={setNameToFormValidation}\r\n            onChangeValue={handleOnChangeValue}\r\n          />\r\n        );\r\n      case \"number\":\r\n        return <Number field={field} />;\r\n      case \"datetime\":\r\n        return <DateTime field={field} />;\r\n      case \"location\":\r\n        return <Location field={field} />;\r\n      case \"media\":\r\n        return <Media field={field} />;\r\n      case \"boolean\":\r\n        return <Boolean field={field} />;\r\n      case \"keyvalue\":\r\n        return <KeyValue field={field} />;\r\n      case \"richtext\":\r\n        return <RichText field={field} />;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"up-wrapper\">\r\n      <div className=\"up-header\">\r\n        <button className=\"btn btn-light\">\r\n          <i className=\"icon-arrow-left2\" />\r\n          Back\r\n        </button>\r\n      </div>\r\n      <div className=\"up-content\">\r\n        <main>\r\n          <div className=\"up-content-title\">Add New Product</div>\r\n          <div className=\"up-categoryBox\">\r\n            <span>{categoryBoxTitle}</span>\r\n            <button className=\"btn btn-link\" onClick={showCatgoryModal}>\r\n              {hasContentType ? \"Change item\" : \"Change category\"}\r\n            </button>\r\n          </div>\r\n          <div className=\"up-formInputs\">\r\n            {fields &&\r\n              fields.map(field => (\r\n                <div key={field.id} className=\"rowItem\">\r\n                  {getFieldItem(field)}\r\n                </div>\r\n              ))}\r\n            <div className=\"actions\">\r\n              <button\r\n                className=\"btn btn-primary \"\r\n                disabled={\r\n                  Object.keys(form).length > 0 && formValidation === undefined\r\n                    ? false\r\n                    : true\r\n                }\r\n              >\r\n                Add Item\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </div>\r\n      {categoryModal && (\r\n        <CategoriesModal\r\n          categoriesData={categories_data}\r\n          hasContentType={hasContentType}\r\n          onCloseModal={onCloseModel}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpsertProduct;\r\n","import { languageManager } from \"./services\";\r\n\r\nimport Login from \"./Packages/Login\";\r\nimport Signup from \"./Packages/Signup\";\r\nimport Home from \"./Packages/Home\";\r\nimport Categories from \"./Packages/Categories\";\r\nimport ContentType from \"./Packages/ContentType\";\r\nimport ManageUsers from \"./Packages/ManageUsers\";\r\nimport Products from \"./Packages/Products\";\r\nimport Requests from \"./Packages/Requests\";\r\nimport Quotes from \"./Packages/Quotes\";\r\nimport UpsertProduct from \"./Packages/UpsertProduct\";\r\n\r\n\r\nfunction translate(key) {\r\n  return languageManager.translate(key);\r\n}\r\n\r\nconst routes = [\r\n  {\r\n    path: \"/login\",\r\n    component: Login\r\n  },\r\n  {\r\n    path: \"/signup\",\r\n    component: Signup\r\n  },\r\n  {\r\n    path: \"/home\",\r\n    component: Home,\r\n    routes:[\r\n      {\r\n        name: translate(\"HOME_SIDE_NAV_CONTENT_TYPE\"),\r\n        icon: \"item-type\",\r\n        path: \"/home/contentType\",\r\n        desc: translate(\"HOME_SIDE_NAV_CONTENT_TYPE_DEC\"),\r\n        component: ContentType\r\n      },\r\n      {\r\n        name: translate(\"HOME_SIDE_NAV_CATEGRIES\"),\r\n        icon: \"category\",\r\n        path: \"/home/categories\",\r\n        desc: translate(\"HOME_SIDE_NAV_CATEGORIES_DEC\"),\r\n        component: Categories\r\n      },\r\n      {\r\n        name: translate(\"HOME_SIDE_NAV_PRODUCTS\"),\r\n        icon: \"product\",\r\n        path: \"/home/products\",\r\n        desc: translate(\"HOME_SIDE_NAV_PRODUCTS_DESC\"),\r\n        component: Products\r\n      },\r\n\r\n      {\r\n        name: translate(\"HOME_SIDE_NAV_REQUESTS\"),\r\n        icon: \"request\",\r\n        path: \"/home/requests\",\r\n        desc: translate(\"HOME_SIDE_NAV_REQUESTS_DESC\"),\r\n        component: Requests\r\n      },\r\n      {\r\n        name: translate(\"HOME_SIDE_NAV_QUOTES\"),\r\n        icon: \"quote\",\r\n        path: \"/home/quotes\",\r\n        desc: translate(\"HOME_SIDE_NAV_QUOTES_DESC\"),\r\n        component: Quotes\r\n      },\r\n      {\r\n        name: translate(\"HOME_SIDE_NAV_MANAGET_USERS\"),\r\n        icon: \"users\",\r\n        path: \"/home/manageUsers\",\r\n        desc: translate(\"HOME_SIDE_NAV_MANAGE_USERS_DESC\"),\r\n        component: ManageUsers\r\n      }\r\n    ]\r\n \r\n  },\r\n  {\r\n    path: \"/addNew\",\r\n    component: UpsertProduct\r\n  },\r\n  {\r\n    path: \"/edit\",\r\n    component: UpsertProduct\r\n  }\r\n];\r\nexport default routes;\r\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport StateProvider from \"./services/stateManager/stateProvider\";\nimport \"./styles/app.scss\";\nimport \"animate.css\";\n\nimport Routes from \"./routes\";\n\nconst App = () => {\n  return (\n    <StateProvider>\n      <BrowserRouter>\n        <div>\n          <Switch>\n            {Routes.map(route => (\n              <Route\n                key={route.path}\n                path={route.path}\n                render={props => {\n                  const Component = route.component;\n                  let nestedRoutes;\n                  if (route.routes) {\n                    nestedRoutes = (\n                      <>\n                        {route.routes.map(nestedRoute => (\n                          <Route\n                            exact\n                            key={nestedRoute.path}\n                            path={nestedRoute.path}\n                            render={props => {\n                              const NestedComponent = nestedRoute.component;\n                              const p = {\n                                ...props,\n                                component: nestedRoute\n                              };\n                              return <NestedComponent {...p} />;\n                            }}\n                          />\n                        ))}\n                      </>\n                    );\n                  }\n                  return <Component {...props} routes={nestedRoutes} />;\n                }}\n              />\n            ))}\n            {/* <Route to=\"/not-found\" render={props=><NoutFound/>}/> */}\n            {/* اگه دقیقا / رو زد برو لاگین */}\n            <Redirect from=\"/\" to=\"/home\" exact />\n            {/* اگه هیچی نزد یا چرت و پرت زد برو اون روتی که نات فاند هست */}\n            {/* <Redirect to=\"/not-found\"/> */}\n          </Switch>\n        </div>\n      </BrowserRouter>\n    </StateProvider>\n  );\n};\n\nexport default App;\n\n// function makeData(len = 10) {\n//   return range(len).map(d => {\n//     return {\n//       ...newProduct(),\n//       children: range(10).map(newProduct)\n//     };\n//   });\n// }\n\n// function newProduct() {\n//   return {\n//     thumbnail:\n//       \"https://myresources1195.blob.core.windows.net/images/banana.jpg\",\n//     name: \"موز ممتاز\",\n//     description: \"محصولات وارداتی از افریقا\",\n//     price: \"2500 $\",\n//     brand: \"Banana\"\n//   };\n// }\n// function range(len) {\n//   const arr = [];\n//   for (let i = 0; i < len; i++) {\n//     arr.push(i);\n//   }\n//   return arr;\n// }\n//   function createTree(list) {\n//     var map = {},\n//       node,\n//       roots = [],\n//       i;\n//     for (i = 0; i < list.length; i += 1) {\n//       map[list[i].id] = i; // initialize the map\n//       list[i].children = []; // initis\n//     }\n//     for (i = 0; i < list.length; i += 1) {\n//       node = list[i];\n//       if (node.parentId) {\n//         // if you have dangling branches check that map[node.parentId] exists\n//         list[map[node.parentId]].children.push(node);\n//       } else {\n//         roots.push(node);\n//       }\n//     }\n//     return roots;\n//   }\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}