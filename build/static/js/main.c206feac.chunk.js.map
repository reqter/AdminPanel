{"version":3,"sources":["services/languageManager/index.js","services/languageManager/locale/en.js","services/languageManager/locale/fa.js","Packages/Login/index.jsx","Packages/Signup/index.jsx","Packages/Home/components/SideBar/components/profileWidget/index.jsx","Packages/Home/components/SideBar/components/SideLinks/linkItem.jsx","Packages/Home/components/SideBar/components/SideLinks/index.jsx","Packages/Home/components/SideBar/index.jsx","Packages/Categories/tree.jsx","Packages/Categories/modals/AddItemType/index.jsx","Packages/Categories/index.jsx","Packages/ContentType/list/index.jsx","Packages/ContentType/modals/AddNewField/index.jsx","Packages/ContentType/index.jsx","Packages/ManageUsers/index.jsx","Packages/Products/tree.jsx","Packages/Products/index.jsx","Packages/Requests/index.jsx","Packages/Quotes/index.jsx","routes.js","Packages/Home/index.jsx","App.js","serviceWorker.js","index.js"],"names":["systemDefaultLang","title","direction","name","description","languages","fa","en","translate","LOGIN_TITLE","LOGIN_EMAIL_INPUT_TITLE","LOGIN_EMAIL_INPUT_PLACEHOLDER","LOGIN_EMAIL_INPUT_DESCRIPTION","LOGIN_PASSWORD_INPUT","LOGIN_PASSWORD_INPUT_PLACEHOLDER","LOGIN_PASSWORD_INPUT_DESCRIPTION","LOGIN_SUBMIT_BTN","LOGIN_SOCIAL_TEXT","LOGIN_SIGNUP_LINK_TITLE","LOGIN_SIGNUP_LINK","LOGIN_SOCIAL_BTN_GOOGLE","LOGIN_SOCIAL_BTN_GITHUB","SIGNUP_TITLE","SIGNUP_LOGIN_LINK_TITLE","SIGNUP_LOGIN_LINK","SIGNUP_CONFIRM_PASSWORD_INPUT","SIGNUP_CONFIRM_PASSWORD_INPUT_PLACEHOLDER","SIGNUP_CONFIRM_PASSWORD_INPUT_DESCRIPTION","BRAND_NAME","HOME_NAVS_TITLE","HOME_SIDE_NAV_MANAGET_USERS","HOME_SIDE_NAV_MANAGE_USERS_DESC","HOME_SIDE_NAV_CATEGRIES","HOME_SIDE_NAV_CATEGORIES_DEC","HOME_SIDE_NAV_CONTENT_TYPE","HOME_SIDE_NAV_CONTENT_TYPE_DEC","HOME_SIDE_NAV_PRODUCTS","HOME_SIDE_NAV_PRODUCTS_DESC","HOME_SIDE_NAV_REQUESTS","HOME_SIDE_NAV_REQUESTS_DESC","HOME_SIDE_NAV_QUOTES","HOME_SIDE_NAV_QUOTES_DESC","HOME_SIDEAR_ABOUT","HOME_SIDEBAR_BLOG","HOME_SIDEBAR_DOCUMENT","HOME_COPY_RIGHT","HOME_SIDEBAR_PROFILE_SETTINGS","HOME_SIDEBAR_PROFILE_LOGOUT","CATEGORIES_MODAL_HEADER_TITLE_NEW","CATEGORIES_MODAL_HEADER_TITLE_EDIT","CATEGORIES_NEW_CATEGORY_BTN","CATEGORIES_MODAL_NAME","CATEGORIES_MODAL_NAME_PLACEHOLDER","CATEGORIES_MODAL_NAME_DESCRIPTION","CATEGORIES_MODAL_DESCRIPTION","CATEGORIES_MODAL_DESCRIPTION_PLACEHOLDER","CATEGORIES_MODAL_FOOTER_UPSERT_BTN_NEW","CATEGORIES_MODAL_FOOTER_UPSERT_BTN_EDIT","CANCEL","CATEGROES_CONTENT_TYPES","CATEGORIES_ITEM_TYPES_HEADER_TITLE","CATEGORIES_ITEM_TYPES_HEADER_DESC","CATEGORY_ITEM_TYPE_MODAL_HEADER_TITLE","CONTENT_TYPE_MODAL_HEADER_TITLE_NEW","CONTENT_TYPE_MODAL_FOOTER_UPSERT_BTN_NEW","CONTENT_TYPE_MODAL_HEADER_TITLE_EDIT","CONTENT_TYPE_MODAL_FOOTER_UPSERT_BTN_EDIT","CONTENT_TYPE_MODEL_HEADER_TITLE","CONTENT_TYPE_MODEL_HEADER_DESC","CONTENT_TYPE_MODAL_NAME","CONTENT_TYPE_MODAL_NAME_PLACEHOLDER","CONTENT_TYPE_MODAL_NAME_DESCRIPTION","CONTENT_TYPE_MODAL_DESCRIPTION","CONTENT_TYPE_MODAL_DESCRIPTION_PLACEHOLDER","CONTENT_TYPE_NEW_ITEM_BTN","CONTENT_TYPE_ADD_FIELD_TITLE","CONTENT_TYPE_ADD_FIELD_MODAL_NAME","CONTENT_TYPE_ADD_FIELD_MODAL_NAME_PLACEHOLDER","CONTENT_TYPE_ADD_FIELD_MODAL_NAME_INFO","CONTENT_TYPE_ADD_FIELD_MODAL_TITLE","CONTENT_TYPE_ADD_FIELD_MODAL_TITLE_PLACEHOLDER","CONTENT_TYPE_ADD_FIELD_MODAL_TITLE_INFO","CONTENT_TYPE_ADD_FIELD_MODAL_DESCRIPTION","CONTENT_TYPE_ADD_FIELD_MODAL_DESCRIPTION_PLACEHOLDER","CONTENT_TYPE_ADD_FIELD_MODAL_DESCRIPTION_INFO","CONTENT_TYPE_ADD_FIELD_MODAL_CREATE_BTN","CONTENT_TYPE_ADD_FIELD_MODAL_CREATE_CONFIG_BTN","CONTENT_TYPE_ADD_FIELD_MODAL_CHNAGE_FIELD_BTN","CONTENT_TYPE_ADD_FIELD_CHOOSEN","FIELD_TYPE_TEXT","FIELD_TYPE_TEXT_INFO","FIELD_TYPE_NUMBER","FIELD_TYPE_NUMBER_INFO","FIELD_TYPE_DATE_TIME","FIELD_TYPE_DATE_TIME_INFO","FIELD_TYPE_LOCATION","FIELD_TYPE_LOCATION_INFO","FIELD_TYPE_MEDIA","FIELD_TYPE_MEDIA_INFO","FIELD_TYPE_KEY_VALUE","FIELD_TYPE_KEY_VALUE_INFO","FIELD_TYPE_BOOLEAN","FIELD_TYPE_BOOLEAN_INFO","FIELD_TYPE_OBJECT","FIELD_TYPE_OBJECT_INFO","FIELD_TYPE_REFERENCE","FIELD_TYPE_REFERENCE_INFO","ITEM_TYPES_FIELDS","ITEMS_CATEGORIES_CONTENT","CATEGROES_FIELDS","CATEGORIES_MODEL_HEADER_TITLE","CATEGORIES_MODEL_HEADER_DESC","CATEGORY_ADD_FIELD_TITLE","CATEGORY_ADD_FIELD_CHOOSEN","CATEGORIES_ADD_FIELD_MODAL_NAME","CATEGORIES_ADD_FIELD_MODAL_NAME_PLACEHOLDER","CATEGORIES_ADD_FIELD_MODAL_NAME_INFO","CATEGORIES_ADD_FIELD_MODAL_TITLE","CATEGORIES_ADD_FIELD_MODAL_TITLE_PLACEHOLDER","CATEGORIES_ADD_FIELD_MODAL_TITLE_INFO","CATEGORIES_ADD_FIELD_MODAL_DESCRIPTION","CATEGORIES_ADD_FIELD_MODAL_DESCRIPTION_PLACEHOLDER","CATEGORIES_ADD_FIELD_MODAL_DESCRIPTION_INFO","CATEGORIES_ADD_FIELD_MODAL_CREATE_BTN","CATEGORIES_ADD_FIELD_MODAL_CREATE_CONFIG_BTN","CATEGORIES_ADD_FIELD_MODAL_CHNAGE_FIELD_BTN","currentLanguage","languageManager","key","undefined","setLanguage","langName","hasOwnProperty","Object","keys","getCurrentLanguage","getCurrentLayout","setAppLanguages","enabledLanguages","getAllLanguages","isRTL","memo","_len","arguments","length","props","Array","_key","react_default","a","createElement","className","type","id","aria-describedby","placeholder","onClick","history","replace","Link","to","ProfileWidget","_useState","useState","_useState2","slicedToArray","dropDownVisibility","toggleVisibility","Dropdown","isOpen","toggle","prevState","DropdownToggle","DropdownMenu","DropdownItem","LinkItem","_ref","link","icon","concat","NavLink","path","activeClassName","desc","NavLinks","Fragment","links","map","linkItem","SideBar","profileWidget","SideLinks","href","Tree","state","selected","event","target","getAttribute","_this","setState","defineProperty","mapper","nodes","parentId","lvl","node","index","ListGroupItem","style","zIndex","padding","background","paddingLeft","children","color","size","handleDeleteCategory","handleEditCategory","handleItemTypes","fontSize","handleNewCategory","fontWeight","Collapse","ListGroup","this","data","current_state","rightContent","Component","AddNewField","selectedCategory","items","itemTypes","d","slice","j","i","makeData","allData","_useState3","_useState4","toggleModal","closeModal","params","onCloseModal","useEffect","Modal","ModalHeader","ModalBody","item","for","onChange","e","checked","push","arr","filter","handleChooseItem","Categories","_props$component","component","pageTitle","pageDescription","newCategoryNameInput","useRef","upsertCategoryModal","setModal","upsertItemTypeModal","toggleUpsertItemTypeModal","_useState5","_useState6","setName","_useState7","_useState8","setDescription","_useState9","_useState10","treeData","setTreeData","_useState11","_useState12","setSelectedCategory","_useState13","_useState14","setItemTypes","_useState15","_useState16","updateMode","setUpdateMode","_useState17","_useState18","modalHeaderTitle","setModalHeader","_useState19","_useState20","modalUpsertBtn","setModalUpsertBtnText","_useState21","_useState22","toggleRightContent","_useState23","_useState24","isManageCategory","setManageCategory","initModalForm","prevModal","closeAddCategoryModal","updateNodeInList","list","newValue","removeCategoryItem","deleteNodeInList","splice","closeAddItemTypeModal","updateCategoryItemTypes","tree","setTimeout","current","focus","category","m","showItemTypes","itemType","handleRemoveItemType","console","log","Form","ref","value","required","FormGroup","Label","Input","ModalFooter","Button","newCategory","obj","Math","random","toString","upsertCategory","disabled","AddItemType","List","setSelected","listItem","backgroundColor","marginRight","handleDeleteType","handleEditType","handleShowFields","fields","nameInput","tab","changeTab","newFieldHeaderTitle","setAddFieldHeaderTitle","selectedField","setField","setTitle","closeAddFieldModal","field","handleChooseField","onAddField","includes","baseFields","isBase","isList","ItemTypes","addItem_nameInput","upsertFieldModal","toggleUpsertFieldModal","itemTypesData","setData","selectedItemType","setItemType","setFields","removeItemType","toConsumableArray","showFields","handleRemoveField","upsertItemType","modals_AddNewField","handleAddField","ManageUsers","Products","_React$createElement","range","objectSpread","newPerson","gridData","statusChance","firstName","lastName","age","floor","visits","progress","status","len","Products_tree","es","defaultPageSize","minRows","columns","Header","accessor","height","Requests","Quotes","routes","Login","Signup","ContentType","components_SideBar","Route","render","p","App","loading","Switch","Routes","route","Redirect","from","exact","Boolean","window","location","hostname","match","ReactDOM","BrowserRouter","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c206feac.chunk.js","sourcesContent":["import en from \"./locale/en\";\r\nimport fa from \"./locale/fa\";\r\nlet systemDefaultLang = {\r\n  title: \"فارسی\",\r\n  direction: \"rtl\",\r\n  name: \"fa\",\r\n  description: \"جمهوری اسلامی ایران\"\r\n};\r\n\r\nlet languages = {\r\n  fa: {\r\n    title: \"فارسی\",\r\n    direction: \"rtl\",\r\n    name: \"fa\",\r\n    description: \"جمهوری اسلامی ایران\"\r\n  },\r\n  en: {\r\n    title: \"English\",\r\n    name: \"en\",\r\n    direction: \"ltr\",\r\n    description: \"United Kingdom\"\r\n  }\r\n};\r\nlet translate = {\r\n  en,\r\n  fa\r\n};\r\n\r\n// let currentLanguage = {\r\n//   title: \"فارسی\",\r\n//   direction: \"rtl\",\r\n//   name: \"fa\",\r\n//   description: \"جمهوری اسلامی ایران\"\r\n// };\r\n  \r\nlet currentLanguage = {\r\n  title: \"English\",\r\n  name: \"en\",\r\n  direction: \"ltr\",\r\n  description: \"United Kingdom\"\r\n};\r\n\r\nconst languageManager = {\r\n  translate(key) {\r\n    if (translate !== undefined && translate[currentLanguage.name])\r\n      return translate[currentLanguage.name][key]\r\n        ? translate[currentLanguage.name][key]\r\n        : key;\r\n    else return key;\r\n  },\r\n  setLanguage(langName) {\r\n    if (langName !== undefined) {\r\n      if (!languages.hasOwnProperty(langName)) {\r\n        currentLanguage = languages[Object.keys(languages)[0]];\r\n      } else {\r\n        currentLanguage = languages[langName];\r\n      }\r\n      if (\r\n        !(currentLanguage && currentLanguage.name && currentLanguage.direction)\r\n      ) {\r\n        currentLanguage = systemDefaultLang;\r\n      }\r\n      //EventRegister.emit(\"onLanguageChanged\", currentLanguage);\r\n    }\r\n  },\r\n  getCurrentLanguage() {\r\n    return currentLanguage;\r\n  },\r\n  getCurrentLayout() {\r\n    return currentLanguage.direction;\r\n  },\r\n  setAppLanguages(enabledLanguages) {\r\n    if (enabledLanguages) {\r\n      languages = enabledLanguages;\r\n    }\r\n  },\r\n  getAllLanguages() {\r\n    return languages;\r\n  },\r\n  get isRTL() {\r\n    return currentLanguage.direction === \"rtl\" ? true : false;\r\n  }\r\n};\r\nexport default languageManager;\r\n","export default {\r\n  LOGIN_TITLE: \"SignIn Reqter\",\r\n  LOGIN_EMAIL_INPUT_TITLE: \"Email Address\",\r\n  LOGIN_EMAIL_INPUT_PLACEHOLDER: \"Enter email\",\r\n  LOGIN_EMAIL_INPUT_DESCRIPTION: \"you can also enter your username\",\r\n  LOGIN_PASSWORD_INPUT: \"Password\",\r\n  LOGIN_PASSWORD_INPUT_PLACEHOLDER: \"Enter pssword\",\r\n  LOGIN_PASSWORD_INPUT_DESCRIPTION: \"Password must be at least 6 character\",\r\n  LOGIN_SUBMIT_BTN: \"Submit\",\r\n  LOGIN_SOCIAL_TEXT: \"OR SIGNIN WITH\",\r\n  LOGIN_SIGNUP_LINK_TITLE: \"New to REQTER ?\",\r\n  LOGIN_SIGNUP_LINK: \"Create an accout\",\r\n  LOGIN_SOCIAL_BTN_GOOGLE: \"Google\",\r\n  LOGIN_SOCIAL_BTN_GITHUB: \"Github\",\r\n\r\n  // SIGNUP\r\n  SIGNUP_TITLE: \"Signup Reqter\",\r\n  SIGNUP_LOGIN_LINK_TITLE: \"Have an account?\",\r\n  SIGNUP_LOGIN_LINK: \"Login\",\r\n  SIGNUP_CONFIRM_PASSWORD_INPUT: \"Confirm Password\",\r\n  SIGNUP_CONFIRM_PASSWORD_INPUT_PLACEHOLDER: \"Confirm your password\",\r\n  SIGNUP_CONFIRM_PASSWORD_INPUT_DESCRIPTION:\r\n    \"Password must be at least 6 character\",\r\n  // home\r\n  BRAND_NAME: \"REQTER\",\r\n  HOME_NAVS_TITLE: \"Features\",\r\n  HOME_SIDE_NAV_MANAGET_USERS: \"App Users\",\r\n  HOME_SIDE_NAV_MANAGE_USERS_DESC: \"Manage users of your apps\",\r\n  HOME_SIDE_NAV_CATEGRIES: \"Categories\",\r\n  HOME_SIDE_NAV_CATEGORIES_DEC: \"Define your business categories\",\r\n  HOME_SIDE_NAV_CONTENT_TYPE: \"Item Types\",\r\n  HOME_SIDE_NAV_CONTENT_TYPE_DEC: \"Manage your item types\",\r\n  HOME_SIDE_NAV_PRODUCTS: \"Items\",\r\n  HOME_SIDE_NAV_PRODUCTS_DESC: \"Define and manage your items\",\r\n  HOME_SIDE_NAV_REQUESTS: \"Requests\",\r\n  HOME_SIDE_NAV_REQUESTS_DESC: \"View and approve incoming requests\",\r\n  HOME_SIDE_NAV_QUOTES: \"Quotes\",\r\n  HOME_SIDE_NAV_QUOTES_DESC: \"View and approve offers from vendors\",\r\n  HOME_SIDEAR_ABOUT: \"About\",\r\n  HOME_SIDEBAR_BLOG: \"Blog\",\r\n  HOME_SIDEBAR_DOCUMENT: \"Document\",\r\n  HOME_COPY_RIGHT: \"@2019 Copyright\",\r\n  HOME_SIDEBAR_PROFILE_SETTINGS: \"Settings\",\r\n  HOME_SIDEBAR_PROFILE_LOGOUT: \"Logout\",\r\n  //category\r\n  CATEGORIES_MODAL_HEADER_TITLE_NEW: \"New Category\",\r\n  CATEGORIES_MODAL_HEADER_TITLE_EDIT: \"Edit Category\",\r\n  CATEGORIES_NEW_CATEGORY_BTN: \"New Category\",\r\n  CATEGORIES_MODAL_NAME: \"Name\",\r\n  CATEGORIES_MODAL_NAME_PLACEHOLDER: \"Enter name of your category\",\r\n  CATEGORIES_MODAL_NAME_DESCRIPTION: \"try to enter meaningfull name\",\r\n  CATEGORIES_MODAL_DESCRIPTION: \"Description\",\r\n  CATEGORIES_MODAL_DESCRIPTION_PLACEHOLDER: \"Enter a short description\",\r\n  CATEGORIES_MODAL_FOOTER_UPSERT_BTN_NEW: \"Create\",\r\n  CATEGORIES_MODAL_FOOTER_UPSERT_BTN_EDIT: \"Edit\",\r\n  CANCEL: \"Cancel\",\r\n  CATEGROES_CONTENT_TYPES: \"Item Types\",\r\n  CATEGORIES_ITEM_TYPES_HEADER_TITLE: \"Manage Item Types\",\r\n  CATEGORIES_ITEM_TYPES_HEADER_DESC: \"Lorem ipsum dolor sit amet, consectetur\",\r\n  CATEGORY_ITEM_TYPE_MODAL_HEADER_TITLE:\"Add item types to category\",\r\n\r\n  // CONTENT TYPE\r\n  CONTENT_TYPE_MODAL_HEADER_TITLE_NEW: \"Add New Item Type\",\r\n  CONTENT_TYPE_MODAL_FOOTER_UPSERT_BTN_NEW: \"Create\",\r\n  CONTENT_TYPE_MODAL_HEADER_TITLE_EDIT: \"Edit Item Type\",\r\n  CONTENT_TYPE_MODAL_FOOTER_UPSERT_BTN_EDIT: \"Edit\",\r\n  CONTENT_TYPE_MODEL_HEADER_TITLE: \"Manage Fields\",\r\n  CONTENT_TYPE_MODEL_HEADER_DESC: \"Lorem ipsum dolor sit amet, consectetur\",\r\n  CONTENT_TYPE_MODAL_NAME: \"Name\",\r\n  CONTENT_TYPE_MODAL_NAME_PLACEHOLDER: \"Enter name of your type\",\r\n  CONTENT_TYPE_MODAL_NAME_DESCRIPTION: \"try to enter meaningfull name\",\r\n  CONTENT_TYPE_MODAL_DESCRIPTION: \"Description\",\r\n  CONTENT_TYPE_MODAL_DESCRIPTION_PLACEHOLDER: \"Enter a short description\",\r\n  CONTENT_TYPE_NEW_ITEM_BTN: \"New Item Type\",\r\n  CONTENT_TYPE_ADD_FIELD_TITLE: \"Add New Field\",\r\n  CONTENT_TYPE_ADD_FIELD_MODAL_NAME: \"Name\",\r\n  CONTENT_TYPE_ADD_FIELD_MODAL_NAME_PLACEHOLDER: \"Enter name of your field\",\r\n  CONTENT_TYPE_ADD_FIELD_MODAL_NAME_INFO: \"name can not be included space\",\r\n  CONTENT_TYPE_ADD_FIELD_MODAL_TITLE: \"Title\",\r\n  CONTENT_TYPE_ADD_FIELD_MODAL_TITLE_PLACEHOLDER: \"Enter field title\",\r\n  CONTENT_TYPE_ADD_FIELD_MODAL_TITLE_INFO: \"Title will display all of places\",\r\n  CONTENT_TYPE_ADD_FIELD_MODAL_DESCRIPTION: \"Description\",\r\n  CONTENT_TYPE_ADD_FIELD_MODAL_DESCRIPTION_PLACEHOLDER:\r\n    \"Enter a short description\",\r\n  CONTENT_TYPE_ADD_FIELD_MODAL_DESCRIPTION_INFO: \"opetional\",\r\n  CONTENT_TYPE_ADD_FIELD_MODAL_CREATE_BTN: \"Create\",\r\n  CONTENT_TYPE_ADD_FIELD_MODAL_CREATE_CONFIG_BTN: \"Create and configure\",\r\n  CONTENT_TYPE_ADD_FIELD_MODAL_CHNAGE_FIELD_BTN: \"Change Field Type\",\r\n  CONTENT_TYPE_ADD_FIELD_CHOOSEN: \"New\",\r\n  FIELD_TYPE_TEXT: \"Text\",\r\n  FIELD_TYPE_TEXT_INFO: \"Titles, names, paragraphs, list of names\",\r\n  FIELD_TYPE_NUMBER: \"Number\",\r\n  FIELD_TYPE_NUMBER_INFO: \"ID, order number, rating, quantity\",\r\n  FIELD_TYPE_DATE_TIME: \"Date and time\",\r\n  FIELD_TYPE_DATE_TIME_INFO: \"Event date, opening hours\",\r\n  FIELD_TYPE_LOCATION: \"Location\",\r\n  FIELD_TYPE_LOCATION_INFO: \"Coordinates: latitude and longitude\",\r\n  FIELD_TYPE_MEDIA: \"Media\",\r\n  FIELD_TYPE_MEDIA_INFO: \"Images, videos, PDFs and other files\",\r\n  FIELD_TYPE_KEY_VALUE: \"Options\",\r\n  FIELD_TYPE_KEY_VALUE_INFO: \"For example, Brand of a car\",\r\n  FIELD_TYPE_BOOLEAN: \"Boolean\",\r\n  FIELD_TYPE_BOOLEAN_INFO: \"Yes or no, 1 or 0, true or false\",\r\n  FIELD_TYPE_OBJECT: \"Json Object\",\r\n  FIELD_TYPE_OBJECT_INFO: \"Data in JSON format\",\r\n  FIELD_TYPE_REFERENCE: \"Reference\",\r\n  FIELD_TYPE_REFERENCE_INFO:\r\n    \"For example, a blog post can reference its author(s)\",\r\n\r\n  // ITEM TYPES\r\n  ITEM_TYPES_FIELDS: \"Fields\",\r\n  // items\r\n  ITEMS_CATEGORIES_CONTENT: \"Content\"\r\n};\r\n","export default {\r\n  LOGIN_TITLE: \"ورود به ریکوئتر\",\r\n  LOGIN_EMAIL_INPUT_TITLE: \"ایمیل\",\r\n  LOGIN_EMAIL_INPUT_PLACEHOLDER: \"ایمیل خود را وارد کنید\",\r\n  LOGIN_EMAIL_INPUT_DESCRIPTION: \"با نام کاربری خود هم میتوانید وارد شوید\",\r\n  LOGIN_PASSWORD_INPUT: \"رمز عبور\",\r\n  LOGIN_PASSWORD_INPUT_PLACEHOLDER: \"رمز عبور خود را وارد کنید\",\r\n  LOGIN_PASSWORD_INPUT_DESCRIPTION: \"رمز عبور حداقل 6 کاراکتر میباشد\",\r\n  LOGIN_SUBMIT_BTN: \"ورود\",\r\n  LOGIN_SOCIAL_TEXT: \"ورود با حساب کاربری\",\r\n  LOGIN_SIGNUP_LINK_TITLE: \"حساب کاربری نداری؟\",\r\n  LOGIN_SIGNUP_LINK: \"وارد شو\",\r\n  LOGIN_SOCIAL_BTN_GOOGLE: \"گوگل\",\r\n  LOGIN_SOCIAL_BTN_GITHUB: \"گیت هاب\",\r\n  // SIGNUP\r\n  SIGNUP_TITLE: \"ثبت نام در ریکونتر\",\r\n  SIGNUP_LOGIN_LINK_TITLE: \"ثبت نام کرده اید ؟\",\r\n  SIGNUP_LOGIN_LINK: \"ورود\",\r\n  SIGNUP_CONFIRM_PASSWORD_INPUT: \"تایید رمز عبور\",\r\n  SIGNUP_CONFIRM_PASSWORD_INPUT_PLACEHOLDER: \"تایید رمز عبور\",\r\n  SIGNUP_CONFIRM_PASSWORD_INPUT_DESCRIPTION: \"رمز عبور حداقل 6 کاراکتر میباشد\",\r\n  // home\r\n  BRAND_NAME: \"REQTER\",\r\n  HOME_NAVS_TITLE: \"ابزارها و امکانات\",\r\n  HOME_SIDE_NAV_MANAGET_USERS: \"مدیریت کاربران\",\r\n  HOME_SIDE_NAV_MANAGE_USERS_DESC: \"کاربران اپلیکیشن های خود را مدیریت کنید\",\r\n  HOME_SIDE_NAV_CATEGRIES: \"دسته بندی ها\",\r\n  HOME_SIDE_NAV_CATEGORIES_DEC: \"دسته بندی های خود را مدیریت کنید\",\r\n  HOME_SIDE_NAV_CONTENT_TYPE: \"انواع آیتم ها\",\r\n  HOME_SIDE_NAV_CONTENT_TYPE_DEC: \"آیتم های خود را تعریف و مدیریت کنید\",\r\n  HOME_SIDE_NAV_PRODUCTS: \"آیتم ها\",\r\n  HOME_SIDE_NAV_PRODUCTS_DESC: \"آیتم های خود را مدیریت کنید\",\r\n  HOME_SIDE_NAV_REQUESTS: \"درخواست ها\",\r\n  HOME_SIDE_NAV_REQUESTS_DESC: \"مشاهده و مدیریت درخواست های رسیده\",\r\n  HOME_SIDE_NAV_QUOTES: \"پیشنهادات\",\r\n  HOME_SIDE_NAV_QUOTES_DESC: \"مشاهده و مدیریت پیشنهادات ارائه شده\",\r\n  HOME_SIDEAR_ABOUT: \"دربار ما\",\r\n  HOME_SIDEBAR_BLOG: \"رویدادها\",\r\n  HOME_SIDEBAR_DOCUMENT: \"مستندات\",\r\n  HOME_COPY_RIGHT: \"@2019 حق نمونه برداری\",\r\n  HOME_SIDEBAR_PROFILE_SETTINGS: \"تنظیمات\",\r\n  HOME_SIDEBAR_PROFILE_LOGOUT: \"خروج\",\r\n  //category\r\n  CATEGORIES_MODAL_HEADER_TITLE_NEW: \"دسته بندی جدید\",\r\n  CATEGORIES_MODAL_HEADER_TITLE_EDIT: \"ویرایش دسته بندی\",\r\n  CATEGORIES_NEW_CATEGORY_BTN: \"دسته بندی جدید\",\r\n  CATEGORIES_MODAL_NAME: \"نام\",\r\n  CATEGORIES_MODAL_NAME_PLACEHOLDER: \"نام دسته بندی خود را وارد کنید\",\r\n  CATEGORIES_MODAL_NAME_DESCRIPTION: \"نام با محتوا انتخاب کنید\",\r\n  CATEGORIES_MODAL_DESCRIPTION: \"توضیحات\",\r\n  CATEGORIES_MODAL_DESCRIPTION_PLACEHOLDER: \"توضیح کوتاه برای دسته بندی\",\r\n  CATEGORIES_MODAL_FOOTER_UPSERT_BTN_NEW: \"ایجاد\",\r\n  CATEGORIES_MODAL_FOOTER_UPSERT_BTN_EDIT: \"ویرایش\",\r\n  CANCEL: \"انصراف\",\r\n  CATEGROES_FIELDS:\"دیتا مدل\",\r\n\r\n  CATEGORIES_MODEL_HEADER_TITLE: \"مدیریت مدل\",\r\n  CATEGORIES_MODEL_HEADER_DESC: \"مدیریت مدل برای دیتا مدل\",\r\n  CATEGORY_ADD_FIELD_TITLE: \"ایجاد مدل جدید\",\r\n  CATEGORY_ADD_FIELD_CHOOSEN: \"ایجاد مدل\",\r\n  CATEGORIES_ADD_FIELD_MODAL_NAME: \"نام\",\r\n  CATEGORIES_ADD_FIELD_MODAL_NAME_PLACEHOLDER: \"نام مدل خود را وارد کنید\",\r\n  CATEGORIES_ADD_FIELD_MODAL_NAME_INFO: \"نام نمیتواند حاوی فاصله باشد\",\r\n  CATEGORIES_ADD_FIELD_MODAL_TITLE: \"عنوان\",\r\n  CATEGORIES_ADD_FIELD_MODAL_TITLE_PLACEHOLDER: \"عنوان مدل را وارد کنید\",\r\n  CATEGORIES_ADD_FIELD_MODAL_TITLE_INFO: \"عنوان را همه جا میبینید\",\r\n  CATEGORIES_ADD_FIELD_MODAL_DESCRIPTION: \"توضیحات\",\r\n  CATEGORIES_ADD_FIELD_MODAL_DESCRIPTION_PLACEHOLDER:\r\n    \"توضیح کوتاه\",\r\n  CATEGORIES_ADD_FIELD_MODAL_DESCRIPTION_INFO: \"اختیاری\",\r\n  CATEGORIES_ADD_FIELD_MODAL_CREATE_BTN: \"ایجاد\",\r\n  CATEGORIES_ADD_FIELD_MODAL_CREATE_CONFIG_BTN: \"ایجاد و تنظیمات\",\r\n  CATEGORIES_ADD_FIELD_MODAL_CHNAGE_FIELD_BTN: \"تغییر نوع مدل\",\r\n  FIELD_TYPE_TEXT: \"رشته\",\r\n  FIELD_TYPE_TEXT_INFO: \"عناوین ، نام ها، پاراگراف ها و لیستی از نام ها\",\r\n  FIELD_TYPE_NUMBER: \"عدد\",\r\n  FIELD_TYPE_NUMBER_INFO: \"شناسه ، شماره سفارش ، ارزیابی و تعداد\",\r\n  FIELD_TYPE_DATE_TIME: \"تاریخ و زمان\",\r\n  FIELD_TYPE_DATE_TIME_INFO: \"تاریخ یک رویداد\",\r\n  FIELD_TYPE_LOCATION: \"موقعیت\",\r\n  FIELD_TYPE_LOCATION_INFO: \"مکان روی نفشه\",\r\n  FIELD_TYPE_MEDIA: \"رسانه\",\r\n  FIELD_TYPE_MEDIA_INFO: \"عکس و ویدیو وفایل های مختلف\",\r\n  FIELD_TYPE_BOOLEAN: \"منطقی\",\r\n  FIELD_TYPE_BOOLEAN_INFO: \"بله و خیر ، صفر و یک\",\r\n  FIELD_TYPE_OBJECT: \"شی جی سون\",\r\n  FIELD_TYPE_OBJECT_INFO: \"داده با نمایش جی  سون\",\r\n  FIELD_TYPE_REFERENCE: \"اشاره گر\",\r\n  FIELD_TYPE_REFERENCE_INFO:\r\n    \"برای مثال، یک بلاگ پست میتواند به یک نویسنده وصل باشد\",\r\n  // items\r\n  ITEMS_CATEGORIES_CONTENT: \"محتوا\"\r\n};\r\n","import React, { memo } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { languageManager } from \"./../../services\";\r\nimport \"./styles.scss\";\r\n\r\nconst Login = (...props) => {\r\n  // const [visibility, setVisibility] = useState(0);\r\n  // function signIn() {\r\n  //   setVisibility({ visibility: true });\r\n  // }\r\n  const login = () => {\r\n    props[0].history.replace(\"home\");\r\n  };\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"center\">\r\n        <div className=\"header\">\r\n          <span className=\"header-title\">\r\n            {languageManager.translate(\"LOGIN_TITLE\")}\r\n          </span>\r\n        </div>\r\n        <div className=\"body\">\r\n          <form>\r\n            <div className=\"form-group\">\r\n              <label>\r\n                {languageManager.translate(\"LOGIN_EMAIL_INPUT_TITLE\")}\r\n              </label>\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                id=\"exampleInputEmail1\"\r\n                aria-describedby=\"emailHelp\"\r\n                placeholder={languageManager.translate(\r\n                  \"LOGIN_EMAIL_INPUT_PLACEHOLDER\"\r\n                )}\r\n              />\r\n              <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                {languageManager.translate(\"LOGIN_EMAIL_INPUT_DESCRIPTION\")}\r\n              </small>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>{languageManager.translate(\"LOGIN_PASSWORD_INPUT\")}</label>\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                id=\"exampleInputPassword1\"\r\n                placeholder={languageManager.translate(\r\n                  \"LOGIN_PASSWORD_INPUT_PLACEHOLDER\"\r\n                )}\r\n              />\r\n              <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                {languageManager.translate(\"LOGIN_PASSWORD_INPUT_DESCRIPTION\")}\r\n              </small>\r\n            </div>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary btn-block btn-submit\"\r\n              onClick={() => login()}\r\n            >\r\n              {languageManager.translate(\"LOGIN_SUBMIT_BTN\")}\r\n            </button>\r\n          </form>\r\n          {/* <div className=\"divider\">\r\n            <Divider>{languageManager.translate(\"LOGIN_SOCIAL_TEXT\")}</Divider>\r\n          </div>\r\n          <div className=\"social\">\r\n            <button type=\"button\" className=\"btn btn-light\">\r\n              <i className=\"icon-google icon\" />\r\n              {languageManager.translate(\"LOGIN_SOCIAL_BTN_GOOGLE\")}\r\n            </button>\r\n            <button type=\"button\" className=\"btn btn-light\">\r\n              <i className=\"icon-github icon\" />\r\n              {languageManager.translate(\"LOGIN_SOCIAL_BTN_GITHUB\")}\r\n            </button>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"signUpBox\">\r\n        <span>\r\n          {languageManager.translate(\"LOGIN_SIGNUP_LINK_TITLE\")}&nbsp;\r\n        </span>\r\n        <Link to=\"/signup\">\r\n          {\" \"}\r\n          {languageManager.translate(\"LOGIN_SIGNUP_LINK\")}\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default memo(Login);\r\n","import React, { memo } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { languageManager } from \"./../../services\";\r\nimport \"./styles.scss\";\r\n\r\nconst Signup = (...props) => {\r\n  // const [visibility, setVisibility] = useState(0);\r\n  // function signIn() {\r\n  //   setVisibility({ visibility: true });\r\n  // }\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"center\">\r\n        <div className=\"header\">\r\n          <span className=\"header-title\">\r\n            {languageManager.translate(\"SIGNUP_TITLE\")}\r\n          </span>\r\n        </div>\r\n        <div className=\"body\">\r\n          <form>\r\n            <div className=\"form-group\">\r\n              <label>\r\n                {languageManager.translate(\"LOGIN_EMAIL_INPUT_TITLE\")}\r\n              </label>\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                id=\"exampleInputEmail1\"\r\n                aria-describedby=\"emailHelp\"\r\n                placeholder={languageManager.translate(\r\n                  \"LOGIN_EMAIL_INPUT_PLACEHOLDER\"\r\n                )}\r\n              />\r\n              <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                {languageManager.translate(\"LOGIN_EMAIL_INPUT_DESCRIPTION\")}\r\n              </small>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>\r\n                {languageManager.translate(\"LOGIN_PASSWORD_INPUT\")}\r\n              </label>\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                id=\"exampleInputPassword1\"\r\n                placeholder={languageManager.translate(\r\n                  \"LOGIN_PASSWORD_INPUT_PLACEHOLDER\"\r\n                )}\r\n              />\r\n              <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                {languageManager.translate(\"LOGIN_PASSWORD_INPUT_DESCRIPTION\")}\r\n              </small>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>\r\n                {languageManager.translate(\"SIGNUP_CONFIRM_PASSWORD_INPUT\")}\r\n              </label>\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                id=\"exampleInputPassword1\"\r\n                placeholder={languageManager.translate(\r\n                  \"SIGNUP_CONFIRM_PASSWORD_INPUT_PLACEHOLDER\"\r\n                )}\r\n              />\r\n              <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                {languageManager.translate(\"SIGNUP_CONFIRM_PASSWORD_INPUT_DESCRIPTION\")}\r\n              </small>\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary btn-block btn-submit\">\r\n              {languageManager.translate(\"LOGIN_SUBMIT_BTN\")}\r\n            </button>\r\n          </form>\r\n          {/*<div className=\"divider\">\r\n            <Divider>{languageManager.translate(\"LOGIN_SOCIAL_TEXT\")}</Divider>\r\n          </div>\r\n           <div className=\"social\">\r\n            <button type=\"button\" className=\"btn btn-light\">\r\n              <i className=\"icon-google icon\"></i>\r\n              {languageManager.translate(\"LOGIN_SOCIAL_BTN_GOOGLE\")}\r\n            </button>\r\n            <button type=\"button\" className=\"btn btn-light\">\r\n              <i className=\"icon-github icon\"></i>\r\n              {languageManager.translate(\"LOGIN_SOCIAL_BTN_GITHUB\")}\r\n            </button>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"signUpBox\">\r\n        <span>\r\n          {languageManager.translate(\"SIGNUP_LOGIN_LINK_TITLE\")}&nbsp;\r\n        </span>\r\n        <Link to=\"/login\"> {languageManager.translate(\"SIGNUP_LOGIN_LINK\")}</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default memo(Signup);\r\n","import React, { useState } from \"react\";\r\nimport \"./styles.scss\";\r\nimport {\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem\r\n} from \"reactstrap\";\r\nimport { languageManager } from \"../../../../../../services\";\r\nconst ProfileWidget = props => {\r\n  const [dropDownVisibility, toggleVisibility] = useState(false);\r\n  function toggle() {\r\n    toggleVisibility(prevState => !prevState);\r\n  }\r\n  return (\r\n    <div className=\"profile-widget\">\r\n      <div className=\"left\">\r\n        <i className=\"icon-user\" />\r\n      </div>\r\n      <div className=\"centerbox\">\r\n        <span className=\"title\">Saeed Padyab</span>\r\n        <span className=\"role\">payabsaeed@gmail.com</span>\r\n      </div>\r\n      <div className=\"right\">\r\n        <Dropdown isOpen={dropDownVisibility} toggle={toggle}>\r\n          <DropdownToggle className=\"btn btn-light btn-small\">\r\n            <i className=\"icon-more-h\" />\r\n          </DropdownToggle>\r\n          <DropdownMenu>\r\n            <DropdownItem>{languageManager.translate('HOME_SIDEBAR_PROFILE_SETTINGS')}</DropdownItem>\r\n            <DropdownItem>{languageManager.translate('HOME_SIDEBAR_PROFILE_LOGOUT')}</DropdownItem>\r\n          </DropdownMenu>\r\n        </Dropdown>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ProfileWidget;\r\n","import React from \"react\";\r\nimport { NavLink  } from \"react-router-dom\";\r\nconst LinkItem = ({ link }) => {\r\n  const icon = `linkIcon icon-${link.icon}`;\r\n  return (\r\n      <NavLink  to={link.path} className=\"linkItem\" activeClassName=\"linkItemSelected\">\r\n      <div className=\"navIcon\">\r\n        <i className={icon} />\r\n      </div>\r\n      <div className=\"linkBody\">\r\n        <span className=\"linkText\">{link.name}</span>\r\n        <span className=\"linkTextDesc\">{link.desc}</span>\r\n      </div>\r\n      </NavLink>\r\n  );\r\n};\r\n\r\nexport default LinkItem;\r\n","import React from \"react\";\r\nimport \"./styles.scss\";\r\nimport LinkItem from \"./linkItem\";\r\nimport { languageManager } from \"./../../../../../../services\";\r\nconst NavLinks = props => {\r\n  return (\r\n    <>\r\n      <div className=\"sideLinksTitle\">\r\n        {languageManager.translate(\"HOME_NAVS_TITLE\")}\r\n      </div>\r\n      <div className=\"sideLinks\">\r\n        {props.links.map(link => (\r\n          <LinkItem link={link} key={link.path} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavLinks;\r\n","import React from \"react\";\r\nimport \"./styles.scss\";\r\nimport ProfileWidget from \"./components/profileWidget\";\r\nimport SideLinks from \"./components/SideLinks\";\r\nimport { languageManager } from \"./../../../../services\";\r\nconst SideBar = props => {\r\n  \r\n  return (\r\n    <div className=\"sideBar\">\r\n      <div className=\"top\">\r\n        <i className=\"icon-logo icon\" />\r\n        <span className=\"title\">{languageManager.translate('BRAND_NAME')}</span>\r\n      </div>\r\n      <ProfileWidget />\r\n      <SideLinks links={props.links}/>\r\n      <div className=\"sideBar-info\">\r\n        <div className=\"sideBar-info-left\">\r\n          <a href=\"#about\">{languageManager.translate('HOME_SIDEAR_ABOUT')}</a>\r\n          <a href=\"#about\">{languageManager.translate('HOME_SIDEBAR_BLOG')}</a>\r\n        </div>\r\n        <div className=\"sideBar-info-right\">\r\n          <a href=\"#about\">{languageManager.translate('HOME_SIDEBAR_DOCUMENT')}</a>\r\n        </div>\r\n      </div>\r\n      <span className=\"copyRight\">{languageManager.translate('HOME_COPY_RIGHT')}</span>\r\n    </div>\r\n  );\r\n};\r\nexport default SideBar;\r\n","import React, { Component } from \"react\";\r\nimport { ListGroup, ListGroupItem, Collapse } from \"reactstrap\";\r\nimport { languageManager } from \"../../services\";\r\n\r\nclass Tree extends Component {\r\n  state = {\r\n    selected: {}\r\n  };\r\n  static getDerivedStateFromProps(props, current_state) {\r\n    if (!props.rightContent) {\r\n      return {\r\n        selected: {}\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  toggle = event => {\r\n    const id = event.target.getAttribute(\"id\");\r\n    this.setState(state => ({ [id]: !state[id] }));\r\n  };\r\n  mapper = (nodes, parentId, lvl) => {\r\n    return nodes.map((node, index) => {\r\n      const id = `${node.id}-${parentId ? parentId : \"top\"}`.replace(\r\n        /[^a-zA-Z0-9-_]/g,\r\n        \"\"\r\n      );\r\n      return (\r\n        <>\r\n          <ListGroupItem\r\n            key={index}\r\n            style={{\r\n              zIndex: 0,\r\n              padding: 10,\r\n              background:\r\n                this.state.selected.id === node.id ? \"lightgray\" : \"white\"\r\n            }}\r\n            className={`treeItemParent ${\r\n              parentId ? `rounded-0 ${lvl ? \"border-bottom-0\" : \"\"}` : \"\"\r\n            }`}\r\n          >\r\n            {\r\n              <div\r\n                className=\"treeItem\"\r\n                style={{\r\n                  paddingLeft: `${15 * lvl}px`\r\n                }}\r\n              >\r\n                {node.children && node.children.length > 0 ? (\r\n                  <button\r\n                    className=\"btnCategoryCollapse btn btn-primary btn-sm\"\r\n                    id={id}\r\n                    color=\"primary\"\r\n                    onClick={this.toggle}\r\n                  >\r\n                    {this.state[id] ? (\r\n                      <i className=\"icon-caret-down\" onClick={this.toggle} />\r\n                    ) : (\r\n                      <i className=\"icon-caret-right\" onClick={this.toggle} />\r\n                    )}\r\n                  </button>\r\n                ) : (\r\n                  <button className=\"btnCategoryLeaf btn btn-primary btn-sm\">\r\n                    <i className=\"icon-circle-o\" />\r\n                  </button>\r\n                )}\r\n                <div className=\"treeItem-text\">\r\n                  <span className=\"treeItem-name\">{node.name}</span>\r\n                  <span className=\"treeItem-desc\">\r\n                    {node.description ||\r\n                      \"Lorem ipsum dolor sit amet, consectetur\"}\r\n                  </span>\r\n                </div>\r\n                {(node.children === undefined ||\r\n                  node.children.length === 0) && (\r\n                  <button\r\n                    className=\"btn btn-light treeItem-action hoverAction\"\r\n                    size=\"xs\"\r\n                    onClick={() => this.props.handleDeleteCategory(node)}\r\n                  >\r\n                    <i className=\"icon-bin\" />\r\n                  </button>\r\n                )}\r\n                <button\r\n                  className=\"btn btn-light treeItem-action hoverAction\"\r\n                  size=\"xs\"\r\n                  onClick={() => this.props.handleEditCategory(node)}\r\n                >\r\n                  <i className=\"icon-pencil\" />\r\n                </button>\r\n                {(node.children === undefined ||\r\n                  node.children.length === 0) && (\r\n                  <button\r\n                    className=\"btn btn-light treeItem-action\"\r\n                    size=\"xs\"\r\n                    onClick={() => {\r\n                      this.setState(state => ({ selected: node }));\r\n                      this.props.handleItemTypes(node);\r\n                    }}\r\n                  >\r\n                    <span style={{ fontSize: 12 }}>\r\n                      {languageManager.translate(\"CATEGROES_CONTENT_TYPES\")}\r\n                    </span>\r\n                  </button>\r\n                )}\r\n\r\n                <button\r\n                  className=\"btn btn-light treeItem-action\"\r\n                  size=\"xs\"\r\n                  onClick={() => this.props.handleNewCategory(node)}\r\n                >\r\n                  <i className=\"icon-plus\" style={{ fontWeight: \"bold\" }} />\r\n                </button>\r\n              </div>\r\n            }\r\n          </ListGroupItem>\r\n          {node.children && (\r\n            <Collapse isOpen={this.state[id]}>\r\n              {this.mapper(node.children, id, (lvl || 0) + 1)}\r\n            </Collapse>\r\n          )}\r\n        </>\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return <ListGroup>{this.mapper(this.props.data)}</ListGroup>;\r\n  }\r\n}\r\n\r\nexport default Tree;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input\r\n} from \"reactstrap\";\r\nimport { languageManager } from \"../../../../services\";\r\nimport \"./styles.scss\";\r\n\r\nlet data = [\r\n  {\r\n    id: \"1\",\r\n    name: \"Car\",\r\n    description: \"Lorem ipsum dolor sit amet, consectetur\"\r\n  },\r\n\r\n  {\r\n    id: \"7\",\r\n    name: \"Home\",\r\n    description: \"Lorem ipsum dolor sit amet, consectetur\"\r\n  },\r\n  {\r\n    id: \"8\",\r\n    name: \"Football\",\r\n    description: \"Lorem ipsum dolor sit amet, consectetur\"\r\n  },\r\n  {\r\n    id: \"9\",\r\n    name: \"Appliance\",\r\n    description: \"Lorem ipsum dolor sit amet, consectetur\"\r\n  },\r\n  {\r\n    id: \"10\",\r\n    name: \"Flower\",\r\n    description: \"Lorem ipsum dolor sit amet, consectetur\"\r\n  }\r\n];\r\n\r\nconst AddNewField = props => {\r\n  const category = props.selectedCategory;\r\n  let items = props.itemTypes ? props.itemTypes : [];\r\n  const [allData, setData] = useState(makeData());\r\n  const [isOpen, toggleModal] = useState(true);\r\n  function makeData() {\r\n    let d = data.slice();\r\n    for (let j = 0; j < items.length; j++) {\r\n      for (let i = 0; i < d.length; i++) {\r\n        if (items[j].id === d[i].id) {\r\n          d[i].selected = true;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return d;\r\n  }\r\n  useEffect(() => {\r\n    return () => {\r\n      data.map(d => delete d.selected);\r\n      if (!props.isOpen) toggleModal(false);\r\n    };\r\n  });\r\n  function closeModal(params) {\r\n    props.onCloseModal(items);\r\n  }\r\n  function handleChooseItem(event, item) {\r\n    if (event.target.checked) {\r\n      items.push(item);\r\n    } else {\r\n      const arr = items.filter(i => i.id !== item.id);\r\n      items = arr;\r\n    }\r\n  }\r\n  return (\r\n    <Modal isOpen={isOpen} toggle={closeModal}>\r\n      <ModalHeader toggle={closeModal}>\r\n        {languageManager.translate(\"CATEGORY_ITEM_TYPE_MODAL_HEADER_TITLE\")}\r\n      </ModalHeader>\r\n      <ModalBody>\r\n        {allData.map(item => (\r\n          <label key={item.id} for={item.id} className=\"itemTypeModal\">\r\n            <div className=\"itemTypeModal-left\">\r\n              <div className=\"itemType-icon\">\r\n                <i className=\"icon-item-type\" />\r\n              </div>\r\n              <div className=\"itemType-center\">\r\n                <span className=\"itemType-title\">{item.name}</span>\r\n                <span className=\"itemType-description\">{item.description}</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"itemTypeModal-right\">\r\n              <label className=\"switch \">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"primary\"\r\n                  onChange={e => handleChooseItem(e, item)}\r\n                  checked={item.selected}\r\n                  id={item.id}\r\n                />\r\n                <span className=\"slider\" />\r\n              </label>\r\n              {/* <input\r\n                id={item.id}\r\n                type=\"checkbox\"\r\n                onChange={e => handleChooseItem(e, item)}\r\n                checked={item.selected}\r\n              /> */}\r\n            </div>\r\n          </label>\r\n        ))}\r\n      </ModalBody>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddNewField;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input\r\n} from \"reactstrap\";\r\nimport \"./styles.scss\";\r\nimport Tree from \"./tree\";\r\nimport AddNewItemType from \"./modals/AddItemType\";\r\nimport { languageManager } from \"../../services\";\r\n\r\nlet data = [\r\n  {\r\n    id: \"1\",\r\n    name: \"Sport\",\r\n    description: \"Lorem ipsum dolor sit amet, consectetur\",\r\n    children: [\r\n      {\r\n        id: \"2\",\r\n        parentId: \"1\",\r\n        name: \"Football\",\r\n        description: \"Lorem ipsum dolor sit amet, consectetur\",\r\n        children: [\r\n          {\r\n            id: \"3\",\r\n            parentId: \"2\",\r\n            name: \"Football\",\r\n            description: \"Lorem ipsum dolor sit amet, consectetur\"\r\n          },\r\n          {\r\n            id: \"4\",\r\n            parentId: \"2\",\r\n            name: \"Beach\",\r\n            description: \"Lorem ipsum dolor sit amet, consectetur\"\r\n          },\r\n          {\r\n            id: \"5\",\r\n            parentId: \"2\",\r\n            name: \"Footsall\",\r\n            description: \"Lorem ipsum dolor sit amet, consectetur\"\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        id: \"6\",\r\n        parentId: \"1\",\r\n        name: \"Wresling\",\r\n        description: \"Lorem ipsum dolor sit amet, consectetur\"\r\n      }\r\n    ]\r\n  },\r\n\r\n  {\r\n    id: \"7\",\r\n    name: \"Economic\",\r\n    description: \"Lorem ipsum dolor sit amet, consectetur\"\r\n  },\r\n  {\r\n    id: \"8\",\r\n    name: \"Political\",\r\n    description: \"Lorem ipsum dolor sit amet, consectetur\"\r\n  },\r\n  {\r\n    id: \"9\",\r\n    name: \"Accidents\",\r\n    description: \"Lorem ipsum dolor sit amet, consectetur\"\r\n  },\r\n  {\r\n    id: \"10\",\r\n    name: \"Others\",\r\n    description: \"Lorem ipsum dolor sit amet, consectetur\"\r\n  }\r\n];\r\n\r\nconst Categories = props => {\r\n  const { name: pageTitle, desc: pageDescription } = props.component;\r\n\r\n  // variables and handlers\r\n  const newCategoryNameInput = useRef(null);\r\n  const [upsertCategoryModal, setModal] = useState(false);\r\n  const [upsertItemTypeModal, toggleUpsertItemTypeModal] = useState(false);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  const [treeData, setTreeData] = useState([]);\r\n\r\n  const [selectedCategory, setSelectedCategory] = useState();\r\n  const [itemTypes, setItemTypes] = useState([]);\r\n  const [updateMode, setUpdateMode] = useState();\r\n  const [modalHeaderTitle, setModalHeader] = useState(\"\");\r\n  const [modalUpsertBtn, setModalUpsertBtnText] = useState(\"\");\r\n  const [rightContent, toggleRightContent] = useState(false);\r\n  const [isManageCategory, setManageCategory] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setTreeData(data);\r\n  });\r\n\r\n  function initModalForm() {\r\n    setName(\"\");\r\n    setDescription(\"\");\r\n  }\r\n  function toggleModal() {\r\n    setModalHeader(\r\n      languageManager.translate(\"CATEGORIES_MODAL_HEADER_TITLE_NEW\")\r\n    );\r\n    setModalUpsertBtnText(\r\n      languageManager.translate(\"CATEGORIES_MODAL_FOOTER_UPSERT_BTN_NEW\")\r\n    );\r\n    setModal(prevModal => !prevModal);\r\n    initModalForm();\r\n  }\r\n\r\n  //   function createTree(list) {\r\n  //     var map = {},\r\n  //       node,\r\n  //       roots = [],\r\n  //       i;\r\n  //     for (i = 0; i < list.length; i += 1) {\r\n  //       map[list[i].id] = i; // initialize the map\r\n  //       list[i].children = []; // initis\r\n  //     }\r\n  //     for (i = 0; i < list.length; i += 1) {\r\n  //       node = list[i];\r\n  //       if (node.parentId) {\r\n  //         // if you have dangling branches check that map[node.parentId] exists\r\n  //         list[map[node.parentId]].children.push(node);\r\n  //       } else {\r\n  //         roots.push(node);\r\n  //       }\r\n  //     }\r\n  //     return roots;\r\n  //   }\r\n  function handleNameChanged(e) {\r\n    setName(e.target.value);\r\n  }\r\n  function handleDesciptionChanged(e) {\r\n    setDescription(e.target.value);\r\n  }\r\n  function closeAddCategoryModal() {\r\n    debugger;\r\n    toggleModal();\r\n    setManageCategory(false);\r\n  }\r\n  function closeRightContent() {\r\n    toggleRightContent(false);\r\n  }\r\n  function updateNodeInList(list, node, newValue) {\r\n    for (let i = 0; i < list.length; i++) {\r\n      if (list[i].id === node.id) {\r\n        list[i] = newValue;\r\n      }\r\n      if (list[i].children) updateNodeInList(list[i].children, node, newValue);\r\n    }\r\n  }\r\n  function deleteNodeInList(list, node) {\r\n    for (let i = 0; i < list.length; i++) {\r\n      if (list[i].id === node.id) {\r\n        list.splice(i, 1);\r\n        return;\r\n      }\r\n      if (list[i].children) deleteNodeInList(list[i].children, node);\r\n    }\r\n  }\r\n  function newChildCategory(item) {\r\n    setModal(prevModal => !prevModal);\r\n    setSelectedCategory(item);\r\n    setUpdateMode(false);\r\n    setModalHeader(\r\n      languageManager.translate(\"CATEGORIES_MODAL_HEADER_TITLE_NEW\")\r\n    );\r\n    setModalUpsertBtnText(\r\n      languageManager.translate(\"CATEGORIES_MODAL_FOOTER_UPSERT_BTN_NEW\")\r\n    );\r\n    setTimeout(() => {\r\n      newCategoryNameInput.current.focus();\r\n    }, 1);\r\n    setManageCategory(true);\r\n  }\r\n  function editCategory(item) {\r\n    setModal(prevModal => !prevModal);\r\n    setSelectedCategory(item);\r\n    setUpdateMode(true);\r\n    setName(item.name);\r\n    setDescription(item.description);\r\n    setModalHeader(\r\n      languageManager.translate(\"CATEGORIES_MODAL_HEADER_TITLE_EDIT\")\r\n    );\r\n    setModalUpsertBtnText(\r\n      languageManager.translate(\"CATEGORIES_MODAL_FOOTER_UPSERT_BTN_EDIT\")\r\n    );\r\n    setManageCategory(true);\r\n  }\r\n  function upsertCategory() {\r\n    if (isManageCategory) {\r\n      if (!updateMode) {\r\n        const obj = {\r\n          parentId: selectedCategory.id,\r\n          id: Math.random().toString(),\r\n          name: name,\r\n          description: description,\r\n          type: \"category\"\r\n        };\r\n\r\n        if (!selectedCategory.children) selectedCategory.children = [];\r\n        selectedCategory.children.push(obj);\r\n        const d = [...data];\r\n        setTreeData(d);\r\n        setName(\"\");\r\n        setDescription(\"\");\r\n      } else {\r\n        let newCategory = {};\r\n        for (const key in selectedCategory) {\r\n          newCategory[key] = selectedCategory[key];\r\n        }\r\n        newCategory[\"name\"] = name;\r\n        newCategory[\"description\"] = description;\r\n        updateNodeInList(data, selectedCategory, newCategory);\r\n        setTreeData(data);\r\n        closeAddCategoryModal();\r\n      }\r\n    } else {\r\n      const obj = {\r\n        id: Math.random(),\r\n        name: name,\r\n        description: description,\r\n        type: \"category\"\r\n      };\r\n      data.push(obj);\r\n      setTreeData(data);\r\n      initModalForm();\r\n    }\r\n  }\r\n\r\n  function removeCategoryItem(selected) {\r\n    deleteNodeInList(data, selected);\r\n    const d = [...data];\r\n    setTreeData(d);\r\n  }\r\n\r\n  // field\r\n  function showItemTypes(category) {\r\n    if (!rightContent) toggleRightContent(true);\r\n    setSelectedCategory(category);\r\n    let m = [];\r\n    if (category.itemTypes !== undefined) m = category.itemTypes;\r\n    setItemTypes(m);\r\n    setManageCategory(false);\r\n  }\r\n  function closeAddItemTypeModal(items) {\r\n    toggleUpsertItemTypeModal(false);\r\n    updateCategoryItemTypes(items);\r\n  }\r\n  function addNewItemType() {\r\n    console.log(itemTypes)\r\n    toggleUpsertItemTypeModal(prevModal => !prevModal);\r\n  }\r\n  function updateCategoryItemTypes(items) {\r\n    setItemTypes(items);\r\n    if (selectedCategory.itemTypes === undefined)\r\n      selectedCategory.itemTypes = [];\r\n    selectedCategory.itemTypes = items;\r\n    updateNodeInList(data, selectedCategory, selectedCategory); //\r\n  }\r\n  function handleRemoveItemType(itemType) {\r\n    const m = itemTypes.filter(item => item.id !== itemType.id);\r\n    setItemTypes(m);\r\n    selectedCategory.itemTypes = m;\r\n    updateNodeInList(data, selectedCategory, selectedCategory); //\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"c-wrapper\">\r\n        <div className=\"c-header\">\r\n          <div className=\"c-header-left\">\r\n            <span className=\"c-header-title\">{pageTitle}</span>\r\n            <span className=\"c-header-description\">{pageDescription}</span>\r\n          </div>\r\n          <div className=\"c-header-right\">\r\n            <button className=\"btn btn-primary\" onClick={toggleModal}>\r\n              {languageManager.translate(\"CATEGORIES_NEW_CATEGORY_BTN\")}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"c-content\">\r\n          <div className=\"c-content-left\">\r\n            <Tree\r\n              rightContent={rightContent}\r\n              data={treeData}\r\n              handleNewCategory={selected => newChildCategory(selected)}\r\n              handleEditCategory={selected => editCategory(selected)}\r\n              handleDeleteCategory={selected => removeCategoryItem(selected)}\r\n              handleItemTypes={selected => showItemTypes(selected)}\r\n            />\r\n          </div>\r\n          {rightContent && (\r\n            <div className=\"c-content-right animated slideInRight faster\">\r\n              <div className=\"c-content-right-header\">\r\n                <span className=\"c-right-header-title\">\r\n                  {languageManager.translate(\r\n                    \"CATEGORIES_ITEM_TYPES_HEADER_TITLE\"\r\n                  )}\r\n                </span>\r\n                <span className=\"c-right-header-description\">\r\n                  {languageManager.translate(\r\n                    \"CATEGORIES_ITEM_TYPES_HEADER_DESC\"\r\n                  )}\r\n                </span>\r\n                <span\r\n                  className=\"icon-cross closeIcon\"\r\n                  onClick={closeRightContent}\r\n                />\r\n              </div>\r\n              <div className=\"c-content-right-body\">\r\n                <div className=\"fieldsContent\">\r\n                  {itemTypes &&\r\n                    itemTypes.map(item => (\r\n                      <div className=\"fieldItem\" key={item.id}>\r\n                        <div className=\"fieldItem-icon\">\r\n                          <i className=\"icon-more-h\" />\r\n                        </div>\r\n                        <div className=\"fieldItem-type\">\r\n                          <i className=\"icon-item-type\" />\r\n                        </div>\r\n                        <div className=\"fieldItem-name\">{item.name}</div>\r\n                        <div className=\"fieldItem-title\">\r\n                          {item.description}\r\n                        </div>\r\n                        <div\r\n                          className=\"fieldItem-actions\"\r\n                          onClick={() => handleRemoveItemType(item)}\r\n                        >\r\n                          <button className=\"btn btn-link\" size=\"xs\">\r\n                            <i className=\"icon-bin\" />\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"btnNewFieldContent\">\r\n                  <button className=\"btn btn-primary\" onClick={addNewItemType}>\r\n                    <i className=\"icon-plus\" />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <Modal isOpen={upsertCategoryModal} toggle={closeAddCategoryModal}>\r\n        <ModalHeader toggle={closeAddCategoryModal}>\r\n          {modalHeaderTitle}\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <div className=\"c-category-modal-body\">\r\n            <Form>\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  {languageManager.translate(\"CATEGORIES_MODAL_NAME\")}\r\n                </label>\r\n                <input\r\n                  ref={newCategoryNameInput}\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder={languageManager.translate(\r\n                    \"CATEGORIES_MODAL_NAME_PLACEHOLDER\"\r\n                  )}\r\n                  value={name}\r\n                  required\r\n                  onChange={handleNameChanged}\r\n                />\r\n                <small className=\"form-text text-muted\">\r\n                  {languageManager.translate(\r\n                    \"CATEGORIES_MODAL_NAME_DESCRIPTION\"\r\n                  )}\r\n                </small>\r\n              </div>\r\n              <FormGroup>\r\n                <Label for=\"exampleEmail\">\r\n                  {languageManager.translate(\"CATEGORIES_MODAL_DESCRIPTION\")}\r\n                </Label>\r\n                <Input\r\n                  type=\"string\"\r\n                  placeholder={languageManager.translate(\r\n                    \"CATEGORIES_MODAL_DESCRIPTION_PLACEHOLDER\"\r\n                  )}\r\n                  value={description}\r\n                  onChange={handleDesciptionChanged}\r\n                />\r\n                {/* <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                  {languageManager.translate(\r\n                    \"CATEGORIES_MODAL_DESCRIPTION_DESC\"\r\n                  )}\r\n                </small> */}\r\n              </FormGroup>\r\n            </Form>\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            onClick={() => upsertCategory(selectedCategory)}\r\n            disabled={name.length > 0 ? false : true}\r\n          >\r\n            {modalUpsertBtn}\r\n          </Button>\r\n          <Button color=\"secondary\" onClick={closeAddCategoryModal}>\r\n            {languageManager.translate(\"CANCEL\")}\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n      {upsertItemTypeModal && (\r\n        <AddNewItemType\r\n          itemTypes={itemTypes}\r\n          selectedCategory={selectedCategory}\r\n          isOpen={upsertItemTypeModal}\r\n          onCloseModal={items => closeAddItemTypeModal(items)}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { ListGroup, ListGroupItem } from \"reactstrap\";\r\nimport { languageManager } from \"../../../services\";\r\n\r\nconst List = props => {\r\n  const [selected, setSelected] = useState({});\r\n  useEffect(() => {\r\n    if (!props.rightContent) {\r\n      setSelected({});\r\n    }\r\n  });\r\n  return (\r\n    <ListGroup>\r\n      {props.data.map(listItem => (\r\n        <ListGroupItem\r\n          key={listItem.id}\r\n          className=\"listGroupItem\"\r\n          style={{\r\n            backgroundColor: selected.id === listItem.id ? \"lightgray\" : \"white\"\r\n          }}\r\n        >\r\n          <div className=\"treeItem\">\r\n            <button\r\n              className=\"btn btn-primary btn-sm\"\r\n              color=\"primary\"\r\n              style={{ marginRight: 15 }}\r\n            >\r\n              <i className=\"icon-item-type\" />\r\n            </button>\r\n            <div className=\"treeItem-text\">\r\n              <span className=\"treeItem-name\">{listItem.name}</span>\r\n              <span className=\"treeItem-desc\">\r\n                {listItem.description ||\r\n                  \"Lorem ipsum dolor sit amet, consectetur\"}\r\n              </span>\r\n            </div>\r\n            <button\r\n              className=\"btn btn-light treeItem-action\"\r\n              size=\"xs\"\r\n              onClick={() => props.handleDeleteType(listItem)}\r\n            >\r\n              <i className=\"icon-bin\" />\r\n            </button>\r\n            <button\r\n              className=\"btn btn-light treeItem-action\"\r\n              size=\"xs\"\r\n              onClick={() => props.handleEditType(listItem)}\r\n            >\r\n              <i className=\"icon-pencil\" />\r\n            </button>\r\n            <button\r\n              className=\"btn btn-light treeItem-action\"\r\n              size=\"xs\"\r\n              onClick={() => {\r\n                setSelected(listItem);\r\n                props.handleShowFields(listItem);\r\n              }}\r\n            >\r\n              <span style={{ fontSize: 12 }}>\r\n                {languageManager.translate(\"ITEM_TYPES_FIELDS\")}\r\n              </span>\r\n            </button>\r\n          </div>\r\n        </ListGroupItem>\r\n      ))}\r\n    </ListGroup>\r\n  );\r\n};\r\nexport default List;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input\r\n} from \"reactstrap\";\r\nimport { languageManager } from \"../../../../services\";\r\nimport \"./styles.scss\";\r\nconst fields = [\r\n  {\r\n    name: \"string\",\r\n    title: languageManager.translate(\"FIELD_TYPE_TEXT\"),\r\n    description: languageManager.translate(\"FIELD_TYPE_TEXT_INFO\"),\r\n    icon: \"icon-file-text\"\r\n  },\r\n  {\r\n    name: \"number\",\r\n    title: languageManager.translate(\"FIELD_TYPE_NUMBER\"),\r\n    description: languageManager.translate(\"FIELD_TYPE_NUMBER_INFO\"),\r\n    icon: \"icon-number\"\r\n  },\r\n  {\r\n    name: \"dateTime\",\r\n    title: languageManager.translate(\"FIELD_TYPE_DATE_TIME\"),\r\n    description: languageManager.translate(\"FIELD_TYPE_DATE_TIME_INFO\"),\r\n    icon: \"icon-calendar\"\r\n  },\r\n  {\r\n    name: \"location\",\r\n    title: languageManager.translate(\"FIELD_TYPE_LOCATION\"),\r\n    description: languageManager.translate(\"FIELD_TYPE_LOCATION_INFO\"),\r\n    icon: \"icon-location\"\r\n  },\r\n  {\r\n    name: \"media\",\r\n    title: languageManager.translate(\"FIELD_TYPE_MEDIA\"),\r\n    description: languageManager.translate(\"FIELD_TYPE_MEDIA_INFO\"),\r\n    icon: \"icon-images\"\r\n  },\r\n  {\r\n    name: \"boolean\",\r\n    title: languageManager.translate(\"FIELD_TYPE_BOOLEAN\"),\r\n    description: languageManager.translate(\"FIELD_TYPE_BOOLEAN_INFO\"),\r\n    icon: \"icon-boolean\"\r\n  },\r\n  {\r\n    name: \"keyValue\",\r\n    title: languageManager.translate(\"FIELD_TYPE_KEY_VALUE\"),\r\n    description: languageManager.translate(\"FIELD_TYPE_KEY_VALUE_INFO\"),\r\n    icon: \"icon-combo-box\"\r\n  },\r\n  // {\r\n  //   name: \"jsonObject\",\r\n  //   title: languageManager.translate(\"FIELD_TYPE_OBJECT\"),\r\n  //   description: languageManager.translate(\"FIELD_TYPE_OBJECT_INFO\"),\r\n  //   icon: \"icon-json-file\"\r\n  // },\r\n  // {\r\n  //   name: \"reference\",\r\n  //   title: languageManager.translate(\"FIELD_TYPE_REFERENCE\"),\r\n  //   description: languageManager.translate(\"FIELD_TYPE_REFERENCE_INFO\"),\r\n  //   icon: \"icon-reference\"\r\n  // }\r\n];\r\nconst AddNewField = props => {\r\n  const category = props.selectedCategory;\r\n\r\n  const [isOpen, toggleModal] = useState(true);\r\n  const nameInput = useRef(null); //  ref is defined here\r\n  const [tab, changeTab] = useState(1);\r\n  const [newFieldHeaderTitle, setAddFieldHeaderTitle] = useState(\r\n    languageManager.translate(\"CONTENT_TYPE_ADD_FIELD_TITLE\")\r\n  );\r\n  const [selectedField, setField] = useState({});\r\n  const [name, setName] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (!props.isOpen) toggleModal(false);\r\n    };\r\n  });\r\n  function closeAddFieldModal(params) {\r\n    props.onCloseModal();\r\n  }\r\n  function handleChooseField(field) {\r\n    changeTab(2);\r\n    setField(field);\r\n    const title =\r\n      languageManager.translate(\"CONTENT_TYPE_ADD_FIELD_CHOOSEN\") +\r\n      \" \" +\r\n      field.title;\r\n    setAddFieldHeaderTitle(title);\r\n    //nameInput.current.focus(); // focus after changing tab on first input\r\n  }\r\n  function backToFields(params) {\r\n    const title = languageManager.translate(\"CONTENT_TYPE_ADD_FIELD_CHOOSEN\");\r\n    setAddFieldHeaderTitle(title);\r\n    changeTab(1);\r\n  }\r\n  function handleNameChanged(e) {\r\n    setName(e.target.value);\r\n  }\r\n  function handleTitleChanged(e) {\r\n    setTitle(e.target.value);\r\n  }\r\n  function handleDescriptionChanged(e) {\r\n    setDescription(e.target.value);\r\n  }\r\n  function resetForm() {\r\n    setName(\"\");\r\n    setTitle(\"\");\r\n    setDescription(\"\");\r\n  }\r\n  function addField() {\r\n    const obj = {\r\n      id: Math.random().toString(),\r\n      name: name,\r\n      title: title,\r\n      description: description,\r\n      type: selectedField.name\r\n    };\r\n    props.onAddField(obj);\r\n    resetForm();\r\n  }\r\n  function addField_configure() {}\r\n  return (\r\n    <Modal isOpen={isOpen} toggle={closeAddFieldModal} size=\"lg\">\r\n      <ModalHeader toggle={closeAddFieldModal}>\r\n        {newFieldHeaderTitle}\r\n      </ModalHeader>\r\n      <ModalBody>\r\n        <div className=\"c-category-addField-body\">\r\n          {tab === 1 ? (\r\n            <div className=\"fieldsTab\">\r\n              {fields.map(field => (\r\n                <div\r\n                  key={field.icon}\r\n                  className=\"add-field-types\"\r\n                  onClick={() => handleChooseField(field)}\r\n                >\r\n                  <div className=\"add-field-icon\">\r\n                    <i className={field.icon} />\r\n                  </div>\r\n                  <span className=\"title\">{field.title}</span>\r\n                  <span className=\"description\">{field.description}</span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <Form className=\"formTab\">\r\n              <div className=\"row\">\r\n                <div className=\"form-group col\">\r\n                  <label>\r\n                    {languageManager.translate(\r\n                      \"CONTENT_TYPE_ADD_FIELD_MODAL_NAME\"\r\n                    )}\r\n                  </label>\r\n                  <input\r\n                    ref={nameInput} // using ref\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder={languageManager.translate(\r\n                      \"CONTENT_TYPE_ADD_FIELD_MODAL_NAME_PLACEHOLDER\"\r\n                    )}\r\n                    value={name}\r\n                    required\r\n                    onChange={handleNameChanged}\r\n                  />\r\n                  <small className=\"form-text text-muted\">\r\n                    {languageManager.translate(\r\n                      \"CONTENT_TYPE_ADD_FIELD_MODAL_NAME_INFO\"\r\n                    )}\r\n                  </small>\r\n                </div>\r\n\r\n                <FormGroup className=\"col\">\r\n                  <Label>\r\n                    {languageManager.translate(\r\n                      \"CONTENT_TYPE_ADD_FIELD_MODAL_TITLE\"\r\n                    )}\r\n                  </Label>\r\n                  <Input\r\n                    type=\"string\"\r\n                    value={title}\r\n                    placeholder={languageManager.translate(\r\n                      \"CONTENT_TYPE_ADD_FIELD_MODAL_TITLE_PLACEHOLDER\"\r\n                    )}\r\n                    onChange={handleTitleChanged}\r\n                  />\r\n                  <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                    {languageManager.translate(\r\n                      \"CONTENT_TYPE_ADD_FIELD_MODAL_TITLE_INFO\"\r\n                    )}\r\n                  </small>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"formTab-row\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    {languageManager.translate(\r\n                      \"CONTENT_TYPE_ADD_FIELD_MODAL_DESCRIPTION\"\r\n                    )}\r\n                  </Label>\r\n                  <Input\r\n                    type=\"string\"\r\n                    value={description}\r\n                    placeholder={languageManager.translate(\r\n                      \"CONTENT_TYPE_ADD_FIELD_MODAL_DESCRIPTION_PLACEHOLDER\"\r\n                    )}\r\n                    onChange={handleDescriptionChanged}\r\n                  />\r\n                  <small className=\"form-text text-muted\">\r\n                    {languageManager.translate(\r\n                      \"CONTENT_TYPE_ADD_FIELD_MODAL_DESCRIPTION_INFO\"\r\n                    )}\r\n                  </small>\r\n                </FormGroup>\r\n              </div>\r\n            </Form>\r\n          )}\r\n        </div>\r\n      </ModalBody>\r\n      {tab !== 1 ? (\r\n        <ModalFooter>\r\n          <Button\r\n            color=\"primary\"\r\n            onClick={addField}\r\n            disabled={\r\n              name.length > 0 && title.length > 0 && !name.includes(\" \")\r\n                ? false\r\n                : true\r\n            }\r\n          >\r\n            {languageManager.translate(\"CONTENT_TYPE_ADD_FIELD_MODAL_CREATE_BTN\")}\r\n          </Button>\r\n          {/* <Button\r\n            color=\"primary\"\r\n            onClick={addField_configure}\r\n            disabled={\r\n              name.length > 0 && title.length > 0 && !name.includes(\" \")\r\n                ? false\r\n                : true\r\n            }\r\n          >\r\n            {languageManager.translate(\r\n              \"CONTENT_TYPE_ADD_FIELD_MODAL_CREATE_CONFIG_BTN\"\r\n            )}\r\n          </Button> */}\r\n          <Button color=\"secondary\" onClick={backToFields}>\r\n            {languageManager.translate(\r\n              \"CONTENT_TYPE_ADD_FIELD_MODAL_CHNAGE_FIELD_BTN\"\r\n            )}\r\n          </Button>\r\n        </ModalFooter>\r\n      ) : (\r\n        undefined\r\n      )}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddNewField;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input\r\n} from \"reactstrap\";\r\nimport \"./styles.scss\";\r\nimport List from \"./list\";\r\nimport AddNewField from \"./modals/AddNewField\";\r\nimport { languageManager } from \"../../services\";\r\n\r\nlet data = [\r\n  {\r\n    id: \"1\",\r\n    name: \"Car\",\r\n    description: \"Lorem ipsum dolor sit amet, consectetur\"\r\n  },\r\n\r\n  {\r\n    id: \"7\",\r\n    name: \"Home\",\r\n    description: \"Lorem ipsum dolor sit amet, consectetur\"\r\n  },\r\n  {\r\n    id: \"8\",\r\n    name: \"Football\",\r\n    description: \"Lorem ipsum dolor sit amet, consectetur\"\r\n  },\r\n  {\r\n    id: \"9\",\r\n    name: \"Appliance\",\r\n    description: \"Lorem ipsum dolor sit amet, consectetur\"\r\n  },\r\n  {\r\n    id: \"10\",\r\n    name: \"Flower\",\r\n    description: \"Lorem ipsum dolor sit amet, consectetur\"\r\n  }\r\n];\r\n\r\nlet baseFields = [\r\n  {\r\n    id: Math.random().toString(),\r\n    name: \"name\",\r\n    title: \"Name\",\r\n    description: \"name of each product\",\r\n    type: \"string\",\r\n    isBase: true\r\n  },\r\n\r\n  // {\r\n  //   id: Math.random().toString(),\r\n  //   name: \"code\",\r\n  //   title: \"Code\",\r\n  //   description: \"\",\r\n  //   type: \"number\",\r\n  //   isBase: true\r\n  // },\r\n  {\r\n    id: Math.random().toString(),\r\n    name: \"thumbnail\",\r\n    title: \"Thumbnail\",\r\n    description: \"\",\r\n    type: \"media\",\r\n    isBase: true\r\n  },\r\n  {\r\n    id: Math.random().toString(),\r\n    name: \"images\",\r\n    title: \"Images\",\r\n    description: \"\",\r\n    type: \"media\",\r\n    isBase: true,\r\n    isList: true\r\n  },\r\n  {\r\n    id: Math.random().toString(),\r\n    name: \"shortDesc\",\r\n    title: \"Short Description\",\r\n    description: \"\",\r\n    type: \"string\",\r\n    isBase: true\r\n  },\r\n  {\r\n    id: Math.random().toString(),\r\n    name: \"longDesc\",\r\n    title: \"Long Description\",\r\n    description: \"\",\r\n    type: \"richText\",\r\n    isBase: true\r\n  },\r\n  {\r\n    id: Math.random().toString(),\r\n    name: \"price\",\r\n    title: \"Price\",\r\n    description: \"\",\r\n    type: \"number\",\r\n    isBase: true\r\n  }\r\n];\r\nconst ItemTypes = props => {\r\n  const { name: pageTitle, desc: pageDescription } = props.component;\r\n  // variables and handlers\r\n  const addItem_nameInput = useRef(null);\r\n  const [upsertItemTypeModal, setModal] = useState(false);\r\n  const [upsertFieldModal, toggleUpsertFieldModal] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [itemTypesData, setData] = useState([]);\r\n  const [selectedItemType, setItemType] = useState({});\r\n  const [fields, setFields] = useState([]);\r\n  const [updateMode, setUpdateMode] = useState();\r\n  const [modalHeaderTitle, setModalHeader] = useState(\"\");\r\n  const [modalUpsertBtn, setModalUpsertBtnText] = useState(\"\");\r\n  const [rightContent, toggleRightContent] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setData(data);\r\n  });\r\n\r\n  function initModalForm() {\r\n    setName(\"\");\r\n    setDescription(\"\");\r\n  }\r\n  function toggleModal() {\r\n    setModalHeader(\r\n      languageManager.translate(\"CONTENT_TYPE_MODAL_HEADER_TITLE_NEW\")\r\n    );\r\n    setModalUpsertBtnText(\r\n      languageManager.translate(\"CONTENT_TYPE_MODAL_FOOTER_UPSERT_BTN_NEW\")\r\n    );\r\n    setModal(prevModal => !prevModal);\r\n    initModalForm();\r\n  }\r\n  function handleNameChanged(e) {\r\n    setName(e.target.value);\r\n  }\r\n  function handleDesciptionChanged(e) {\r\n    setDescription(e.target.value);\r\n  }\r\n\r\n  function updateNodeInList(list, node, newValue) {\r\n    for (let i = 0; i < list.length; i++) {\r\n      if (list[i].id === node.id) {\r\n        list[i] = newValue;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  function deleteNodeInList(list, node) {\r\n    for (let i = 0; i < list.length; i++) {\r\n      if (list[i].id === node.id) {\r\n        list.splice(i, 1);\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  function editItemType(item) {\r\n    setModal(prevModal => !prevModal);\r\n    setItemType(item);\r\n    setUpdateMode(true);\r\n    setName(item.name);\r\n    setDescription(item.description);\r\n    setModalHeader(\r\n      languageManager.translate(\"CONTENT_TYPE_MODAL_HEADER_TITLE_EDIT\")\r\n    );\r\n    setModalUpsertBtnText(\r\n      languageManager.translate(\"CONTENT_TYPE_MODAL_FOOTER_UPSERT_BTN_EDIT\")\r\n    );\r\n  }\r\n  function upsertItemType() {\r\n    if (updateMode) {\r\n      let obj = {};\r\n      for (const key in selectedItemType) {\r\n        obj[key] = selectedItemType[key];\r\n      }\r\n      obj[\"name\"] = name;\r\n      obj[\"description\"] = description;\r\n      updateNodeInList(data, selectedItemType, obj);\r\n      setData(data);\r\n      toggleModal();\r\n    } else {\r\n      const obj = {\r\n        id: Math.random(),\r\n        name: name,\r\n        description: description,\r\n        type: \"contentType\"\r\n      };\r\n      data.push(obj);\r\n      setData(data);\r\n      initModalForm();\r\n    }\r\n  }\r\n  function removeItemType(selected) {\r\n    deleteNodeInList(data, selected);\r\n    const d = [...data];\r\n    setData(d);\r\n    toggleRightContent(false);\r\n  }\r\n  function closeRightContent() {\r\n    toggleRightContent();\r\n  }\r\n  // field\r\n  function showFields(item) {\r\n    if (!rightContent) toggleRightContent(true);\r\n    setItemType(item);\r\n    let m = baseFields;\r\n    if (item.fields !== undefined) m = [...baseFields, ...item.fields];\r\n    setFields(m);\r\n  }\r\n  function closeAddFieldModal() {\r\n    toggleUpsertFieldModal(false);\r\n  }\r\n  function addNewField() {\r\n    toggleUpsertFieldModal(prevModal => !prevModal);\r\n  }\r\n  function handleAddField(field) {\r\n    debugger;\r\n    if (selectedItemType.fields === undefined) selectedItemType.fields = [];\r\n    const m = [...fields];\r\n    m.push(field);\r\n    setFields(m);\r\n    selectedItemType.fields.push(field);\r\n    updateNodeInList(data, selectedItemType, selectedItemType); //\r\n  }\r\n  function handleRemoveField(field) {\r\n    const m = fields.filter(item => item.id !== field.id);\r\n    setFields(m);\r\n    selectedItemType.fields = m;\r\n    updateNodeInList(data, selectedItemType, selectedItemType); //\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"ct-wrapper\">\r\n        <div className=\"ct-header\">\r\n          <div className=\"ct-header-left\">\r\n            <span className=\"ct-header-title\">{pageTitle}</span>\r\n            <span className=\"ct-header-description\">{pageDescription}</span>\r\n          </div>\r\n          <div className=\"ct-header-right\">\r\n            <button className=\"btn btn-primary\" onClick={toggleModal}>\r\n              {languageManager.translate(\"CONTENT_TYPE_NEW_ITEM_BTN\")}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"ct-content\">\r\n          <div className=\"ct-content-left\">\r\n            <List\r\n              rightContent={rightContent}\r\n              data={itemTypesData}\r\n              handleEditType={selected => editItemType(selected)}\r\n              handleDeleteType={selected => removeItemType(selected)}\r\n              handleShowFields={selected => showFields(selected)}\r\n            />\r\n          </div>\r\n          {rightContent && (\r\n            <div className=\"ct-content-right animated slideInRight faster\">\r\n              <div className=\"ct-content-right-header\">\r\n                <span className=\"ct-right-header-title\">\r\n                  {languageManager.translate(\"CONTENT_TYPE_MODEL_HEADER_TITLE\")}\r\n                </span>\r\n                <span className=\"ct-right-header-description\">\r\n                  {languageManager.translate(\"CONTENT_TYPE_MODEL_HEADER_DESC\")}\r\n                </span>\r\n                <span\r\n                  className=\"icon-cross closeIcon\"\r\n                  onClick={closeRightContent}\r\n                />\r\n              </div>\r\n              <div className=\"ct-content-right-body\">\r\n                <div className=\"fieldsContent\">\r\n                  {fields &&\r\n                    fields.map(field => (\r\n                      <div className=\"fieldItem\" key={field.id}>\r\n                        <div className=\"fieldItem-icon\">\r\n                          <i className=\"icon-more-h\" />\r\n                        </div>\r\n                        <div className=\"fieldItem-type\">\r\n                          <i\r\n                            className={\r\n                              field.type === \"string\"\r\n                                ? \"icon-file-text\"\r\n                                : field.type === \"number\"\r\n                                ? \"icon-number\"\r\n                                : field.type === \"dateTime\"\r\n                                ? \"icon-calendar\"\r\n                                : field.type === \"location\"\r\n                                ? \"icon-location\"\r\n                                : field.type === \"media\"\r\n                                ? \"icon-images\"\r\n                                : field.type === \"jsonObject\"\r\n                                ? \"icon-json-file\"\r\n                                : field.type === \"reference\"\r\n                                ? \"icon-reference\"\r\n                                : field.type === \"boolean\"\r\n                                ? \"icon-boolean\"\r\n                                : \"icon-file-text\"\r\n                            } \r\n                          />\r\n                        </div>\r\n                        <div className=\"fieldItem-name\">{field.name}</div>\r\n                        <div className=\"fieldItem-title\">{field.title}</div>\r\n\r\n                        <div className=\"fieldItem-actions\">\r\n                          {field.isBase === undefined || !field.isBase ? (\r\n                            <>\r\n                              <button\r\n                                className=\"btn btn-link\"\r\n                                size=\"xs\"\r\n                                onClick={() => handleRemoveField(field)}\r\n                              >\r\n                                <i className=\"icon-bin\" />\r\n                              </button>\r\n                              <button className=\"btn btn-link\" size=\"xs\">\r\n                                Settings\r\n                              </button>\r\n                            </>\r\n                          ) : (\r\n                            <span className=\"badge badge-danger label-nonEditable\">\r\n                              Non-editable\r\n                            </span>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"btnNewFieldContent\">\r\n                  <button className=\"btn btn-primary\" onClick={addNewField}>\r\n                    <i className=\"icon-plus\" />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <Modal isOpen={upsertItemTypeModal} toggle={toggleModal}>\r\n        <ModalHeader toggle={toggleModal}>{modalHeaderTitle}</ModalHeader>\r\n        <ModalBody>\r\n          <div className=\"ct-category-modal-body\">\r\n            <Form>\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  {languageManager.translate(\"CONTENT_TYPE_MODAL_NAME\")}\r\n                </label>\r\n                <input\r\n                  ref={addItem_nameInput}\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder={languageManager.translate(\r\n                    \"CONTENT_TYPE_MODAL_NAME_PLACEHOLDER\"\r\n                  )}\r\n                  value={name}\r\n                  required\r\n                  onChange={handleNameChanged}\r\n                />\r\n                <small className=\"form-text text-muted\">\r\n                  {languageManager.translate(\r\n                    \"CONTENT_TYPE_MODAL_NAME_DESCRIPTION\"\r\n                  )}\r\n                </small>\r\n              </div>\r\n              <FormGroup>\r\n                <Label for=\"exampleEmail\">\r\n                  {languageManager.translate(\"CONTENT_TYPE_MODAL_DESCRIPTION\")}\r\n                </Label>\r\n                <Input\r\n                  type=\"string\"\r\n                  placeholder={languageManager.translate(\r\n                    \"CONTENT_TYPE_MODAL_DESCRIPTION_PLACEHOLDER\"\r\n                  )}\r\n                  value={description}\r\n                  onChange={handleDesciptionChanged}\r\n                />\r\n              </FormGroup>\r\n            </Form>\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            onClick={() => upsertItemType(selectedItemType)}\r\n            disabled={name.length > 0 ? false : true}\r\n          >\r\n            {modalUpsertBtn}\r\n          </Button>\r\n          <Button color=\"secondary\" onClick={toggleModal}>\r\n            {languageManager.translate(\"CANCEL\")}\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n      {upsertFieldModal && (\r\n        <AddNewField\r\n          selectedItemType={selectedItemType}\r\n          isOpen={upsertFieldModal}\r\n          onCloseModal={closeAddFieldModal}\r\n          onAddField={field => handleAddField(field)}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ItemTypes;\r\n","import React from \"react\";\r\nimport \"./styles.scss\";\r\nconst ManageUsers = props => {\r\n  const { name: pageTitle, desc: pageDescription } = props.component;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"c-wrapper\">\r\n        <div className=\"c-header\">\r\n          <div className=\"c-header-left\">\r\n            <span className=\"c-header-title\">{pageTitle}</span>\r\n            <span className=\"c-header-description\">{pageDescription}</span>\r\n          </div>\r\n          <div className=\"c-header-right\" />\r\n        </div>\r\n        <div className=\"c-content\">\r\n          <div className=\"c-content-left\">\r\n          </div>\r\n          <div className=\"c-content-right\" />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ManageUsers;\r\n","import React, { Component } from \"react\";\r\nimport { ListGroup, ListGroupItem, Collapse } from \"reactstrap\";\r\nimport { languageManager } from \"../../services\";\r\n\r\nclass Tree extends Component {\r\n  state = {};\r\n  toggle = event => {\r\n    const id = event.target.getAttribute(\"id\");\r\n    this.setState(state => ({ [id]: !state[id] }));\r\n  };\r\n  mapper = (nodes, parentId, lvl) => {\r\n    return nodes.map((node, index) => {\r\n      const id = `${node.id}-${parentId ? parentId : \"top\"}`.replace(\r\n        /[^a-zA-Z0-9-_]/g,\r\n        \"\"\r\n      );\r\n      return (\r\n        <>\r\n          <ListGroupItem\r\n            key={index}\r\n            style={{ zIndex: 0, padding: 10 }}\r\n            className={`treeItemParent ${\r\n              parentId ? `rounded-0 ${lvl ? \"border-bottom-0\" : \"\"}` : \"\"\r\n            }`}\r\n          >\r\n            {\r\n              <div\r\n                className=\"treeItem\"\r\n                style={{\r\n                  paddingLeft: `${15 * lvl}px`\r\n                }}\r\n              >\r\n                {node.children && node.children.length > 0 ? (\r\n                  <button\r\n                    className=\"btnCategoryCollapse btn btn-primary btn-sm\"\r\n                    id={id}\r\n                    color=\"primary\"\r\n                    onClick={this.toggle}\r\n                  >\r\n                    {this.state[id] ? (\r\n                      <i className=\"icon-caret-down\" onClick={this.toggle} />\r\n                    ) : (\r\n                      <i className=\"icon-caret-right\" onClick={this.toggle} />\r\n                    )}\r\n                  </button>\r\n                ) : (\r\n                  <button className=\"btnCategoryCollapse btn btn-dark btn-sm\">\r\n                    <i className=\"icon-caret-circle\" />\r\n                  </button>\r\n                )}\r\n                <div className=\"treeItem-text\">\r\n                  <span className=\"treeItem-name\">{node.name}</span>\r\n                  <span className=\"treeItem-desc\">\r\n                    {node.description ||\r\n                      \"Lorem ipsum dolor sit amet, consectetur\"}\r\n                  </span>\r\n                </div>\r\n                {(node.children === undefined ||\r\n                  node.children.length === 0) && (\r\n                  <button className=\"btn btn-light treeItem-action\" size=\"xs\">\r\n                    <span style={{ fontSize: 12 }}>\r\n                      {languageManager.translate(\"ITEMS_CATEGORIES_CONTENT\")}\r\n                    </span>\r\n                  </button>\r\n                )}\r\n              </div>\r\n            }\r\n          </ListGroupItem>\r\n          {node.children && (\r\n            <Collapse isOpen={this.state[id]}>\r\n              {this.mapper(node.children, id, (lvl || 0) + 1)}\r\n            </Collapse>\r\n          )}\r\n        </>\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return <ListGroup>{this.mapper(this.props.data)}</ListGroup>;\r\n  }\r\n}\r\n\r\nexport default Tree;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\n\r\nimport \"./styles.scss\";\r\nimport Tree from \"./tree\";\r\nimport DataEntry from \"./DataEntry\";\r\n\r\nlet data = [\r\n  {\r\n    id: \"1\",\r\n    name: \"Sport\",\r\n    description: \"Lorem ipsum dolor sit amet, consectetur\",\r\n    children: [\r\n      {\r\n        id: \"2\",\r\n        parentId: \"1\",\r\n        name: \"Football\",\r\n        description: \"Lorem ipsum dolor sit amet, consectetur\",\r\n        children: [\r\n          {\r\n            id: \"3\",\r\n            parentId: \"2\",\r\n            name: \"Football\",\r\n            description: \"Lorem ipsum dolor sit amet, consectetur\"\r\n          },\r\n          {\r\n            id: \"4\",\r\n            parentId: \"2\",\r\n            name: \"Beach\",\r\n            description: \"Lorem ipsum dolor sit amet, consectetur\"\r\n          },\r\n          {\r\n            id: \"5\",\r\n            parentId: \"2\",\r\n            name: \"Footsall\",\r\n            description: \"Lorem ipsum dolor sit amet, consectetur\"\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        id: \"6\",\r\n        parentId: \"1\",\r\n        name: \"Wresling\",\r\n        description: \"Lorem ipsum dolor sit amet, consectetur\"\r\n      }\r\n    ]\r\n  },\r\n\r\n  {\r\n    id: \"7\",\r\n    name: \"Economic\",\r\n    description: \"Lorem ipsum dolor sit amet, consectetur\"\r\n  },\r\n  {\r\n    id: \"8\",\r\n    name: \"Political\",\r\n    description: \"Lorem ipsum dolor sit amet, consectetur\"\r\n  },\r\n  {\r\n    id: \"9\",\r\n    name: \"Accidents\",\r\n    description: \"Lorem ipsum dolor sit amet, consectetur\"\r\n  },\r\n  {\r\n    id: \"10\",\r\n    name: \"Others\",\r\n    description: \"Lorem ipsum dolor sit amet, consectetur\"\r\n  }\r\n];\r\n\r\nconst Products = props => {\r\n  const { name: pageTitle, desc: pageDescription } = props.component;\r\n  const [treeData, setTreeData] = useState(data);\r\n  const [dataEntryBox, toggleDataEntryBox] = useState(false);\r\n  const [gridData, setGridData] = useState(makeData());\r\n\r\n  function makeData(len = 5553) {\r\n    return range(len).map(d => {\r\n      return {\r\n        ...newPerson(),\r\n        children: range(10).map(newPerson)\r\n      };\r\n    });\r\n  }\r\n  function newPerson() {\r\n    const statusChance = Math.random();\r\n    return {\r\n      firstName: \"saeed\",\r\n      lastName: \"padyab\",\r\n      age: Math.floor(Math.random() * 30),\r\n      visits: Math.floor(Math.random() * 100),\r\n      progress: Math.floor(Math.random() * 100),\r\n      status:\r\n        statusChance > 0.66\r\n          ? \"relationship\"\r\n          : statusChance > 0.33\r\n          ? \"complicated\"\r\n          : \"single\"\r\n    };\r\n  }\r\n  function range(len) {\r\n    const arr = [];\r\n    for (let i = 0; i < len; i++) {\r\n      arr.push(i);\r\n    }\r\n    return arr;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"p-wrapper\">\r\n        <div className=\"p-header\">\r\n          <div className=\"p-header-left\">\r\n            <span className=\"p-header-title\">{pageTitle}</span>\r\n            <span className=\"p-header-description\">{pageDescription}</span>\r\n          </div>\r\n          <div className=\"p-header-right\" />\r\n        </div>\r\n        <div className=\"p-content\">\r\n          <div className=\"p-content-left\">\r\n            <Tree data={treeData} />\r\n          </div>\r\n          <div className=\"p-content-right\">\r\n            <div className=\"p-content-right-header\" />\r\n            <div className=\"p-content-right-body\">\r\n              <ReactTable\r\n                data={gridData}\r\n                defaultPageSize={10}\r\n                minRows={3}\r\n                columns={[\r\n                  {\r\n                    Header: \"Name\",\r\n                    columns: [\r\n                      {\r\n                        Header: \"First Name\",\r\n                        accessor: \"firstName\"\r\n                      },\r\n                      {\r\n                        Header: \"Last Name\",\r\n                        id: \"lastName\",\r\n                        accessor: d => d.lastName\r\n                      }\r\n                    ]\r\n                  },\r\n                  {\r\n                    Header: \"Info\",\r\n                    columns: [\r\n                      {\r\n                        Header: \"Age\",\r\n                        accessor: \"age\"\r\n                      }\r\n                    ]\r\n                  }\r\n                ]}\r\n                defaultPageSize={20}\r\n                style={{\r\n                  height:\"100%\", // This will force the table body to overflow and scroll, since there is not enough room\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* {dataEntryBox && <DataEntry />} */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n","import React from \"react\";\r\nimport \"./styles.scss\";\r\nconst Requests = props => {\r\n  const { name: pageTitle, desc: pageDescription } = props.component;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"c-wrapper\">\r\n        <div className=\"c-header\">\r\n          <div className=\"c-header-left\">\r\n            <span className=\"c-header-title\">{pageTitle}</span>\r\n            <span className=\"c-header-description\">{pageDescription}</span>\r\n          </div>\r\n          <div className=\"c-header-right\" />\r\n        </div>\r\n        <div className=\"c-content\">\r\n          <div className=\"c-content-left\" />\r\n          <div className=\"c-content-right\" />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Requests;\r\n","import React from \"react\";\r\nimport \"./styles.scss\";\r\nconst Quotes = props => {\r\n  const { name: pageTitle, desc: pageDescription } = props.component;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"c-wrapper\">\r\n        <div className=\"c-header\">\r\n          <div className=\"c-header-left\">\r\n            <span className=\"c-header-title\">{pageTitle}</span>\r\n            <span className=\"c-header-description\">{pageDescription}</span>\r\n          </div>\r\n          <div className=\"c-header-right\" />\r\n        </div>\r\n        <div className=\"c-content\">\r\n          <div className=\"c-content-left\">\r\n          </div>\r\n          <div className=\"c-content-right\" />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Quotes;\r\n","import Login from \"./Packages/Login\";\r\nimport Signup from \"./Packages/Signup\";\r\nimport Home from \"./Packages/Home\";\r\nconst routes = [\r\n  {\r\n    path: \"/login\",\r\n    component: Login\r\n  },\r\n  {\r\n    path: \"/signup\",\r\n    component: Signup\r\n  },\r\n  {\r\n    path: \"/home\",\r\n    component: Home\r\n  }\r\n];\r\nexport default routes;\r\n","import React from \"react\";\r\nimport SideBar from \"./components/SideBar\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { languageManager } from \"./../../services\";\r\nimport \"./styles.scss\";\r\n\r\nimport Categories from \"./../Categories\";\r\nimport ContentType from \"./../ContentType\";\r\nimport ManageUsers from \"./../ManageUsers\";\r\nimport Products from \"./../Products\";\r\nimport Requests from \"./../Requests\";\r\nimport Quotes from \"./../Quotes\";\r\n\r\nconst Home = props => {\r\n  function translate(key) {\r\n    return languageManager.translate(key);\r\n  }\r\n  const links = [\r\n    {\r\n      name: translate(\"HOME_SIDE_NAV_CONTENT_TYPE\"),\r\n      icon: \"item-type\",\r\n      path: \"/home/contentType\",\r\n      desc: translate(\"HOME_SIDE_NAV_CONTENT_TYPE_DEC\"),\r\n      component: ContentType\r\n    },\r\n    {\r\n      name: translate(\"HOME_SIDE_NAV_CATEGRIES\"),\r\n      icon: \"category\",\r\n      path: \"/home/categories\",\r\n      desc: translate(\"HOME_SIDE_NAV_CATEGORIES_DEC\"),\r\n      component: Categories\r\n    },\r\n    {\r\n      name: translate(\"HOME_SIDE_NAV_PRODUCTS\"),\r\n      icon: \"product\",\r\n      path: \"/home/products\",\r\n      desc: translate(\"HOME_SIDE_NAV_PRODUCTS_DESC\"),\r\n      component: Products\r\n    },\r\n    {\r\n      name: translate(\"HOME_SIDE_NAV_REQUESTS\"),\r\n      icon: \"request\",\r\n      path: \"/home/requests\",\r\n      desc: translate(\"HOME_SIDE_NAV_REQUESTS_DESC\"),\r\n      component: Requests\r\n    },\r\n    {\r\n      name: translate(\"HOME_SIDE_NAV_QUOTES\"),\r\n      icon: \"quote\",\r\n      path: \"/home/quotes\",\r\n      desc: translate(\"HOME_SIDE_NAV_QUOTES_DESC\"),\r\n      component: Quotes\r\n    },\r\n    {\r\n      name: translate(\"HOME_SIDE_NAV_MANAGET_USERS\"),\r\n      icon: \"users\",\r\n      path: \"/home/manageUsers\",\r\n      desc: translate(\"HOME_SIDE_NAV_MANAGE_USERS_DESC\"),\r\n      component: ManageUsers\r\n    }\r\n  ];\r\n  return (\r\n    <div className=\"page-wrapper\">\r\n      <SideBar links={links} />\r\n      <main className=\"main\">\r\n        {links.map(link => (\r\n          <Route\r\n            key={link.path}\r\n            path={link.path}\r\n            render={props => {\r\n              const Component = link.component;\r\n              const p = { ...props, component: link };\r\n              return <Component {...p} />;\r\n            }}\r\n          />\r\n        ))}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\nexport default Home;\r\n","import React, { Component } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./styles/app.scss\";\nimport \"animate.css\"\n\nimport Routes from \"./routes\";\n\nclass App extends Component {\n  state = {\n    loading: true\n  };\n  componentDidMount() {\n    this.setState({\n      loading: false\n    });\n  }\n  render() {\n    return (\n      <>\n        {this.state.loading ? (\n          <div className=\"loaderContainer\">\n            <div className=\"loader\">\n              <div className=\"text\">Loading</div>\n              <div className=\"dots\">\n                <div />\n                <div />\n                <div />\n                <div />\n              </div>\n            </div>\n          </div>\n        ) : (\n          undefined\n        )}\n\n        <div>\n          <Switch>\n            {Routes.map(route => (\n              <Route\n                key={route.path}\n                path={route.path}\n                render={props => {\n                  const Component = route.component;\n                  return <Component {...props} />;\n                }}\n              />\n            ))}\n            {/* <Route to=\"/not-found\" render={props=><NoutFound/>}/> */}\n            {/* اگه دقیقا / رو زد برو لاگین */}\n            <Redirect from=\"/\" to=\"/home\" exact />\n            {/* اگه هیچی نزد یا چرت و پرت زد برو اون روتی که نات فاند هست */}\n            {/* <Redirect to=\"/not-found\"/> */}\n          </Switch>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}